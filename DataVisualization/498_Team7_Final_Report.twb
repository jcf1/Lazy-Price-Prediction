<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10300.17.1003.0840                               -->
<workbook original-version='10.3' source-build='10.3.4 (10300.17.1003.0840)' source-platform='mac' version='10.3' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='498Team7FinalReport-Dashboard-ConsumerStaplesQuintileVarianceandCumulativePortfolioReturn' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='combined_DF_jacard.csv (combined_DF_jacard)' inline='true' name='federated.1l3kb9f0cns9a715jiw291mtalsi' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='combined_DF_jacard' name='excel-direct.1hhj5sb1c5slt219ofs0b12rv0ou'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/williamwtong/Desktop/MSPA/PREDICT498DL55/Final Data Viz/combined_DF_jacard.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1hhj5sb1c5slt219ofs0b12rv0ou' name='combined_DF_jacard.csv' table='[combined_DF_jacard#csv$]' type='table'>
          <columns gridOrigin='A1:O75:no:A1:O75:0' header='yes' outcome='2'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='real' name='Mkt.RF' ordinal='2' />
            <column datatype='real' name='SMB' ordinal='3' />
            <column datatype='real' name='HML' ordinal='4' />
            <column datatype='real' name='RF' ordinal='5' />
            <column datatype='real' name='Q1_return' ordinal='6' />
            <column datatype='real' name='Q5_return' ordinal='7' />
            <column datatype='real' name='Q1_adj_return' ordinal='8' />
            <column datatype='real' name='Q5_adj_return' ordinal='9' />
            <column datatype='real' name='Q1_adj_return_pct' ordinal='10' />
            <column datatype='real' name='Q5_adj_return_pct' ordinal='11' />
            <column datatype='real' name='Q5_Q1_adj_diff' ordinal='12' />
            <column datatype='real' name='Q5_Q1_adj_diff_pct' ordinal='13' />
            <column datatype='real' name='portfolio_return_value' ordinal='14' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[combined_DF_jacard.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[combined_DF_jacard.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mkt.RF</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mkt.RF]</local-name>
            <parent-name>[combined_DF_jacard.csv]</parent-name>
            <remote-alias>Mkt.RF</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SMB</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SMB]</local-name>
            <parent-name>[combined_DF_jacard.csv]</parent-name>
            <remote-alias>SMB</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HML</remote-name>
            <remote-type>5</remote-type>
            <local-name>[HML]</local-name>
            <parent-name>[combined_DF_jacard.csv]</parent-name>
            <remote-alias>HML</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RF</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RF]</local-name>
            <parent-name>[combined_DF_jacard.csv]</parent-name>
            <remote-alias>RF</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q1_return</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q1_return]</local-name>
            <parent-name>[combined_DF_jacard.csv]</parent-name>
            <remote-alias>Q1_return</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_return</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_return]</local-name>
            <parent-name>[combined_DF_jacard.csv]</parent-name>
            <remote-alias>Q5_return</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q1_adj_return</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q1_adj_return]</local-name>
            <parent-name>[combined_DF_jacard.csv]</parent-name>
            <remote-alias>Q1_adj_return</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_adj_return</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_adj_return]</local-name>
            <parent-name>[combined_DF_jacard.csv]</parent-name>
            <remote-alias>Q5_adj_return</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q1_adj_return_pct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q1_adj_return_pct]</local-name>
            <parent-name>[combined_DF_jacard.csv]</parent-name>
            <remote-alias>Q1_adj_return_pct</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_adj_return_pct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_adj_return_pct]</local-name>
            <parent-name>[combined_DF_jacard.csv]</parent-name>
            <remote-alias>Q5_adj_return_pct</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_Q1_adj_diff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_Q1_adj_diff]</local-name>
            <parent-name>[combined_DF_jacard.csv]</parent-name>
            <remote-alias>Q5_Q1_adj_diff</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_Q1_adj_diff_pct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_Q1_adj_diff_pct]</local-name>
            <parent-name>[combined_DF_jacard.csv]</parent-name>
            <remote-alias>Q5_Q1_adj_diff_pct</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>portfolio_return_value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[portfolio_return_value]</local-name>
            <parent-name>[combined_DF_jacard.csv]</parent-name>
            <remote-alias>portfolio_return_value</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[combined_DF_jacard.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O75:no:A1:O75:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Q1 adj return' datatype='real' name='[Q1_adj_return]' role='measure' type='quantitative' />
      <column caption='Q1 adj return pct' datatype='real' name='[Q1_adj_return_pct]' role='measure' type='quantitative' />
      <column caption='Q1 return' datatype='real' name='[Q1_return]' role='measure' type='quantitative' />
      <column caption='Q5 Q1 adj diff' datatype='real' name='[Q5_Q1_adj_diff]' role='measure' type='quantitative' />
      <column caption='Jaccard Quintile Variance %' datatype='real' name='[Q5_Q1_adj_diff_pct]' role='measure' type='quantitative' />
      <column caption='Q5 adj return' datatype='real' name='[Q5_adj_return]' role='measure' type='quantitative' />
      <column caption='Q5 adj return pct' datatype='real' name='[Q5_adj_return_pct]' role='measure' type='quantitative' />
      <column caption='Q5 return' datatype='real' name='[Q5_return]' role='measure' type='quantitative' />
      <column caption='Jaccard Return ($)' datatype='real' name='[portfolio_return_value]' role='measure' type='quantitative' />
      <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/williamwtong/Desktop/MSPA/PREDICT498DL55/Final Data Viz/combined_jaccard.tde' schema='Extract' tablename='Extract' update-time='11/14/2017 03:57:32 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='74' timestamp-start='2017-11-14 03:57:32.832' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>0</ordinal>
              <family>combined_DF_jacard.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>74</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2011-08-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2017-09-01#</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='Median' datatype='date'>#2014-09-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>16</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>1</ordinal>
              <family>combined_DF_jacard.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2775.0</statistic>
                <statistic aggregation='Avg' datatype='real'>37.5</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>74</statistic>
                <statistic aggregation='Stdev' datatype='real'>21.505813167606568</statistic>
                <statistic aggregation='StdevP' datatype='real'>21.360009363293827</statistic>
                <statistic aggregation='Var' datatype='real'>462.5</statistic>
                <statistic aggregation='VarP' datatype='real'>456.25</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='Median' datatype='integer'>38</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>137825.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HML</remote-name>
              <remote-type>5</remote-type>
              <local-name>[HML]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HML</remote-alias>
              <ordinal>2</ordinal>
              <family>combined_DF_jacard.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>71</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3.0600000000000005</statistic>
                <statistic aggregation='Avg' datatype='real'>0.041351351351351359</statistic>
                <statistic aggregation='Min' datatype='real'>-4.1399999999999997</statistic>
                <statistic aggregation='Max' datatype='real'>8.2699999999999996</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.2117199185585941</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.1967250343527813</statistic>
                <statistic aggregation='Var' datatype='real'>4.8917049981488345</statistic>
                <statistic aggregation='VarP' datatype='real'>4.8256008765522287</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>357.22100000000006</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Mkt.RF</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Mkt.RF]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Mkt.RF</remote-alias>
              <ordinal>3</ordinal>
              <family>combined_DF_jacard.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>71</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>83.44000000000004</statistic>
                <statistic aggregation='Avg' datatype='real'>1.127567567567568</statistic>
                <statistic aggregation='Min' datatype='real'>-7.5899999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>11.35</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.3471295454466987</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.3244368800984851</statistic>
                <statistic aggregation='Var' datatype='real'>11.203276194002223</statistic>
                <statistic aggregation='VarP' datatype='real'>11.05188056975895</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>911.92340000000036</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>4</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>74.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>74.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q1_adj_return</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q1_adj_return]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q1_adj_return</remote-alias>
              <ordinal>5</ordinal>
              <family>combined_DF_jacard.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-0.317858617585971</statistic>
                <statistic aggregation='Avg' datatype='real'>-0.0042953867241347435</statistic>
                <statistic aggregation='Min' datatype='real'>-0.225714035894996</statistic>
                <statistic aggregation='Max' datatype='real'>0.098237771817139705</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.051108935058435452</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.050762429808537853</statistic>
                <statistic aggregation='Var' datatype='real'>0.0026121232428073723</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0025768242800667325</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.19205032241106881</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q1_adj_return_pct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q1_adj_return_pct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q1_adj_return_pct</remote-alias>
              <ordinal>6</ordinal>
              <family>combined_DF_jacard.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-31.7858617585971</statistic>
                <statistic aggregation='Avg' datatype='real'>-0.42953867241347432</statistic>
                <statistic aggregation='Min' datatype='real'>-22.571403589499599</statistic>
                <statistic aggregation='Max' datatype='real'>9.8237771817139699</statistic>
                <statistic aggregation='Stdev' datatype='real'>5.1108935058435447</statistic>
                <statistic aggregation='StdevP' datatype='real'>5.0762429808537846</statistic>
                <statistic aggregation='Var' datatype='real'>26.121232428073721</statistic>
                <statistic aggregation='VarP' datatype='real'>25.76824280066732</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1920.5032241106878</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q1_return</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q1_return]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q1_return</remote-alias>
              <ordinal>7</ordinal>
              <family>combined_DF_jacard.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.48214138241402915</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0065154240866760697</statistic>
                <statistic aggregation='Min' datatype='real'>-0.21571403589499599</statistic>
                <statistic aggregation='Max' datatype='real'>0.098237771817139705</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.04537453728229205</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.045066909753719755</statistic>
                <statistic aggregation='Var' datatype='real'>0.0020588486335821115</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0020310263547499209</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.1534373058276578</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_Q1_adj_diff</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_Q1_adj_diff]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_Q1_adj_diff</remote-alias>
              <ordinal>8</ordinal>
              <family>combined_DF_jacard.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.2910779925880822</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0039334863863254351</statistic>
                <statistic aggregation='Min' datatype='real'>-0.0843879920297263</statistic>
                <statistic aggregation='Max' datatype='real'>0.14973648003095341</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.039238921395298977</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.038972891742201241</statistic>
                <statistic aggregation='Var' datatype='real'>0.0015396929522664519</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0015188862907493377</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.11354253683665516</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_Q1_adj_diff_pct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_Q1_adj_diff_pct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_Q1_adj_diff_pct</remote-alias>
              <ordinal>9</ordinal>
              <family>combined_DF_jacard.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>29.107799258808228</statistic>
                <statistic aggregation='Avg' datatype='real'>0.3933486386325436</statistic>
                <statistic aggregation='Min' datatype='real'>-8.4387992029726302</statistic>
                <statistic aggregation='Max' datatype='real'>14.973648003095342</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.9238921395298987</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.8972891742201252</statistic>
                <statistic aggregation='Var' datatype='real'>15.396929522664525</statistic>
                <statistic aggregation='VarP' datatype='real'>15.188862907493384</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1135.425368366552</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_adj_return</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_adj_return]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_adj_return</remote-alias>
              <ordinal>10</ordinal>
              <family>combined_DF_jacard.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-0.026780624997888705</statistic>
                <statistic aggregation='Avg' datatype='real'>-0.0003619003378093068</statistic>
                <statistic aggregation='Min' datatype='real'>-0.13726849095553501</statistic>
                <statistic aggregation='Max' datatype='real'>0.093833461618824707</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.047488667410182067</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.04716670663073215</statistic>
                <statistic aggregation='Var' datatype='real'>0.0022551735323948882</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0022246982143895519</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.16463735978206032</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_adj_return_pct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_adj_return_pct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_adj_return_pct</remote-alias>
              <ordinal>11</ordinal>
              <family>combined_DF_jacard.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-2.6780624997889007</statistic>
                <statistic aggregation='Avg' datatype='real'>-0.036190033780931087</statistic>
                <statistic aggregation='Min' datatype='real'>-13.726849095553501</statistic>
                <statistic aggregation='Max' datatype='real'>9.3833461618824714</statistic>
                <statistic aggregation='Stdev' datatype='real'>4.7488667410182064</statistic>
                <statistic aggregation='StdevP' datatype='real'>4.7166706630732147</statistic>
                <statistic aggregation='Var' datatype='real'>22.551735323948883</statistic>
                <statistic aggregation='VarP' datatype='real'>22.246982143895519</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1646.3735978206032</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_return</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_return]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_return</remote-alias>
              <ordinal>12</ordinal>
              <family>combined_DF_jacard.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.77321937500211135</statistic>
                <statistic aggregation='Avg' datatype='real'>0.010448910473001505</statistic>
                <statistic aggregation='Min' datatype='real'>-0.094180053128055205</statistic>
                <statistic aggregation='Max' datatype='real'>0.093833461618824707</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.040721088442365348</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.040445010083254726</statistic>
                <statistic aggregation='Var' datatype='real'>0.0016582070439309406</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0016357988406345766</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.12912841423234592</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>RF</remote-name>
              <remote-type>5</remote-type>
              <local-name>[RF]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>RF</remote-alias>
              <ordinal>13</ordinal>
              <family>combined_DF_jacard.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.79999999999999993</statistic>
                <statistic aggregation='Avg' datatype='real'>0.01081081081081081</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>0.089999999999999997</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.019567708705699665</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.019435044744158702</statistic>
                <statistic aggregation='Var' datatype='real'>0.00038289522399111446</statistic>
                <statistic aggregation='VarP' datatype='real'>0.00037772096420745076</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.036600000000000008</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SMB</remote-name>
              <remote-type>5</remote-type>
              <local-name>[SMB]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SMB</remote-alias>
              <ordinal>14</ordinal>
              <family>combined_DF_jacard.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>73</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-3.2400000000000038</statistic>
                <statistic aggregation='Avg' datatype='real'>-0.043783783783783836</statistic>
                <statistic aggregation='Min' datatype='real'>-4.3600000000000003</statistic>
                <statistic aggregation='Max' datatype='real'>5.4800000000000004</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.2606107204298738</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.2452843693386577</statistic>
                <statistic aggregation='Var' datatype='real'>5.1103608293224738</statistic>
                <statistic aggregation='VarP' datatype='real'>5.0413018991964949</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>373.19820000000004</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>portfolio_return_value</remote-name>
              <remote-type>5</remote-type>
              <local-name>[portfolio_return_value]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>portfolio_return_value</remote-alias>
              <ordinal>15</ordinal>
              <family>combined_DF_jacard.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>806537.09285798902</statistic>
                <statistic aggregation='Avg' datatype='real'>10899.149903486337</statistic>
                <statistic aggregation='Min' datatype='real'>9257.0755520775874</statistic>
                <statistic aggregation='Max' datatype='real'>13225.664130199879</statistic>
                <statistic aggregation='Stdev' datatype='real'>961.88226467767561</statistic>
                <statistic aggregation='StdevP' datatype='real'>955.36095379312803</statistic>
                <statistic aggregation='Var' datatype='real'>925217.4911014539</statistic>
                <statistic aggregation='VarP' datatype='real'>912714.55203251529</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>8858109554.6317081</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='quantitative' column='[Q5_Q1_adj_diff_pct]' included-values='in-range'>
          <min>-8.4387992029726302</min>
          <max>14.973648003095342</max>
        </filter>
        <filter class='quantitative' column='[none:Date:qk]' included-values='in-range'>
          <min>#2011-08-01#</min>
          <max>#2017-09-01#</max>
        </filter>
        <filter class='quantitative' column='[portfolio_return_value]' included-values='in-range'>
          <min>925.70755520775833</min>
          <max>13225.664130199879</max>
        </filter>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.141463' measure-ordering='alphabetic' measure-percentage='0.858537' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='combined_DF_files_N_POSNEG.csv (combined_DF_files_N_POSNEG)' inline='true' name='federated.1pvbgg10wgdmp61cc5e1k1c99tvf' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='combined_DF_files_N_POSNEG' name='excel-direct.12jkb410rvst2n14n4v2d1eeyc0z'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/williamwtong/Desktop/MSPA/PREDICT498DL55/Final Data Viz/combined_DF_files_N_POSNEG.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.12jkb410rvst2n14n4v2d1eeyc0z' name='combined_DF_files_N_POSNEG.csv' table='[combined_DF_files_N_POSNEG#csv$]' type='table'>
          <columns gridOrigin='A1:O145:no:A1:O145:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='real' name='Mkt.RF' ordinal='2' />
            <column datatype='real' name='SMB' ordinal='3' />
            <column datatype='real' name='HML' ordinal='4' />
            <column datatype='real' name='RF' ordinal='5' />
            <column datatype='real' name='Q1_return' ordinal='6' />
            <column datatype='real' name='Q5_return' ordinal='7' />
            <column datatype='real' name='Q1_adj_return' ordinal='8' />
            <column datatype='real' name='Q5_adj_return' ordinal='9' />
            <column datatype='real' name='Q1_adj_return_pct' ordinal='10' />
            <column datatype='real' name='Q5_adj_return_pct' ordinal='11' />
            <column datatype='real' name='Q5_Q1_adj_diff' ordinal='12' />
            <column datatype='real' name='Q5_Q1_adj_diff_pct' ordinal='13' />
            <column datatype='real' name='portfolio_return_value' ordinal='14' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[combined_DF_files_N_POSNEG.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[combined_DF_files_N_POSNEG.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mkt.RF</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mkt.RF]</local-name>
            <parent-name>[combined_DF_files_N_POSNEG.csv]</parent-name>
            <remote-alias>Mkt.RF</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SMB</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SMB]</local-name>
            <parent-name>[combined_DF_files_N_POSNEG.csv]</parent-name>
            <remote-alias>SMB</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HML</remote-name>
            <remote-type>5</remote-type>
            <local-name>[HML]</local-name>
            <parent-name>[combined_DF_files_N_POSNEG.csv]</parent-name>
            <remote-alias>HML</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RF</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RF]</local-name>
            <parent-name>[combined_DF_files_N_POSNEG.csv]</parent-name>
            <remote-alias>RF</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q1_return</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q1_return]</local-name>
            <parent-name>[combined_DF_files_N_POSNEG.csv]</parent-name>
            <remote-alias>Q1_return</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_return</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_return]</local-name>
            <parent-name>[combined_DF_files_N_POSNEG.csv]</parent-name>
            <remote-alias>Q5_return</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q1_adj_return</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q1_adj_return]</local-name>
            <parent-name>[combined_DF_files_N_POSNEG.csv]</parent-name>
            <remote-alias>Q1_adj_return</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_adj_return</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_adj_return]</local-name>
            <parent-name>[combined_DF_files_N_POSNEG.csv]</parent-name>
            <remote-alias>Q5_adj_return</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q1_adj_return_pct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q1_adj_return_pct]</local-name>
            <parent-name>[combined_DF_files_N_POSNEG.csv]</parent-name>
            <remote-alias>Q1_adj_return_pct</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_adj_return_pct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_adj_return_pct]</local-name>
            <parent-name>[combined_DF_files_N_POSNEG.csv]</parent-name>
            <remote-alias>Q5_adj_return_pct</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_Q1_adj_diff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_Q1_adj_diff]</local-name>
            <parent-name>[combined_DF_files_N_POSNEG.csv]</parent-name>
            <remote-alias>Q5_Q1_adj_diff</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_Q1_adj_diff_pct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_Q1_adj_diff_pct]</local-name>
            <parent-name>[combined_DF_files_N_POSNEG.csv]</parent-name>
            <remote-alias>Q5_Q1_adj_diff_pct</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>portfolio_return_value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[portfolio_return_value]</local-name>
            <parent-name>[combined_DF_files_N_POSNEG.csv]</parent-name>
            <remote-alias>portfolio_return_value</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[combined_DF_files_N_POSNEG.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O145:no:A1:O145:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Q1 adj return' datatype='real' name='[Q1_adj_return]' role='measure' type='quantitative' />
      <column caption='Q1 adj return pct' datatype='real' name='[Q1_adj_return_pct]' role='measure' type='quantitative' />
      <column caption='Q1 return' datatype='real' name='[Q1_return]' role='measure' type='quantitative' />
      <column caption='Q5 Q1 adj diff' datatype='real' name='[Q5_Q1_adj_diff]' role='measure' type='quantitative' />
      <column caption='N-Positive Negative Quintile Variance %' datatype='real' name='[Q5_Q1_adj_diff_pct]' role='measure' type='quantitative' />
      <column caption='Q5 adj return' datatype='real' name='[Q5_adj_return]' role='measure' type='quantitative' />
      <column caption='Q5 adj return pct' datatype='real' name='[Q5_adj_return_pct]' role='measure' type='quantitative' />
      <column caption='Q5 return' datatype='real' name='[Q5_return]' role='measure' type='quantitative' />
      <column caption='N-Positive Negative Return ($)' datatype='real' name='[portfolio_return_value]' role='measure' type='quantitative' />
      <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/williamwtong/Desktop/MSPA/PREDICT498DL55/Final Data Viz/combined_npositivenegative.tde' schema='Extract' tablename='Extract' update-time='11/14/2017 03:57:59 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='144' timestamp-start='2017-11-14 03:57:59.142' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>0</ordinal>
              <family>combined_DF_files_N_POSNEG.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2005-02-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2017-01-01#</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='Median' datatype='date'>#2011-02-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>2</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>1</ordinal>
              <family>combined_DF_files_N_POSNEG.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>10440.0</statistic>
                <statistic aggregation='Avg' datatype='real'>72.5</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>144</statistic>
                <statistic aggregation='Stdev' datatype='real'>41.71330722922842</statistic>
                <statistic aggregation='StdevP' datatype='real'>41.568217025350833</statistic>
                <statistic aggregation='Var' datatype='real'>1740.0</statistic>
                <statistic aggregation='VarP' datatype='real'>1727.9166666666667</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='Median' datatype='integer'>73</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1005720.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HML</remote-name>
              <remote-type>5</remote-type>
              <local-name>[HML]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HML</remote-alias>
              <ordinal>2</ordinal>
              <family>combined_DF_files_N_POSNEG.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>123</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>5.4599999999999991</statistic>
                <statistic aggregation='Avg' datatype='real'>0.037916666666666661</statistic>
                <statistic aggregation='Min' datatype='real'>-11.1</statistic>
                <statistic aggregation='Max' datatype='real'>8.2699999999999996</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.6042168265565526</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.5951586536279434</statistic>
                <statistic aggregation='Var' datatype='real'>6.7819452797202811</statistic>
                <statistic aggregation='VarP' datatype='real'>6.7348484375000011</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>970.02520000000004</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Mkt.RF</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Mkt.RF]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Mkt.RF</remote-alias>
              <ordinal>3</ordinal>
              <family>combined_DF_files_N_POSNEG.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>137</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>94.159999999999968</statistic>
                <statistic aggregation='Avg' datatype='real'>0.65388888888888863</statistic>
                <statistic aggregation='Min' datatype='real'>-17.23</statistic>
                <statistic aggregation='Max' datatype='real'>11.35</statistic>
                <statistic aggregation='Stdev' datatype='real'>4.2197731538656758</statistic>
                <statistic aggregation='StdevP' datatype='real'>4.2050956375554236</statistic>
                <statistic aggregation='Var' datatype='real'>17.80648547008547</statistic>
                <statistic aggregation='VarP' datatype='real'>17.682829320987654</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2607.8975999999998</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>4</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>144.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>144.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q1_adj_return</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q1_adj_return]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q1_adj_return</remote-alias>
              <ordinal>5</ordinal>
              <family>combined_DF_files_N_POSNEG.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-13.018453108285284</statistic>
                <statistic aggregation='Avg' datatype='real'>-0.090405924363092249</statistic>
                <statistic aggregation='Min' datatype='real'>-0.46557101934029799</statistic>
                <statistic aggregation='Max' datatype='real'>0.13703205611659</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.15944747385901062</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.15889287226957444</statistic>
                <statistic aggregation='Var' datatype='real'>0.025423496920019877</statistic>
                <statistic aggregation='VarP' datatype='real'>0.025246944858075295</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4.8125053465949446</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q1_adj_return_pct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q1_adj_return_pct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q1_adj_return_pct</remote-alias>
              <ordinal>6</ordinal>
              <family>combined_DF_files_N_POSNEG.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-1301.845310828528</statistic>
                <statistic aggregation='Avg' datatype='real'>-9.0405924363092218</statistic>
                <statistic aggregation='Min' datatype='real'>-46.557101934029802</statistic>
                <statistic aggregation='Max' datatype='real'>13.703205611659</statistic>
                <statistic aggregation='Stdev' datatype='real'>15.944747385901072</statistic>
                <statistic aggregation='StdevP' datatype='real'>15.889287226957451</statistic>
                <statistic aggregation='Var' datatype='real'>254.23496920019906</statistic>
                <statistic aggregation='VarP' datatype='real'>252.46944858075324</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>48125.053465949488</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q1_return</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q1_return]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q1_return</remote-alias>
              <ordinal>7</ordinal>
              <family>combined_DF_files_N_POSNEG.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1.1715468917147167</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0081357423035744222</statistic>
                <statistic aggregation='Min' datatype='real'>-0.18107779382365999</statistic>
                <statistic aggregation='Max' datatype='real'>0.14703205611659001</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.045161872131881838</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.045004786883303963</statistic>
                <statistic aggregation='Var' datatype='real'>0.0020395946944564451</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0020254308424116083</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.30119344491481614</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_Q1_adj_diff</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_Q1_adj_diff]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_Q1_adj_diff</remote-alias>
              <ordinal>8</ordinal>
              <family>combined_DF_files_N_POSNEG.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.32655858701372958</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0022677679653731221</statistic>
                <statistic aggregation='Min' datatype='real'>-0.038795822172511887</statistic>
                <statistic aggregation='Max' datatype='real'>0.11865718564395029</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.017346755504256555</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.017286418780560774</statistic>
                <statistic aggregation='Var' datatype='real'>0.00030090992652445511</statistic>
                <statistic aggregation='VarP' datatype='real'>0.00029882027425692418</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.043770678595444333</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_Q1_adj_diff_pct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_Q1_adj_diff_pct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_Q1_adj_diff_pct</remote-alias>
              <ordinal>9</ordinal>
              <family>combined_DF_files_N_POSNEG.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>32.655858701372964</statistic>
                <statistic aggregation='Avg' datatype='real'>0.22677679653731225</statistic>
                <statistic aggregation='Min' datatype='real'>-3.8795822172511887</statistic>
                <statistic aggregation='Max' datatype='real'>11.86571856439503</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.7346755504256555</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.7286418780560771</statistic>
                <statistic aggregation='Var' datatype='real'>3.0090992652445507</statistic>
                <statistic aggregation='VarP' datatype='real'>2.9882027425692415</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>437.70678595444326</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_adj_return</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_adj_return]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_adj_return</remote-alias>
              <ordinal>10</ordinal>
              <family>combined_DF_files_N_POSNEG.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-12.691894521271555</statistic>
                <statistic aggregation='Avg' datatype='real'>-0.088138156397719131</statistic>
                <statistic aggregation='Min' datatype='real'>-0.46248986918317397</statistic>
                <statistic aggregation='Max' datatype='real'>0.20120281051952199</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.1613310553248968</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.16076990212790276</statistic>
                <statistic aggregation='Var' datatype='real'>0.026027709412244911</statistic>
                <statistic aggregation='VarP' datatype='real'>0.025846961430215431</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4.840602630250209</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_adj_return_pct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_adj_return_pct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_adj_return_pct</remote-alias>
              <ordinal>11</ordinal>
              <family>combined_DF_files_N_POSNEG.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-1269.1894521271563</statistic>
                <statistic aggregation='Avg' datatype='real'>-8.813815639771919</statistic>
                <statistic aggregation='Min' datatype='real'>-46.248986918317399</statistic>
                <statistic aggregation='Max' datatype='real'>20.120281051952198</statistic>
                <statistic aggregation='Stdev' datatype='real'>16.133105532489676</statistic>
                <statistic aggregation='StdevP' datatype='real'>16.076990212790271</statistic>
                <statistic aggregation='Var' datatype='real'>260.277094122449</statistic>
                <statistic aggregation='VarP' datatype='real'>258.46961430215418</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>48406.026302502083</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_return</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_return]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_return</remote-alias>
              <ordinal>12</ordinal>
              <family>combined_DF_files_N_POSNEG.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1.4981054787284434</statistic>
                <statistic aggregation='Avg' datatype='real'>0.010403510268947523</statistic>
                <statistic aggregation='Min' datatype='real'>-0.21638390406626101</statistic>
                <statistic aggregation='Max' datatype='real'>0.211202810519522</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.050729779590208961</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.050553327648315195</statistic>
                <statistic aggregation='Var' datatype='real'>0.0025735105372711817</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0025556389363179098</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.38359756256169691</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>RF</remote-name>
              <remote-type>5</remote-type>
              <local-name>[RF]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>RF</remote-alias>
              <ordinal>13</ordinal>
              <family>combined_DF_files_N_POSNEG.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>29</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>14.189999999999992</statistic>
                <statistic aggregation='Avg' datatype='real'>0.098541666666666611</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>0.44</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.15014197826178924</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.14961974371162814</statistic>
                <statistic aggregation='Var' datatype='real'>0.022542613636363593</statistic>
                <statistic aggregation='VarP' datatype='real'>0.02238606770833329</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4.6218999999999921</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SMB</remote-name>
              <remote-type>5</remote-type>
              <local-name>[SMB]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SMB</remote-alias>
              <ordinal>14</ordinal>
              <family>combined_DF_files_N_POSNEG.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>139</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>15.719999999999992</statistic>
                <statistic aggregation='Avg' datatype='real'>0.10916666666666661</statistic>
                <statistic aggregation='Min' datatype='real'>-4.3600000000000003</statistic>
                <statistic aggregation='Max' datatype='real'>6.1100000000000003</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.2733381696453421</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.2654308824886566</statistic>
                <statistic aggregation='Var' datatype='real'>5.1680664335664348</statistic>
                <statistic aggregation='VarP' datatype='real'>5.1321770833333344</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>740.74960000000021</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>portfolio_return_value</remote-name>
              <remote-type>5</remote-type>
              <local-name>[portfolio_return_value]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>portfolio_return_value</remote-alias>
              <ordinal>15</ordinal>
              <family>combined_DF_files_N_POSNEG.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1617348.3507549721</statistic>
                <statistic aggregation='Avg' datatype='real'>11231.585769131751</statistic>
                <statistic aggregation='Min' datatype='real'>9244.9214934985957</statistic>
                <statistic aggregation='Max' datatype='real'>13467.016796760248</statistic>
                <statistic aggregation='Stdev' datatype='real'>1077.6537488162635</statistic>
                <statistic aggregation='StdevP' datatype='real'>1073.9053765937981</statistic>
                <statistic aggregation='Var' datatype='real'>1161337.6023377462</statistic>
                <statistic aggregation='VarP' datatype='real'>1153272.7578770672</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>18331457997.202549</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='quantitative' column='[Q5_Q1_adj_diff_pct]' included-values='in-range'>
          <min>-3.8795822172511887</min>
          <max>11.86571856439503</max>
        </filter>
        <filter class='quantitative' column='[none:Date:qk]' included-values='in-range'>
          <min>#2005-02-01#</min>
          <max>#2017-01-01#</max>
        </filter>
        <filter class='quantitative' column='[portfolio_return_value]' included-values='in-range'>
          <min>924.49214934985889</min>
          <max>13467.016796760248</max>
        </filter>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.141463' measure-ordering='alphabetic' measure-percentage='0.858537' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='combined_DF_filesizeQ1Q52.csv (combined_DF_filesizeQ1Q52)' inline='true' name='federated.1ttep9r0g6bkro19knk1u0on0rdg' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='combined_DF_filesizeQ1Q52' name='excel-direct.0jmkbxs0uyq96u1aoywct09lpddh'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/williamwtong/Desktop/MSPA/PREDICT498DL55/Final Data Viz/combined_DF_filesizeQ1Q52.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0jmkbxs0uyq96u1aoywct09lpddh' name='combined_DF_filesizeQ1Q52.csv' table='[combined_DF_filesizeQ1Q52#csv$]' type='table'>
          <columns gridOrigin='A1:O145:no:A1:O145:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='real' name='Mkt.RF' ordinal='2' />
            <column datatype='real' name='SMB' ordinal='3' />
            <column datatype='real' name='HML' ordinal='4' />
            <column datatype='real' name='RF' ordinal='5' />
            <column datatype='real' name='Q1_return' ordinal='6' />
            <column datatype='real' name='Q5_return' ordinal='7' />
            <column datatype='real' name='Q1_adj_return' ordinal='8' />
            <column datatype='real' name='Q5_adj_return' ordinal='9' />
            <column datatype='real' name='Q1_adj_return_pct' ordinal='10' />
            <column datatype='real' name='Q5_adj_return_pct' ordinal='11' />
            <column datatype='real' name='Q5_Q1_adj_diff' ordinal='12' />
            <column datatype='real' name='Q5_Q1_adj_diff_pct' ordinal='13' />
            <column datatype='real' name='portfolio_return_value' ordinal='14' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[combined_DF_filesizeQ1Q52.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[combined_DF_filesizeQ1Q52.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mkt.RF</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mkt.RF]</local-name>
            <parent-name>[combined_DF_filesizeQ1Q52.csv]</parent-name>
            <remote-alias>Mkt.RF</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SMB</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SMB]</local-name>
            <parent-name>[combined_DF_filesizeQ1Q52.csv]</parent-name>
            <remote-alias>SMB</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HML</remote-name>
            <remote-type>5</remote-type>
            <local-name>[HML]</local-name>
            <parent-name>[combined_DF_filesizeQ1Q52.csv]</parent-name>
            <remote-alias>HML</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RF</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RF]</local-name>
            <parent-name>[combined_DF_filesizeQ1Q52.csv]</parent-name>
            <remote-alias>RF</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q1_return</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q1_return]</local-name>
            <parent-name>[combined_DF_filesizeQ1Q52.csv]</parent-name>
            <remote-alias>Q1_return</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_return</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_return]</local-name>
            <parent-name>[combined_DF_filesizeQ1Q52.csv]</parent-name>
            <remote-alias>Q5_return</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q1_adj_return</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q1_adj_return]</local-name>
            <parent-name>[combined_DF_filesizeQ1Q52.csv]</parent-name>
            <remote-alias>Q1_adj_return</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_adj_return</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_adj_return]</local-name>
            <parent-name>[combined_DF_filesizeQ1Q52.csv]</parent-name>
            <remote-alias>Q5_adj_return</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q1_adj_return_pct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q1_adj_return_pct]</local-name>
            <parent-name>[combined_DF_filesizeQ1Q52.csv]</parent-name>
            <remote-alias>Q1_adj_return_pct</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_adj_return_pct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_adj_return_pct]</local-name>
            <parent-name>[combined_DF_filesizeQ1Q52.csv]</parent-name>
            <remote-alias>Q5_adj_return_pct</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_Q1_adj_diff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_Q1_adj_diff]</local-name>
            <parent-name>[combined_DF_filesizeQ1Q52.csv]</parent-name>
            <remote-alias>Q5_Q1_adj_diff</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_Q1_adj_diff_pct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_Q1_adj_diff_pct]</local-name>
            <parent-name>[combined_DF_filesizeQ1Q52.csv]</parent-name>
            <remote-alias>Q5_Q1_adj_diff_pct</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>portfolio_return_value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[portfolio_return_value]</local-name>
            <parent-name>[combined_DF_filesizeQ1Q52.csv]</parent-name>
            <remote-alias>portfolio_return_value</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[combined_DF_filesizeQ1Q52.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O145:no:A1:O145:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Q1 adj return' datatype='real' name='[Q1_adj_return]' role='measure' type='quantitative' />
      <column caption='Q1 adj return pct' datatype='real' name='[Q1_adj_return_pct]' role='measure' type='quantitative' />
      <column caption='Q1 return' datatype='real' name='[Q1_return]' role='measure' type='quantitative' />
      <column caption='Q5 Q1 adj diff' datatype='real' name='[Q5_Q1_adj_diff]' role='measure' type='quantitative' />
      <column caption='Filesize Quintile Variance %' datatype='real' name='[Q5_Q1_adj_diff_pct]' role='measure' type='quantitative' />
      <column caption='Q5 adj return' datatype='real' name='[Q5_adj_return]' role='measure' type='quantitative' />
      <column caption='Q5 adj return pct' datatype='real' name='[Q5_adj_return_pct]' role='measure' type='quantitative' />
      <column caption='Q5 return' datatype='real' name='[Q5_return]' role='measure' type='quantitative' />
      <column caption='Filesize Return ($)' datatype='real' name='[portfolio_return_value]' role='measure' type='quantitative' />
      <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/williamwtong/Desktop/MSPA/PREDICT498DL55/Final Data Viz/combined_filesize.tde' schema='Extract' tablename='Extract' update-time='11/14/2017 04:01:30 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='144' timestamp-start='2017-11-14 04:01:30.530' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>0</ordinal>
              <family>combined_DF_filesizeQ1Q52.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2005-02-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2017-01-01#</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='Median' datatype='date'>#2011-02-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>2</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>1</ordinal>
              <family>combined_DF_filesizeQ1Q52.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>10440.0</statistic>
                <statistic aggregation='Avg' datatype='real'>72.5</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>144</statistic>
                <statistic aggregation='Stdev' datatype='real'>41.71330722922842</statistic>
                <statistic aggregation='StdevP' datatype='real'>41.568217025350833</statistic>
                <statistic aggregation='Var' datatype='real'>1740.0</statistic>
                <statistic aggregation='VarP' datatype='real'>1727.9166666666667</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='Median' datatype='integer'>73</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1005720.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HML</remote-name>
              <remote-type>5</remote-type>
              <local-name>[HML]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HML</remote-alias>
              <ordinal>2</ordinal>
              <family>combined_DF_filesizeQ1Q52.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>123</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>5.4599999999999991</statistic>
                <statistic aggregation='Avg' datatype='real'>0.037916666666666661</statistic>
                <statistic aggregation='Min' datatype='real'>-11.1</statistic>
                <statistic aggregation='Max' datatype='real'>8.2699999999999996</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.6042168265565526</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.5951586536279434</statistic>
                <statistic aggregation='Var' datatype='real'>6.7819452797202811</statistic>
                <statistic aggregation='VarP' datatype='real'>6.7348484375000011</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>970.02520000000004</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Mkt.RF</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Mkt.RF]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Mkt.RF</remote-alias>
              <ordinal>3</ordinal>
              <family>combined_DF_filesizeQ1Q52.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>137</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>94.159999999999968</statistic>
                <statistic aggregation='Avg' datatype='real'>0.65388888888888863</statistic>
                <statistic aggregation='Min' datatype='real'>-17.23</statistic>
                <statistic aggregation='Max' datatype='real'>11.35</statistic>
                <statistic aggregation='Stdev' datatype='real'>4.2197731538656758</statistic>
                <statistic aggregation='StdevP' datatype='real'>4.2050956375554236</statistic>
                <statistic aggregation='Var' datatype='real'>17.80648547008547</statistic>
                <statistic aggregation='VarP' datatype='real'>17.682829320987654</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2607.8975999999998</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>4</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>144.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>144.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q1_adj_return</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q1_adj_return]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q1_adj_return</remote-alias>
              <ordinal>5</ordinal>
              <family>combined_DF_filesizeQ1Q52.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-12.882435288810369</statistic>
                <statistic aggregation='Avg' datatype='real'>-0.089461356172294226</statistic>
                <statistic aggregation='Min' datatype='real'>-0.45803758889129398</statistic>
                <statistic aggregation='Max' datatype='real'>0.15980876988605999</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.16034402923037977</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.15978630917802944</statistic>
                <statistic aggregation='Var' datatype='real'>0.025710207709832879</statistic>
                <statistic aggregation='VarP' datatype='real'>0.025531664600736817</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4.8290398342448988</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q1_adj_return_pct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q1_adj_return_pct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q1_adj_return_pct</remote-alias>
              <ordinal>6</ordinal>
              <family>combined_DF_filesizeQ1Q52.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-1288.2435288810361</statistic>
                <statistic aggregation='Avg' datatype='real'>-8.9461356172294177</statistic>
                <statistic aggregation='Min' datatype='real'>-45.803758889129398</statistic>
                <statistic aggregation='Max' datatype='real'>15.980876988605999</statistic>
                <statistic aggregation='Stdev' datatype='real'>16.034402923037984</statistic>
                <statistic aggregation='StdevP' datatype='real'>15.978630917802953</statistic>
                <statistic aggregation='Var' datatype='real'>257.10207709832906</statistic>
                <statistic aggregation='VarP' datatype='real'>255.3166460073684</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>48290.398342449007</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q1_return</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q1_return]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q1_return</remote-alias>
              <ordinal>7</ordinal>
              <family>combined_DF_filesizeQ1Q52.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1.3075647111896298</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0090803104943724296</statistic>
                <statistic aggregation='Min' datatype='real'>-0.18706153169216899</statistic>
                <statistic aggregation='Max' datatype='real'>0.16980876988606</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.047410170768628052</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.047245265327184857</statistic>
                <statistic aggregation='Var' datatype='real'>0.002247724292310474</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0022321150958360958</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.33329766736948402</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_Q1_adj_diff</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_Q1_adj_diff]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_Q1_adj_diff</remote-alias>
              <ordinal>8</ordinal>
              <family>combined_DF_filesizeQ1Q52.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.24030143983510519</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0016687599988548971</statistic>
                <statistic aggregation='Min' datatype='real'>-0.060360839615961705</statistic>
                <statistic aggregation='Max' datatype='real'>0.14342489009652351</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.019080516830028968</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.019014149613885076</statistic>
                <statistic aggregation='Var' datatype='real'>0.00036406612250101868</statistic>
                <statistic aggregation='VarP' datatype='real'>0.00036153788553920603</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.052462460948109732</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_Q1_adj_diff_pct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_Q1_adj_diff_pct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_Q1_adj_diff_pct</remote-alias>
              <ordinal>9</ordinal>
              <family>combined_DF_filesizeQ1Q52.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>24.030143983510516</statistic>
                <statistic aggregation='Avg' datatype='real'>0.16687599988548971</statistic>
                <statistic aggregation='Min' datatype='real'>-6.0360839615961703</statistic>
                <statistic aggregation='Max' datatype='real'>14.342489009652351</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.9080516830028968</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.9014149613885079</statistic>
                <statistic aggregation='Var' datatype='real'>3.6406612250101871</statistic>
                <statistic aggregation='VarP' datatype='real'>3.6153788553920605</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>524.62460948109731</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_adj_return</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_adj_return]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_adj_return</remote-alias>
              <ordinal>10</ordinal>
              <family>combined_DF_filesizeQ1Q52.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-12.642133848975266</statistic>
                <statistic aggregation='Avg' datatype='real'>-0.087792596173439347</statistic>
                <statistic aggregation='Min' datatype='real'>-0.45984908319449502</statistic>
                <statistic aggregation='Max' datatype='real'>0.21250450891082601</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.16007415437202394</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.15951737301767724</statistic>
                <statistic aggregation='Var' datatype='real'>0.025623734897918551</statistic>
                <statistic aggregation='VarP' datatype='real'>0.025445792294460784</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4.7740798421760067</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_adj_return_pct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_adj_return_pct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_adj_return_pct</remote-alias>
              <ordinal>11</ordinal>
              <family>combined_DF_filesizeQ1Q52.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-1264.213384897527</statistic>
                <statistic aggregation='Avg' datatype='real'>-8.7792596173439374</statistic>
                <statistic aggregation='Min' datatype='real'>-45.984908319449502</statistic>
                <statistic aggregation='Max' datatype='real'>21.2504508910826</statistic>
                <statistic aggregation='Stdev' datatype='real'>16.007415437202386</statistic>
                <statistic aggregation='StdevP' datatype='real'>15.951737301767718</statistic>
                <statistic aggregation='Var' datatype='real'>256.2373489791853</statistic>
                <statistic aggregation='VarP' datatype='real'>254.45792294460765</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>47740.798421760046</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_return</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_return]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_return</remote-alias>
              <ordinal>12</ordinal>
              <family>combined_DF_filesizeQ1Q52.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1.5478661510247409</statistic>
                <statistic aggregation='Avg' datatype='real'>0.010749070493227368</statistic>
                <statistic aggregation='Min' datatype='real'>-0.19665929558446801</statistic>
                <statistic aggregation='Max' datatype='real'>0.22250450891082599</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.049368968190627215</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.049197249520116594</statistic>
                <statistic aggregation='Var' datatype='real'>0.0024372950202071618</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0024203693603446121</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.36517131026106964</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>RF</remote-name>
              <remote-type>5</remote-type>
              <local-name>[RF]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>RF</remote-alias>
              <ordinal>13</ordinal>
              <family>combined_DF_filesizeQ1Q52.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>29</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>14.189999999999992</statistic>
                <statistic aggregation='Avg' datatype='real'>0.098541666666666611</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>0.44</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.15014197826178924</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.14961974371162814</statistic>
                <statistic aggregation='Var' datatype='real'>0.022542613636363593</statistic>
                <statistic aggregation='VarP' datatype='real'>0.02238606770833329</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4.6218999999999921</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SMB</remote-name>
              <remote-type>5</remote-type>
              <local-name>[SMB]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SMB</remote-alias>
              <ordinal>14</ordinal>
              <family>combined_DF_filesizeQ1Q52.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>139</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>15.719999999999992</statistic>
                <statistic aggregation='Avg' datatype='real'>0.10916666666666661</statistic>
                <statistic aggregation='Min' datatype='real'>-4.3600000000000003</statistic>
                <statistic aggregation='Max' datatype='real'>6.1100000000000003</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.2733381696453421</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.2654308824886566</statistic>
                <statistic aggregation='Var' datatype='real'>5.1680664335664348</statistic>
                <statistic aggregation='VarP' datatype='real'>5.1321770833333344</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>740.74960000000021</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>portfolio_return_value</remote-name>
              <remote-type>5</remote-type>
              <local-name>[portfolio_return_value]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>portfolio_return_value</remote-alias>
              <ordinal>15</ordinal>
              <family>combined_DF_filesizeQ1Q52.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1678002.9580147783</statistic>
                <statistic aggregation='Avg' datatype='real'>11652.798319547072</statistic>
                <statistic aggregation='Min' datatype='real'>9844.234924163693</statistic>
                <statistic aggregation='Max' datatype='real'>13356.426625950591</statistic>
                <statistic aggregation='Stdev' datatype='real'>905.51574407197813</statistic>
                <statistic aggregation='StdevP' datatype='real'>902.36611454968249</statistic>
                <statistic aggregation='Var' datatype='real'>819958.76276222826</statistic>
                <statistic aggregation='VarP' datatype='real'>814264.60468749062</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>19670684152.424622</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='quantitative' column='[Q5_Q1_adj_diff_pct]' included-values='in-range'>
          <min>-6.0360839615961703</min>
          <max>14.342489009652351</max>
        </filter>
        <filter class='quantitative' column='[none:Date:qk]' included-values='in-range'>
          <min>#2005-02-01#</min>
          <max>#2017-01-01#</max>
        </filter>
        <filter class='quantitative' column='[portfolio_return_value]' included-values='in-range'>
          <min>984.42349241636884</min>
          <max>13356.426625950591</max>
        </filter>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.120823' measure-ordering='alphabetic' measure-percentage='0.879177' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='combined_DF_cosine-1.csv (combined_DF_cosine-1)' inline='true' name='federated.0hmtes00luxp781bkj8fj04ogy94' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='combined_DF_cosine-1' name='excel-direct.0qtmm9k1hrk4xj10i9en11rqwqx6'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/williamwtong/Desktop/MSPA/PREDICT498DL55/Final Data Viz/combined_DF_cosine-1.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0qtmm9k1hrk4xj10i9en11rqwqx6' name='combined_DF_cosine-1.csv' table='[&apos;combined_DF_cosine-1#csv$&apos;]' type='table'>
          <columns gridOrigin='A1:O75:no:A1:O75:0' header='yes' outcome='2'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='real' name='Mkt.RF' ordinal='2' />
            <column datatype='real' name='SMB' ordinal='3' />
            <column datatype='real' name='HML' ordinal='4' />
            <column datatype='real' name='RF' ordinal='5' />
            <column datatype='real' name='Q1_return' ordinal='6' />
            <column datatype='real' name='Q5_return' ordinal='7' />
            <column datatype='real' name='Q1_adj_return' ordinal='8' />
            <column datatype='real' name='Q5_adj_return' ordinal='9' />
            <column datatype='real' name='Q1_adj_return_pct' ordinal='10' />
            <column datatype='real' name='Q5_adj_return_pct' ordinal='11' />
            <column datatype='real' name='Q5_Q1_adj_diff' ordinal='12' />
            <column datatype='real' name='Q5_Q1_adj_diff_pct' ordinal='13' />
            <column datatype='real' name='portfolio_return_value' ordinal='14' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[combined_DF_cosine-1.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[combined_DF_cosine-1.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mkt.RF</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mkt.RF]</local-name>
            <parent-name>[combined_DF_cosine-1.csv]</parent-name>
            <remote-alias>Mkt.RF</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SMB</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SMB]</local-name>
            <parent-name>[combined_DF_cosine-1.csv]</parent-name>
            <remote-alias>SMB</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HML</remote-name>
            <remote-type>5</remote-type>
            <local-name>[HML]</local-name>
            <parent-name>[combined_DF_cosine-1.csv]</parent-name>
            <remote-alias>HML</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RF</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RF]</local-name>
            <parent-name>[combined_DF_cosine-1.csv]</parent-name>
            <remote-alias>RF</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q1_return</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q1_return]</local-name>
            <parent-name>[combined_DF_cosine-1.csv]</parent-name>
            <remote-alias>Q1_return</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_return</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_return]</local-name>
            <parent-name>[combined_DF_cosine-1.csv]</parent-name>
            <remote-alias>Q5_return</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q1_adj_return</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q1_adj_return]</local-name>
            <parent-name>[combined_DF_cosine-1.csv]</parent-name>
            <remote-alias>Q1_adj_return</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_adj_return</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_adj_return]</local-name>
            <parent-name>[combined_DF_cosine-1.csv]</parent-name>
            <remote-alias>Q5_adj_return</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q1_adj_return_pct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q1_adj_return_pct]</local-name>
            <parent-name>[combined_DF_cosine-1.csv]</parent-name>
            <remote-alias>Q1_adj_return_pct</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_adj_return_pct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_adj_return_pct]</local-name>
            <parent-name>[combined_DF_cosine-1.csv]</parent-name>
            <remote-alias>Q5_adj_return_pct</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_Q1_adj_diff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_Q1_adj_diff]</local-name>
            <parent-name>[combined_DF_cosine-1.csv]</parent-name>
            <remote-alias>Q5_Q1_adj_diff</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_Q1_adj_diff_pct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_Q1_adj_diff_pct]</local-name>
            <parent-name>[combined_DF_cosine-1.csv]</parent-name>
            <remote-alias>Q5_Q1_adj_diff_pct</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>portfolio_return_value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[portfolio_return_value]</local-name>
            <parent-name>[combined_DF_cosine-1.csv]</parent-name>
            <remote-alias>portfolio_return_value</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[combined_DF_cosine-1.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O75:no:A1:O75:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Q1 adj return' datatype='real' name='[Q1_adj_return]' role='measure' type='quantitative' />
      <column caption='Q1 adj return pct' datatype='real' name='[Q1_adj_return_pct]' role='measure' type='quantitative' />
      <column caption='Q1 return' datatype='real' name='[Q1_return]' role='measure' type='quantitative' />
      <column caption='Q5 Q1 adj diff' datatype='real' name='[Q5_Q1_adj_diff]' role='measure' type='quantitative' />
      <column caption='Cosine Quintile Variance %' datatype='real' name='[Q5_Q1_adj_diff_pct]' role='measure' type='quantitative' />
      <column caption='Q5 adj return' datatype='real' name='[Q5_adj_return]' role='measure' type='quantitative' />
      <column caption='Q5 adj return pct' datatype='real' name='[Q5_adj_return_pct]' role='measure' type='quantitative' />
      <column caption='Q5 return' datatype='real' name='[Q5_return]' role='measure' type='quantitative' />
      <column caption='Cosine Return ($)' datatype='real' name='[portfolio_return_value]' role='measure' type='quantitative' />
      <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/williamwtong/Desktop/MSPA/PREDICT498DL55/Final Data Viz/combined_cosine.tde' schema='Extract' tablename='Extract' update-time='11/14/2017 03:58:34 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='74' timestamp-start='2017-11-14 03:58:34.499' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>0</ordinal>
              <family>combined_DF_cosine-1.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>74</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2011-08-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2017-09-01#</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='Median' datatype='date'>#2014-09-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>16</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>1</ordinal>
              <family>combined_DF_cosine-1.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2775.0</statistic>
                <statistic aggregation='Avg' datatype='real'>37.5</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>74</statistic>
                <statistic aggregation='Stdev' datatype='real'>21.505813167606568</statistic>
                <statistic aggregation='StdevP' datatype='real'>21.360009363293827</statistic>
                <statistic aggregation='Var' datatype='real'>462.5</statistic>
                <statistic aggregation='VarP' datatype='real'>456.25</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='Median' datatype='integer'>38</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>137825.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HML</remote-name>
              <remote-type>5</remote-type>
              <local-name>[HML]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HML</remote-alias>
              <ordinal>2</ordinal>
              <family>combined_DF_cosine-1.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>71</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3.0600000000000005</statistic>
                <statistic aggregation='Avg' datatype='real'>0.041351351351351359</statistic>
                <statistic aggregation='Min' datatype='real'>-4.1399999999999997</statistic>
                <statistic aggregation='Max' datatype='real'>8.2699999999999996</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.2117199185585941</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.1967250343527813</statistic>
                <statistic aggregation='Var' datatype='real'>4.8917049981488345</statistic>
                <statistic aggregation='VarP' datatype='real'>4.8256008765522287</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>357.22100000000006</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Mkt.RF</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Mkt.RF]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Mkt.RF</remote-alias>
              <ordinal>3</ordinal>
              <family>combined_DF_cosine-1.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>71</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>83.44000000000004</statistic>
                <statistic aggregation='Avg' datatype='real'>1.127567567567568</statistic>
                <statistic aggregation='Min' datatype='real'>-7.5899999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>11.35</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.3471295454466987</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.3244368800984851</statistic>
                <statistic aggregation='Var' datatype='real'>11.203276194002223</statistic>
                <statistic aggregation='VarP' datatype='real'>11.05188056975895</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>911.92340000000036</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>4</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>74.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>74.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q1_adj_return</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q1_adj_return]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q1_adj_return</remote-alias>
              <ordinal>5</ordinal>
              <family>combined_DF_cosine-1.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-0.14651512445992418</statistic>
                <statistic aggregation='Avg' datatype='real'>-0.0019799341143232996</statistic>
                <statistic aggregation='Min' datatype='real'>-0.225714035894996</statistic>
                <statistic aggregation='Max' datatype='real'>0.119824880799898</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.052290194978102431</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.051935681094035673</statistic>
                <statistic aggregation='Var' datatype='real'>0.0027342644908479687</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0026973149707013745</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.19989139812508425</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q1_adj_return_pct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q1_adj_return_pct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q1_adj_return_pct</remote-alias>
              <ordinal>6</ordinal>
              <family>combined_DF_cosine-1.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-14.651512445992427</statistic>
                <statistic aggregation='Avg' datatype='real'>-0.1979934114323301</statistic>
                <statistic aggregation='Min' datatype='real'>-22.571403589499599</statistic>
                <statistic aggregation='Max' datatype='real'>11.9824880799898</statistic>
                <statistic aggregation='Stdev' datatype='real'>5.2290194978102429</statistic>
                <statistic aggregation='StdevP' datatype='real'>5.1935681094035671</statistic>
                <statistic aggregation='Var' datatype='real'>27.342644908479684</statistic>
                <statistic aggregation='VarP' datatype='real'>26.973149707013743</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1998.9139812508424</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q1_return</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q1_return]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q1_return</remote-alias>
              <ordinal>7</ordinal>
              <family>combined_DF_cosine-1.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.65348487554007595</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0088308766964875132</statistic>
                <statistic aggregation='Min' datatype='real'>-0.21571403589499599</statistic>
                <statistic aggregation='Max' datatype='real'>0.119824880799898</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.047308959345121748</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.046988216939483012</statistic>
                <statistic aggregation='Var' datatype='real'>0.0022381376343183824</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0022078925311519179</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.16915489166415582</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_Q1_adj_diff</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_Q1_adj_diff]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_Q1_adj_diff</remote-alias>
              <ordinal>8</ordinal>
              <family>combined_DF_cosine-1.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.25094450380240685</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0033911419432757681</statistic>
                <statistic aggregation='Min' datatype='real'>-0.104549192851663</statistic>
                <statistic aggregation='Max' datatype='real'>0.19677798473689861</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.045134614675096343</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.044828613759226255</statistic>
                <statistic aggregation='Var' datatype='real'>0.0020371334418694221</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0020096046115738895</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.14956172968874668</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_Q1_adj_diff_pct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_Q1_adj_diff_pct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_Q1_adj_diff_pct</remote-alias>
              <ordinal>9</ordinal>
              <family>combined_DF_cosine-1.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>25.094450380240676</statistic>
                <statistic aggregation='Avg' datatype='real'>0.33911419432757672</statistic>
                <statistic aggregation='Min' datatype='real'>-10.4549192851663</statistic>
                <statistic aggregation='Max' datatype='real'>19.677798473689862</statistic>
                <statistic aggregation='Stdev' datatype='real'>4.5134614675096341</statistic>
                <statistic aggregation='StdevP' datatype='real'>4.4828613759226252</statistic>
                <statistic aggregation='Var' datatype='real'>20.371334418694218</statistic>
                <statistic aggregation='VarP' datatype='real'>20.09604611573889</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1495.6172968874666</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_adj_return</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_adj_return]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_adj_return</remote-alias>
              <ordinal>10</ordinal>
              <family>combined_DF_cosine-1.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.1044293793424823</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0014112078289524634</statistic>
                <statistic aggregation='Min' datatype='real'>-0.14208429968980199</statistic>
                <statistic aggregation='Max' datatype='real'>0.10112495954882</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.04621429214001499</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.045900971292525065</statistic>
                <statistic aggregation='Var' datatype='real'>0.0021357607980026514</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0021068991655972102</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.15605790981189432</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_adj_return_pct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_adj_return_pct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_adj_return_pct</remote-alias>
              <ordinal>11</ordinal>
              <family>combined_DF_cosine-1.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>10.44293793424826</statistic>
                <statistic aggregation='Avg' datatype='real'>0.14112078289524677</statistic>
                <statistic aggregation='Min' datatype='real'>-14.2084299689802</statistic>
                <statistic aggregation='Max' datatype='real'>10.112495954882</statistic>
                <statistic aggregation='Stdev' datatype='real'>4.6214292140014983</statistic>
                <statistic aggregation='StdevP' datatype='real'>4.5900971292525057</statistic>
                <statistic aggregation='Var' datatype='real'>21.357607980026508</statistic>
                <statistic aggregation='VarP' datatype='real'>21.068991655972095</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1560.5790981189427</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_return</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_return]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_return</remote-alias>
              <ordinal>12</ordinal>
              <family>combined_DF_cosine-1.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.90442937934248258</statistic>
                <statistic aggregation='Avg' datatype='real'>0.012222018639763278</statistic>
                <statistic aggregation='Min' datatype='real'>-0.082084299689801701</statistic>
                <statistic aggregation='Max' datatype='real'>0.10112495954882</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.038587131870393448</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.038325521180280354</statistic>
                <statistic aggregation='Var' datatype='real'>0.0014889667459831335</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0014688455737401182</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.11974852518944211</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>RF</remote-name>
              <remote-type>5</remote-type>
              <local-name>[RF]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>RF</remote-alias>
              <ordinal>13</ordinal>
              <family>combined_DF_cosine-1.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.79999999999999993</statistic>
                <statistic aggregation='Avg' datatype='real'>0.01081081081081081</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>0.089999999999999997</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.019567708705699665</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.019435044744158702</statistic>
                <statistic aggregation='Var' datatype='real'>0.00038289522399111446</statistic>
                <statistic aggregation='VarP' datatype='real'>0.00037772096420745076</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.036600000000000008</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SMB</remote-name>
              <remote-type>5</remote-type>
              <local-name>[SMB]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SMB</remote-alias>
              <ordinal>14</ordinal>
              <family>combined_DF_cosine-1.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>73</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-3.2400000000000038</statistic>
                <statistic aggregation='Avg' datatype='real'>-0.043783783783783836</statistic>
                <statistic aggregation='Min' datatype='real'>-4.3600000000000003</statistic>
                <statistic aggregation='Max' datatype='real'>5.4800000000000004</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.2606107204298738</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.2452843693386577</statistic>
                <statistic aggregation='Var' datatype='real'>5.1103608293224738</statistic>
                <statistic aggregation='VarP' datatype='real'>5.0413018991964949</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>373.19820000000004</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>portfolio_return_value</remote-name>
              <remote-type>5</remote-type>
              <local-name>[portfolio_return_value]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>portfolio_return_value</remote-alias>
              <ordinal>15</ordinal>
              <family>combined_DF_cosine-1.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>822344.76058372518</statistic>
                <statistic aggregation='Avg' datatype='real'>11112.767034915205</statistic>
                <statistic aggregation='Min' datatype='real'>9131.8740550197344</statistic>
                <statistic aggregation='Max' datatype='real'>13351.240874272889</statistic>
                <statistic aggregation='Stdev' datatype='real'>969.07188848870942</statistic>
                <statistic aggregation='StdevP' datatype='real'>962.50183382985983</statistic>
                <statistic aggregation='Var' datatype='real'>939100.32505907374</statistic>
                <statistic aggregation='VarP' datatype='real'>926409.78012584301</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>9207080070.4793701</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='quantitative' column='[Q5_Q1_adj_diff_pct]' included-values='in-range'>
          <min>-10.4549192851663</min>
          <max>19.677798473689862</max>
        </filter>
        <filter class='quantitative' column='[none:Date:qk]' included-values='in-range'>
          <min>#2011-08-01#</min>
          <max>#2017-09-01#</max>
        </filter>
        <filter class='quantitative' column='[portfolio_return_value]' included-values='in-range'>
          <min>913.18740550197322</min>
          <max>13351.240874272889</max>
        </filter>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.123393' measure-ordering='alphabetic' measure-percentage='0.876607' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='combined_DF_files_N_positive.cs (combined_DF_files_N_positive)' inline='true' name='federated.0aunuvn0o4d5qq1gvtvgv0jhh5qr' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='combined_DF_files_N_positive' name='excel-direct.0jdld5j1fou7361cddi0v0m659dp'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/williamwtong/Desktop/MSPA/PREDICT498DL55/Final Data Viz/combined_DF_files_N_positive.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0jdld5j1fou7361cddi0v0m659dp' name='combined_DF_files_N_positive.cs' table='[combined_DF_files_N_positive#cs$]' type='table'>
          <columns gridOrigin='A1:O145:no:A1:O145:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='real' name='Mkt.RF' ordinal='2' />
            <column datatype='real' name='SMB' ordinal='3' />
            <column datatype='real' name='HML' ordinal='4' />
            <column datatype='real' name='RF' ordinal='5' />
            <column datatype='real' name='Q1_return' ordinal='6' />
            <column datatype='real' name='Q5_return' ordinal='7' />
            <column datatype='real' name='Q1_adj_return' ordinal='8' />
            <column datatype='real' name='Q5_adj_return' ordinal='9' />
            <column datatype='real' name='Q1_adj_return_pct' ordinal='10' />
            <column datatype='real' name='Q5_adj_return_pct' ordinal='11' />
            <column datatype='real' name='Q5_Q1_adj_diff' ordinal='12' />
            <column datatype='real' name='Q5_Q1_adj_diff_pct' ordinal='13' />
            <column datatype='real' name='portfolio_return_value' ordinal='14' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[combined_DF_files_N_positive.cs]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[combined_DF_files_N_positive.cs]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mkt.RF</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mkt.RF]</local-name>
            <parent-name>[combined_DF_files_N_positive.cs]</parent-name>
            <remote-alias>Mkt.RF</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SMB</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SMB]</local-name>
            <parent-name>[combined_DF_files_N_positive.cs]</parent-name>
            <remote-alias>SMB</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HML</remote-name>
            <remote-type>5</remote-type>
            <local-name>[HML]</local-name>
            <parent-name>[combined_DF_files_N_positive.cs]</parent-name>
            <remote-alias>HML</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RF</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RF]</local-name>
            <parent-name>[combined_DF_files_N_positive.cs]</parent-name>
            <remote-alias>RF</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q1_return</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q1_return]</local-name>
            <parent-name>[combined_DF_files_N_positive.cs]</parent-name>
            <remote-alias>Q1_return</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_return</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_return]</local-name>
            <parent-name>[combined_DF_files_N_positive.cs]</parent-name>
            <remote-alias>Q5_return</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q1_adj_return</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q1_adj_return]</local-name>
            <parent-name>[combined_DF_files_N_positive.cs]</parent-name>
            <remote-alias>Q1_adj_return</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_adj_return</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_adj_return]</local-name>
            <parent-name>[combined_DF_files_N_positive.cs]</parent-name>
            <remote-alias>Q5_adj_return</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q1_adj_return_pct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q1_adj_return_pct]</local-name>
            <parent-name>[combined_DF_files_N_positive.cs]</parent-name>
            <remote-alias>Q1_adj_return_pct</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_adj_return_pct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_adj_return_pct]</local-name>
            <parent-name>[combined_DF_files_N_positive.cs]</parent-name>
            <remote-alias>Q5_adj_return_pct</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_Q1_adj_diff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_Q1_adj_diff]</local-name>
            <parent-name>[combined_DF_files_N_positive.cs]</parent-name>
            <remote-alias>Q5_Q1_adj_diff</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_Q1_adj_diff_pct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_Q1_adj_diff_pct]</local-name>
            <parent-name>[combined_DF_files_N_positive.cs]</parent-name>
            <remote-alias>Q5_Q1_adj_diff_pct</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>portfolio_return_value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[portfolio_return_value]</local-name>
            <parent-name>[combined_DF_files_N_positive.cs]</parent-name>
            <remote-alias>portfolio_return_value</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[combined_DF_files_N_positive.cs]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O145:no:A1:O145:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Q1 adj return' datatype='real' name='[Q1_adj_return]' role='measure' type='quantitative' />
      <column caption='Q1 adj return pct' datatype='real' name='[Q1_adj_return_pct]' role='measure' type='quantitative' />
      <column caption='Q1 return' datatype='real' name='[Q1_return]' role='measure' type='quantitative' />
      <column caption='Q5 Q1 adj diff' datatype='real' name='[Q5_Q1_adj_diff]' role='measure' type='quantitative' />
      <column caption='N-Positive Quintile Variance %' datatype='real' name='[Q5_Q1_adj_diff_pct]' role='measure' type='quantitative' />
      <column caption='Q5 adj return' datatype='real' name='[Q5_adj_return]' role='measure' type='quantitative' />
      <column caption='Q5 adj return pct' datatype='real' name='[Q5_adj_return_pct]' role='measure' type='quantitative' />
      <column caption='Q5 return' datatype='real' name='[Q5_return]' role='measure' type='quantitative' />
      <column caption='N-Positive Return ($)' datatype='real' name='[portfolio_return_value]' role='measure' type='quantitative' />
      <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/williamwtong/Desktop/MSPA/PREDICT498DL55/Final Data Viz/combined_npositive.tde' schema='Extract' tablename='Extract' update-time='11/14/2017 03:58:16 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='144' timestamp-start='2017-11-14 03:58:16.517' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>0</ordinal>
              <family>combined_DF_files_N_positive.cs</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2005-02-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2017-01-01#</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='Median' datatype='date'>#2011-02-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>2</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>1</ordinal>
              <family>combined_DF_files_N_positive.cs</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>10440.0</statistic>
                <statistic aggregation='Avg' datatype='real'>72.5</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>144</statistic>
                <statistic aggregation='Stdev' datatype='real'>41.71330722922842</statistic>
                <statistic aggregation='StdevP' datatype='real'>41.568217025350833</statistic>
                <statistic aggregation='Var' datatype='real'>1740.0</statistic>
                <statistic aggregation='VarP' datatype='real'>1727.9166666666667</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='Median' datatype='integer'>73</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1005720.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HML</remote-name>
              <remote-type>5</remote-type>
              <local-name>[HML]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HML</remote-alias>
              <ordinal>2</ordinal>
              <family>combined_DF_files_N_positive.cs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>123</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>5.4599999999999991</statistic>
                <statistic aggregation='Avg' datatype='real'>0.037916666666666661</statistic>
                <statistic aggregation='Min' datatype='real'>-11.1</statistic>
                <statistic aggregation='Max' datatype='real'>8.2699999999999996</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.6042168265565526</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.5951586536279434</statistic>
                <statistic aggregation='Var' datatype='real'>6.7819452797202811</statistic>
                <statistic aggregation='VarP' datatype='real'>6.7348484375000011</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>970.02520000000004</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Mkt.RF</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Mkt.RF]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Mkt.RF</remote-alias>
              <ordinal>3</ordinal>
              <family>combined_DF_files_N_positive.cs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>137</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>94.159999999999968</statistic>
                <statistic aggregation='Avg' datatype='real'>0.65388888888888863</statistic>
                <statistic aggregation='Min' datatype='real'>-17.23</statistic>
                <statistic aggregation='Max' datatype='real'>11.35</statistic>
                <statistic aggregation='Stdev' datatype='real'>4.2197731538656758</statistic>
                <statistic aggregation='StdevP' datatype='real'>4.2050956375554236</statistic>
                <statistic aggregation='Var' datatype='real'>17.80648547008547</statistic>
                <statistic aggregation='VarP' datatype='real'>17.682829320987654</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2607.8975999999998</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>4</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>144.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>144.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q1_adj_return</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q1_adj_return]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q1_adj_return</remote-alias>
              <ordinal>5</ordinal>
              <family>combined_DF_files_N_positive.cs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-12.924754403799607</statistic>
                <statistic aggregation='Avg' datatype='real'>-0.089755238915275051</statistic>
                <statistic aggregation='Min' datatype='real'>-0.459376277573179</statistic>
                <statistic aggregation='Max' datatype='real'>0.15615179352056399</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.15934620248964038</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.15879195314951272</statistic>
                <statistic aggregation='Var' datatype='real'>0.025391212247869475</statistic>
                <statistic aggregation='VarP' datatype='real'>0.025214884385037047</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4.7910077708796219</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q1_adj_return_pct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q1_adj_return_pct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q1_adj_return_pct</remote-alias>
              <ordinal>6</ordinal>
              <family>combined_DF_files_N_positive.cs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-1292.4754403799614</statistic>
                <statistic aggregation='Avg' datatype='real'>-8.9755238915275086</statistic>
                <statistic aggregation='Min' datatype='real'>-45.937627757317898</statistic>
                <statistic aggregation='Max' datatype='real'>15.6151793520564</statistic>
                <statistic aggregation='Stdev' datatype='real'>15.934620248964029</statistic>
                <statistic aggregation='StdevP' datatype='real'>15.879195314951266</statistic>
                <statistic aggregation='Var' datatype='real'>253.91212247869447</statistic>
                <statistic aggregation='VarP' datatype='real'>252.14884385037021</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>47910.077708796191</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q1_return</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q1_return]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q1_return</remote-alias>
              <ordinal>7</ordinal>
              <family>combined_DF_files_N_positive.cs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1.265245596200379</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0087864277513915214</statistic>
                <statistic aggregation='Min' datatype='real'>-0.18384569060398601</statistic>
                <statistic aggregation='Max' datatype='real'>0.166151793520564</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.045679234657196678</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.045520349881339323</statistic>
                <statistic aggregation='Var' datatype='real'>0.0020865924788672384</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0020721022533195491</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.30949971349679595</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_Q1_adj_diff</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_Q1_adj_diff]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_Q1_adj_diff</remote-alias>
              <ordinal>8</ordinal>
              <family>combined_DF_files_N_positive.cs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.22029775970644894</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0015298455535170065</statistic>
                <statistic aggregation='Min' datatype='real'>-0.06552171819544711</statistic>
                <statistic aggregation='Max' datatype='real'>0.13466196134665981</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.018054171646974804</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.017991374337936093</statistic>
                <statistic aggregation='Var' datatype='real'>0.0003259531138584289</statistic>
                <statistic aggregation='VarP' datatype='real'>0.00032368955056774536</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.046948316829892006</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_Q1_adj_diff_pct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_Q1_adj_diff_pct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_Q1_adj_diff_pct</remote-alias>
              <ordinal>9</ordinal>
              <family>combined_DF_files_N_positive.cs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>22.029775970644913</statistic>
                <statistic aggregation='Avg' datatype='real'>0.15298455535170077</statistic>
                <statistic aggregation='Min' datatype='real'>-6.5521718195447107</statistic>
                <statistic aggregation='Max' datatype='real'>13.466196134665982</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.8054171646974804</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.7991374337936095</statistic>
                <statistic aggregation='Var' datatype='real'>3.2595311385842893</statistic>
                <statistic aggregation='VarP' datatype='real'>3.2368955056774542</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>469.48316829892008</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_adj_return</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_adj_return]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_adj_return</remote-alias>
              <ordinal>10</ordinal>
              <family>combined_DF_files_N_positive.cs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-12.704456644093172</statistic>
                <statistic aggregation='Avg' datatype='real'>-0.088225393361758137</statistic>
                <statistic aggregation='Min' datatype='real'>-0.45690958487836297</statistic>
                <statistic aggregation='Max' datatype='real'>0.20542404154862701</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.16042586429188169</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.15986785959497676</statistic>
                <statistic aggregation='Var' datatype='real'>0.025736457933797238</statistic>
                <statistic aggregation='VarP' datatype='real'>0.025557732531479204</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4.8011691694055276</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_adj_return_pct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_adj_return_pct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_adj_return_pct</remote-alias>
              <ordinal>11</ordinal>
              <family>combined_DF_files_N_positive.cs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-1270.4456644093179</statistic>
                <statistic aggregation='Avg' datatype='real'>-8.8225393361758186</statistic>
                <statistic aggregation='Min' datatype='real'>-45.690958487836298</statistic>
                <statistic aggregation='Max' datatype='real'>20.542404154862702</statistic>
                <statistic aggregation='Stdev' datatype='real'>16.042586429188169</statistic>
                <statistic aggregation='StdevP' datatype='real'>15.986785959497677</statistic>
                <statistic aggregation='Var' datatype='real'>257.36457933797243</statistic>
                <statistic aggregation='VarP' datatype='real'>255.57732531479206</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>48011.691694055291</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_return</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_return]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_return</remote-alias>
              <ordinal>12</ordinal>
              <family>combined_DF_files_N_positive.cs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1.4855433559068274</statistic>
                <statistic aggregation='Avg' datatype='real'>0.010316273304908523</statistic>
                <statistic aggregation='Min' datatype='real'>-0.198419434577361</statistic>
                <statistic aggregation='Max' datatype='real'>0.21542404154862699</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.049660716149871539</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.049487982700775875</statistic>
                <statistic aggregation='Var' datatype='real'>0.0024661867285181121</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0024490604317922919</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.36798997344391582</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>RF</remote-name>
              <remote-type>5</remote-type>
              <local-name>[RF]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>RF</remote-alias>
              <ordinal>13</ordinal>
              <family>combined_DF_files_N_positive.cs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>29</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>14.189999999999992</statistic>
                <statistic aggregation='Avg' datatype='real'>0.098541666666666611</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>0.44</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.15014197826178924</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.14961974371162814</statistic>
                <statistic aggregation='Var' datatype='real'>0.022542613636363593</statistic>
                <statistic aggregation='VarP' datatype='real'>0.02238606770833329</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4.6218999999999921</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SMB</remote-name>
              <remote-type>5</remote-type>
              <local-name>[SMB]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SMB</remote-alias>
              <ordinal>14</ordinal>
              <family>combined_DF_files_N_positive.cs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>139</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>15.719999999999992</statistic>
                <statistic aggregation='Avg' datatype='real'>0.10916666666666661</statistic>
                <statistic aggregation='Min' datatype='real'>-4.3600000000000003</statistic>
                <statistic aggregation='Max' datatype='real'>6.1100000000000003</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.2733381696453421</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.2654308824886566</statistic>
                <statistic aggregation='Var' datatype='real'>5.1680664335664348</statistic>
                <statistic aggregation='VarP' datatype='real'>5.1321770833333344</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>740.74960000000021</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>portfolio_return_value</remote-name>
              <remote-type>5</remote-type>
              <local-name>[portfolio_return_value]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>portfolio_return_value</remote-alias>
              <ordinal>15</ordinal>
              <family>combined_DF_files_N_positive.cs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1590791.7427184973</statistic>
                <statistic aggregation='Avg' datatype='real'>11047.164879989565</statistic>
                <statistic aggregation='Min' datatype='real'>9358.157165163504</statistic>
                <statistic aggregation='Max' datatype='real'>12413.154241731252</statistic>
                <statistic aggregation='Stdev' datatype='real'>892.9198593252047</statistic>
                <statistic aggregation='StdevP' datatype='real'>889.81404170868484</statistic>
                <statistic aggregation='Var' datatype='real'>797305.87517734338</statistic>
                <statistic aggregation='VarP' datatype='real'>791769.02882194519</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>17687753411.687538</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='quantitative' column='[Q5_Q1_adj_diff_pct]' included-values='in-range'>
          <min>-6.5521718195447107</min>
          <max>13.466196134665982</max>
        </filter>
        <filter class='quantitative' column='[none:Date:qk]' included-values='in-range'>
          <min>#2005-02-01#</min>
          <max>#2017-01-01#</max>
        </filter>
        <filter class='quantitative' column='[portfolio_return_value]' included-values='in-range'>
          <min>935.81571651635045</min>
          <max>12413.154241731252</max>
        </filter>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.120823' measure-ordering='alphabetic' measure-percentage='0.879177' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='combined_DF_files_N_negative.cs (combined_DF_files_N_negative)' inline='true' name='federated.082wkbe033d9fn15ymbxl0ivyoco' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='combined_DF_files_N_negative' name='excel-direct.0kpbeqz1d1y1dd173gb3q01d9nb0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/williamwtong/Desktop/MSPA/PREDICT498DL55/Final Data Viz/combined_DF_files_N_negative.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0kpbeqz1d1y1dd173gb3q01d9nb0' name='combined_DF_files_N_negative.cs' table='[combined_DF_files_N_negative#cs$]' type='table'>
          <columns gridOrigin='A1:O145:no:A1:O145:0' header='yes' outcome='2'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='real' name='Mkt.RF' ordinal='2' />
            <column datatype='real' name='SMB' ordinal='3' />
            <column datatype='real' name='HML' ordinal='4' />
            <column datatype='real' name='RF' ordinal='5' />
            <column datatype='real' name='Q1_return' ordinal='6' />
            <column datatype='real' name='Q5_return' ordinal='7' />
            <column datatype='real' name='Q1_adj_return' ordinal='8' />
            <column datatype='real' name='Q5_adj_return' ordinal='9' />
            <column datatype='real' name='Q1_adj_return_pct' ordinal='10' />
            <column datatype='real' name='Q5_adj_return_pct' ordinal='11' />
            <column datatype='real' name='Q5_Q1_adj_diff' ordinal='12' />
            <column datatype='real' name='Q5_Q1_adj_diff_pct' ordinal='13' />
            <column datatype='real' name='portfolio_return_value' ordinal='14' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[combined_DF_files_N_negative.cs]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[combined_DF_files_N_negative.cs]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mkt.RF</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mkt.RF]</local-name>
            <parent-name>[combined_DF_files_N_negative.cs]</parent-name>
            <remote-alias>Mkt.RF</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SMB</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SMB]</local-name>
            <parent-name>[combined_DF_files_N_negative.cs]</parent-name>
            <remote-alias>SMB</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HML</remote-name>
            <remote-type>5</remote-type>
            <local-name>[HML]</local-name>
            <parent-name>[combined_DF_files_N_negative.cs]</parent-name>
            <remote-alias>HML</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RF</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RF]</local-name>
            <parent-name>[combined_DF_files_N_negative.cs]</parent-name>
            <remote-alias>RF</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q1_return</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q1_return]</local-name>
            <parent-name>[combined_DF_files_N_negative.cs]</parent-name>
            <remote-alias>Q1_return</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_return</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_return]</local-name>
            <parent-name>[combined_DF_files_N_negative.cs]</parent-name>
            <remote-alias>Q5_return</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q1_adj_return</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q1_adj_return]</local-name>
            <parent-name>[combined_DF_files_N_negative.cs]</parent-name>
            <remote-alias>Q1_adj_return</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_adj_return</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_adj_return]</local-name>
            <parent-name>[combined_DF_files_N_negative.cs]</parent-name>
            <remote-alias>Q5_adj_return</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q1_adj_return_pct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q1_adj_return_pct]</local-name>
            <parent-name>[combined_DF_files_N_negative.cs]</parent-name>
            <remote-alias>Q1_adj_return_pct</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_adj_return_pct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_adj_return_pct]</local-name>
            <parent-name>[combined_DF_files_N_negative.cs]</parent-name>
            <remote-alias>Q5_adj_return_pct</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_Q1_adj_diff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_Q1_adj_diff]</local-name>
            <parent-name>[combined_DF_files_N_negative.cs]</parent-name>
            <remote-alias>Q5_Q1_adj_diff</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_Q1_adj_diff_pct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_Q1_adj_diff_pct]</local-name>
            <parent-name>[combined_DF_files_N_negative.cs]</parent-name>
            <remote-alias>Q5_Q1_adj_diff_pct</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>portfolio_return_value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[portfolio_return_value]</local-name>
            <parent-name>[combined_DF_files_N_negative.cs]</parent-name>
            <remote-alias>portfolio_return_value</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[combined_DF_files_N_negative.cs]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O145:no:A1:O145:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Q1 adj return' datatype='real' name='[Q1_adj_return]' role='measure' type='quantitative' />
      <column caption='Q1 adj return pct' datatype='real' name='[Q1_adj_return_pct]' role='measure' type='quantitative' />
      <column caption='Q1 return' datatype='real' name='[Q1_return]' role='measure' type='quantitative' />
      <column caption='Q5 Q1 adj diff' datatype='real' name='[Q5_Q1_adj_diff]' role='measure' type='quantitative' />
      <column caption='N-Negative Quintile Variance %' datatype='real' name='[Q5_Q1_adj_diff_pct]' role='measure' type='quantitative' />
      <column caption='Q5 adj return' datatype='real' name='[Q5_adj_return]' role='measure' type='quantitative' />
      <column caption='Q5 adj return pct' datatype='real' name='[Q5_adj_return_pct]' role='measure' type='quantitative' />
      <column caption='Q5 return' datatype='real' name='[Q5_return]' role='measure' type='quantitative' />
      <column caption='N-Negative Return ($)' datatype='real' name='[portfolio_return_value]' role='measure' type='quantitative' />
      <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/williamwtong/Desktop/MSPA/PREDICT498DL55/Final Data Viz/combined_negative.tde' schema='Extract' tablename='Extract' update-time='11/14/2017 05:04:04 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='144' timestamp-start='2017-11-14 05:04:04.994' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>0</ordinal>
              <family>combined_DF_files_N_negative.cs</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2005-02-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2017-01-01#</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='Median' datatype='date'>#2011-02-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>2</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>1</ordinal>
              <family>combined_DF_files_N_negative.cs</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>10440.0</statistic>
                <statistic aggregation='Avg' datatype='real'>72.5</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>144</statistic>
                <statistic aggregation='Stdev' datatype='real'>41.71330722922842</statistic>
                <statistic aggregation='StdevP' datatype='real'>41.568217025350833</statistic>
                <statistic aggregation='Var' datatype='real'>1740.0</statistic>
                <statistic aggregation='VarP' datatype='real'>1727.9166666666667</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='Median' datatype='integer'>73</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1005720.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HML</remote-name>
              <remote-type>5</remote-type>
              <local-name>[HML]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HML</remote-alias>
              <ordinal>2</ordinal>
              <family>combined_DF_files_N_negative.cs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>123</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>5.4599999999999991</statistic>
                <statistic aggregation='Avg' datatype='real'>0.037916666666666661</statistic>
                <statistic aggregation='Min' datatype='real'>-11.1</statistic>
                <statistic aggregation='Max' datatype='real'>8.2699999999999996</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.6042168265565526</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.5951586536279434</statistic>
                <statistic aggregation='Var' datatype='real'>6.7819452797202811</statistic>
                <statistic aggregation='VarP' datatype='real'>6.7348484375000011</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>970.02520000000004</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Mkt.RF</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Mkt.RF]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Mkt.RF</remote-alias>
              <ordinal>3</ordinal>
              <family>combined_DF_files_N_negative.cs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>137</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>94.159999999999968</statistic>
                <statistic aggregation='Avg' datatype='real'>0.65388888888888863</statistic>
                <statistic aggregation='Min' datatype='real'>-17.23</statistic>
                <statistic aggregation='Max' datatype='real'>11.35</statistic>
                <statistic aggregation='Stdev' datatype='real'>4.2197731538656758</statistic>
                <statistic aggregation='StdevP' datatype='real'>4.2050956375554236</statistic>
                <statistic aggregation='Var' datatype='real'>17.80648547008547</statistic>
                <statistic aggregation='VarP' datatype='real'>17.682829320987654</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2607.8975999999998</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>4</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>144.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>144.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q1_adj_return</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q1_adj_return]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q1_adj_return</remote-alias>
              <ordinal>5</ordinal>
              <family>combined_DF_files_N_negative.cs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-12.993685493895326</statistic>
                <statistic aggregation='Avg' datatype='real'>-0.090233927040939757</statistic>
                <statistic aggregation='Min' datatype='real'>-0.46033732944300498</statistic>
                <statistic aggregation='Max' datatype='real'>0.162450972240852</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.16010034934150219</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.15954347687394213</statistic>
                <statistic aggregation='Var' datatype='real'>0.025632121859271044</statistic>
                <statistic aggregation='VarP' datatype='real'>0.025454121013026104</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4.8378646947248267</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q1_adj_return_pct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q1_adj_return_pct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q1_adj_return_pct</remote-alias>
              <ordinal>6</ordinal>
              <family>combined_DF_files_N_negative.cs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-1299.3685493895323</statistic>
                <statistic aggregation='Avg' datatype='real'>-9.0233927040939736</statistic>
                <statistic aggregation='Min' datatype='real'>-46.033732944300496</statistic>
                <statistic aggregation='Max' datatype='real'>16.2450972240852</statistic>
                <statistic aggregation='Stdev' datatype='real'>16.010034934150212</statistic>
                <statistic aggregation='StdevP' datatype='real'>15.954347687394208</statistic>
                <statistic aggregation='Var' datatype='real'>256.32121859271024</statistic>
                <statistic aggregation='VarP' datatype='real'>254.54121013026088</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>48378.646947248242</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q1_return</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q1_return]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q1_return</remote-alias>
              <ordinal>7</ordinal>
              <family>combined_DF_files_N_negative.cs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1.1963145061046772</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0083077396257269249</statistic>
                <statistic aggregation='Min' datatype='real'>-0.185507589029453</statistic>
                <statistic aggregation='Max' datatype='real'>0.17245097224085201</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.046002266079980987</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.045842257713161805</statistic>
                <statistic aggregation='Var' datatype='real'>0.0021162084844933691</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0021015125922399427</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.31255648270974956</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_Q1_adj_diff</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_Q1_adj_diff]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_Q1_adj_diff</remote-alias>
              <ordinal>8</ordinal>
              <family>combined_DF_files_N_negative.cs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.32081989040251246</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0022279159055730033</statistic>
                <statistic aggregation='Min' datatype='real'>-0.042277328158886601</statistic>
                <statistic aggregation='Max' datatype='real'>0.12946197859645647</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.01750258980467136</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.017441711046984026</statistic>
                <statistic aggregation='Var' datatype='real'>0.00030634064987058584</statistic>
                <statistic aggregation='VarP' datatype='real'>0.00030421328424648459</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.044521472668145726</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_Q1_adj_diff_pct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_Q1_adj_diff_pct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_Q1_adj_diff_pct</remote-alias>
              <ordinal>9</ordinal>
              <family>combined_DF_files_N_negative.cs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>32.081989040251244</statistic>
                <statistic aggregation='Avg' datatype='real'>0.2227915905573003</statistic>
                <statistic aggregation='Min' datatype='real'>-4.2277328158886602</statistic>
                <statistic aggregation='Max' datatype='real'>12.946197859645647</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.7502589804671358</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.7441711046984023</statistic>
                <statistic aggregation='Var' datatype='real'>3.063406498705858</statistic>
                <statistic aggregation='VarP' datatype='real'>3.0421328424648451</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>445.21472668145714</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_adj_return</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_adj_return]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_adj_return</remote-alias>
              <ordinal>10</ordinal>
              <family>combined_DF_files_N_negative.cs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-12.672865603492815</statistic>
                <statistic aggregation='Avg' datatype='real'>-0.088006011135366768</statistic>
                <statistic aggregation='Min' datatype='real'>-0.46253023233798102</statistic>
                <statistic aggregation='Max' datatype='real'>0.20704852329637499</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.16111249759406707</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.16055210460017924</statistic>
                <statistic aggregation='Var' datatype='real'>0.025957236880998269</statistic>
                <statistic aggregation='VarP' datatype='real'>0.025776978291546893</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4.8271732254007471</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_adj_return_pct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_adj_return_pct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_adj_return_pct</remote-alias>
              <ordinal>11</ordinal>
              <family>combined_DF_files_N_negative.cs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-1267.2865603492821</statistic>
                <statistic aggregation='Avg' datatype='real'>-8.8006011135366808</statistic>
                <statistic aggregation='Min' datatype='real'>-46.253023233798103</statistic>
                <statistic aggregation='Max' datatype='real'>20.7048523296375</statistic>
                <statistic aggregation='Stdev' datatype='real'>16.111249759406707</statistic>
                <statistic aggregation='StdevP' datatype='real'>16.055210460017925</statistic>
                <statistic aggregation='Var' datatype='real'>259.57236880998272</statistic>
                <statistic aggregation='VarP' datatype='real'>257.76978291546897</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>48271.732254007497</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_return</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_return]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_return</remote-alias>
              <ordinal>12</ordinal>
              <family>combined_DF_files_N_negative.cs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1.5171343965071866</statistic>
                <statistic aggregation='Avg' datatype='real'>0.010535655531299907</statistic>
                <statistic aggregation='Min' datatype='real'>-0.203232942696767</statistic>
                <statistic aggregation='Max' datatype='real'>0.217048523296375</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.050228683815866967</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.050053974821077873</statistic>
                <statistic aggregation='Var' datatype='real'>0.0025229206778743362</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0025054003953890978</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.37676166233231639</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>RF</remote-name>
              <remote-type>5</remote-type>
              <local-name>[RF]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>RF</remote-alias>
              <ordinal>13</ordinal>
              <family>combined_DF_files_N_negative.cs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>29</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>14.189999999999992</statistic>
                <statistic aggregation='Avg' datatype='real'>0.098541666666666611</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>0.44</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.15014197826178924</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.14961974371162814</statistic>
                <statistic aggregation='Var' datatype='real'>0.022542613636363593</statistic>
                <statistic aggregation='VarP' datatype='real'>0.02238606770833329</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4.6218999999999921</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SMB</remote-name>
              <remote-type>5</remote-type>
              <local-name>[SMB]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SMB</remote-alias>
              <ordinal>14</ordinal>
              <family>combined_DF_files_N_negative.cs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>139</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>15.719999999999992</statistic>
                <statistic aggregation='Avg' datatype='real'>0.10916666666666661</statistic>
                <statistic aggregation='Min' datatype='real'>-4.3600000000000003</statistic>
                <statistic aggregation='Max' datatype='real'>6.1100000000000003</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.2733381696453421</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.2654308824886566</statistic>
                <statistic aggregation='Var' datatype='real'>5.1680664335664348</statistic>
                <statistic aggregation='VarP' datatype='real'>5.1321770833333344</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>740.74960000000021</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>portfolio_return_value</remote-name>
              <remote-type>5</remote-type>
              <local-name>[portfolio_return_value]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>portfolio_return_value</remote-alias>
              <ordinal>15</ordinal>
              <family>combined_DF_files_N_negative.cs</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1682587.6790373481</statistic>
                <statistic aggregation='Avg' datatype='real'>11684.636659981585</statistic>
                <statistic aggregation='Min' datatype='real'>9612.6908172049152</statistic>
                <statistic aggregation='Max' datatype='real'>13694.718878632755</statistic>
                <statistic aggregation='Stdev' datatype='real'>1104.1860481255462</statistic>
                <statistic aggregation='StdevP' datatype='real'>1100.3453893649992</statistic>
                <statistic aggregation='Var' datatype='real'>1219226.8288751112</statistic>
                <statistic aggregation='VarP' datatype='real'>1210759.9758968118</statistic>
                <statistic aggregation='Count' datatype='integer'>144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>19834775114.642265</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='quantitative' column='[Q5_Q1_adj_diff_pct]' included-values='in-range'>
          <min>-4.2277328158886602</min>
          <max>12.946197859645647</max>
        </filter>
        <filter class='quantitative' column='[none:Date:qk]' included-values='in-range'>
          <min>#2005-02-01#</min>
          <max>#2017-01-01#</max>
        </filter>
        <filter class='quantitative' column='[portfolio_return_value]' included-values='in-range'>
          <min>9612.6908172049152</min>
          <max>13694.718878632755</max>
        </filter>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.123393' measure-ordering='alphabetic' measure-percentage='0.876607' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='combined_DF_simple.csv (combined_DF_simple)' inline='true' name='federated.12fe63b0yhdrls1chl1601wdsodl' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='combined_DF_simple' name='excel-direct.0j5nvvj1cpyufc172cygj1n5seuv'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/williamwtong/Desktop/MSPA/PREDICT498DL55/Final Data Viz/combined_DF_simple.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0j5nvvj1cpyufc172cygj1n5seuv' name='combined_DF_simple.csv' table='[combined_DF_simple#csv$]' type='table'>
          <columns gridOrigin='A1:O75:no:A1:O75:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='real' name='Mkt.RF' ordinal='2' />
            <column datatype='real' name='SMB' ordinal='3' />
            <column datatype='real' name='HML' ordinal='4' />
            <column datatype='real' name='RF' ordinal='5' />
            <column datatype='real' name='Q1_return' ordinal='6' />
            <column datatype='real' name='Q5_return' ordinal='7' />
            <column datatype='real' name='Q1_adj_return' ordinal='8' />
            <column datatype='real' name='Q5_adj_return' ordinal='9' />
            <column datatype='real' name='Q1_adj_return_pct' ordinal='10' />
            <column datatype='real' name='Q5_adj_return_pct' ordinal='11' />
            <column datatype='real' name='Q5_Q1_adj_diff' ordinal='12' />
            <column datatype='real' name='Q5_Q1_adj_diff_pct' ordinal='13' />
            <column datatype='real' name='portfolio_return_value' ordinal='14' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[combined_DF_simple.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[combined_DF_simple.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mkt.RF</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mkt.RF]</local-name>
            <parent-name>[combined_DF_simple.csv]</parent-name>
            <remote-alias>Mkt.RF</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SMB</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SMB]</local-name>
            <parent-name>[combined_DF_simple.csv]</parent-name>
            <remote-alias>SMB</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HML</remote-name>
            <remote-type>5</remote-type>
            <local-name>[HML]</local-name>
            <parent-name>[combined_DF_simple.csv]</parent-name>
            <remote-alias>HML</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RF</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RF]</local-name>
            <parent-name>[combined_DF_simple.csv]</parent-name>
            <remote-alias>RF</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q1_return</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q1_return]</local-name>
            <parent-name>[combined_DF_simple.csv]</parent-name>
            <remote-alias>Q1_return</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_return</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_return]</local-name>
            <parent-name>[combined_DF_simple.csv]</parent-name>
            <remote-alias>Q5_return</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q1_adj_return</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q1_adj_return]</local-name>
            <parent-name>[combined_DF_simple.csv]</parent-name>
            <remote-alias>Q1_adj_return</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_adj_return</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_adj_return]</local-name>
            <parent-name>[combined_DF_simple.csv]</parent-name>
            <remote-alias>Q5_adj_return</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q1_adj_return_pct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q1_adj_return_pct]</local-name>
            <parent-name>[combined_DF_simple.csv]</parent-name>
            <remote-alias>Q1_adj_return_pct</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_adj_return_pct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_adj_return_pct]</local-name>
            <parent-name>[combined_DF_simple.csv]</parent-name>
            <remote-alias>Q5_adj_return_pct</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_Q1_adj_diff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_Q1_adj_diff]</local-name>
            <parent-name>[combined_DF_simple.csv]</parent-name>
            <remote-alias>Q5_Q1_adj_diff</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Q5_Q1_adj_diff_pct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Q5_Q1_adj_diff_pct]</local-name>
            <parent-name>[combined_DF_simple.csv]</parent-name>
            <remote-alias>Q5_Q1_adj_diff_pct</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>portfolio_return_value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[portfolio_return_value]</local-name>
            <parent-name>[combined_DF_simple.csv]</parent-name>
            <remote-alias>portfolio_return_value</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[combined_DF_simple.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O75:no:A1:O75:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Q1 adj return' datatype='real' name='[Q1_adj_return]' role='measure' type='quantitative' />
      <column caption='Q1 adj return pct' datatype='real' name='[Q1_adj_return_pct]' role='measure' type='quantitative' />
      <column caption='Q1 return' datatype='real' name='[Q1_return]' role='measure' type='quantitative' />
      <column caption='Q5 Q1 adj diff' datatype='real' name='[Q5_Q1_adj_diff]' role='measure' type='quantitative' />
      <column caption='Simple Quintile Variance %' datatype='real' name='[Q5_Q1_adj_diff_pct]' role='measure' type='quantitative' />
      <column caption='Q5 adj return' datatype='real' name='[Q5_adj_return]' role='measure' type='quantitative' />
      <column caption='Q5 adj return pct' datatype='real' name='[Q5_adj_return_pct]' role='measure' type='quantitative' />
      <column caption='Q5 return' datatype='real' name='[Q5_return]' role='measure' type='quantitative' />
      <column caption='Simple Return ($)' datatype='real' name='[portfolio_return_value]' role='measure' type='quantitative' />
      <column-instance column='[portfolio_return_value]' derivation='Avg' name='[avg:portfolio_return_value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/williamwtong/Desktop/MSPA/PREDICT498DL55/Final Data Viz/combined_simple.tde' schema='Extract' tablename='Extract' update-time='11/14/2017 03:57:16 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='74' timestamp-start='2017-11-14 03:57:16.434' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>0</ordinal>
              <family>combined_DF_simple.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>74</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2011-08-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2017-09-01#</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='Median' datatype='date'>#2014-09-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>16</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>1</ordinal>
              <family>combined_DF_simple.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2775.0</statistic>
                <statistic aggregation='Avg' datatype='real'>37.5</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>74</statistic>
                <statistic aggregation='Stdev' datatype='real'>21.505813167606568</statistic>
                <statistic aggregation='StdevP' datatype='real'>21.360009363293827</statistic>
                <statistic aggregation='Var' datatype='real'>462.5</statistic>
                <statistic aggregation='VarP' datatype='real'>456.25</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='Median' datatype='integer'>38</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>137825.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HML</remote-name>
              <remote-type>5</remote-type>
              <local-name>[HML]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HML</remote-alias>
              <ordinal>2</ordinal>
              <family>combined_DF_simple.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>71</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3.0600000000000005</statistic>
                <statistic aggregation='Avg' datatype='real'>0.041351351351351359</statistic>
                <statistic aggregation='Min' datatype='real'>-4.1399999999999997</statistic>
                <statistic aggregation='Max' datatype='real'>8.2699999999999996</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.2117199185585941</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.1967250343527813</statistic>
                <statistic aggregation='Var' datatype='real'>4.8917049981488345</statistic>
                <statistic aggregation='VarP' datatype='real'>4.8256008765522287</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>357.22100000000006</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Mkt.RF</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Mkt.RF]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Mkt.RF</remote-alias>
              <ordinal>3</ordinal>
              <family>combined_DF_simple.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>71</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>83.44000000000004</statistic>
                <statistic aggregation='Avg' datatype='real'>1.127567567567568</statistic>
                <statistic aggregation='Min' datatype='real'>-7.5899999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>11.35</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.3471295454466987</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.3244368800984851</statistic>
                <statistic aggregation='Var' datatype='real'>11.203276194002223</statistic>
                <statistic aggregation='VarP' datatype='real'>11.05188056975895</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>911.92340000000036</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>4</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>74.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>74.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q1_adj_return</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q1_adj_return]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q1_adj_return</remote-alias>
              <ordinal>5</ordinal>
              <family>combined_DF_simple.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-0.39699864116368211</statistic>
                <statistic aggregation='Avg' datatype='real'>-0.00536484650221192</statistic>
                <statistic aggregation='Min' datatype='real'>-0.225714035894996</statistic>
                <statistic aggregation='Max' datatype='real'>0.0860813837121987</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.047858228485280138</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.047533762178126833</statistic>
                <statistic aggregation='Var' datatype='real'>0.0022904100337492791</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0022594585468067212</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.16932976923512724</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q1_adj_return_pct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q1_adj_return_pct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q1_adj_return_pct</remote-alias>
              <ordinal>6</ordinal>
              <family>combined_DF_simple.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-39.69986411636819</statistic>
                <statistic aggregation='Avg' datatype='real'>-0.53648465022119174</statistic>
                <statistic aggregation='Min' datatype='real'>-22.571403589499599</statistic>
                <statistic aggregation='Max' datatype='real'>8.6081383712198694</statistic>
                <statistic aggregation='Stdev' datatype='real'>4.7858228485280137</statistic>
                <statistic aggregation='StdevP' datatype='real'>4.7533762178126837</statistic>
                <statistic aggregation='Var' datatype='real'>22.904100337492793</statistic>
                <statistic aggregation='VarP' datatype='real'>22.594585468067216</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1693.2976923512724</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q1_return</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q1_return]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q1_return</remote-alias>
              <ordinal>7</ordinal>
              <family>combined_DF_simple.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.40300135883631844</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0054459643085988975</statistic>
                <statistic aggregation='Min' datatype='real'>-0.21571403589499599</statistic>
                <statistic aggregation='Max' datatype='real'>0.0860813837121987</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.042519560668206995</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.042231289136467426</statistic>
                <statistic aggregation='Var' datatype='real'>0.0018079130394173355</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0017834817821279119</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.13417238289400493</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_Q1_adj_diff</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_Q1_adj_diff]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_Q1_adj_diff</remote-alias>
              <ordinal>8</ordinal>
              <family>combined_DF_simple.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.21258771280487093</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0028728069297955529</statistic>
                <statistic aggregation='Min' datatype='real'>-0.059789159332190894</statistic>
                <statistic aggregation='Max' datatype='real'>0.1434469497961893</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.034753827677614334</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.034518205790158428</statistic>
                <statistic aggregation='Var' datatype='real'>0.001207828538245312</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0011915065309717268</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.088782206746442993</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_Q1_adj_diff_pct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_Q1_adj_diff_pct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_Q1_adj_diff_pct</remote-alias>
              <ordinal>9</ordinal>
              <family>combined_DF_simple.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>21.258771280487078</statistic>
                <statistic aggregation='Avg' datatype='real'>0.28728069297955511</statistic>
                <statistic aggregation='Min' datatype='real'>-5.9789159332190893</statistic>
                <statistic aggregation='Max' datatype='real'>14.34469497961893</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.4753827677614333</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.4518205790158425</statistic>
                <statistic aggregation='Var' datatype='real'>12.078285382453119</statistic>
                <statistic aggregation='VarP' datatype='real'>11.915065309717265</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>887.82206746442989</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_adj_return</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_adj_return]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_adj_return</remote-alias>
              <ordinal>10</ordinal>
              <family>combined_DF_simple.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-0.18441092835881107</statistic>
                <statistic aggregation='Avg' datatype='real'>-0.0024920395724163658</statistic>
                <statistic aggregation='Min' datatype='real'>-0.13726849095553501</statistic>
                <statistic aggregation='Max' datatype='real'>0.091697339753667603</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.046765527850075359</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.046448469768239846</statistic>
                <statistic aggregation='Var' datatype='real'>0.0021870145950961739</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0021574603438110906</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.16011162477307692</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_adj_return_pct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_adj_return_pct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_adj_return_pct</remote-alias>
              <ordinal>11</ordinal>
              <family>combined_DF_simple.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-18.441092835881129</statistic>
                <statistic aggregation='Avg' datatype='real'>-0.24920395724163688</statistic>
                <statistic aggregation='Min' datatype='real'>-13.726849095553501</statistic>
                <statistic aggregation='Max' datatype='real'>9.1697339753667606</statistic>
                <statistic aggregation='Stdev' datatype='real'>4.6765527850075364</statistic>
                <statistic aggregation='StdevP' datatype='real'>4.6448469768239846</statistic>
                <statistic aggregation='Var' datatype='real'>21.870145950961742</statistic>
                <statistic aggregation='VarP' datatype='real'>21.574603438110906</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1601.1162477307691</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Q5_return</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Q5_return]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Q5_return</remote-alias>
              <ordinal>12</ordinal>
              <family>combined_DF_simple.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.61558907164118948</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0083187712383944526</statistic>
                <statistic aggregation='Min' datatype='real'>-0.077268490955534799</statistic>
                <statistic aggregation='Max' datatype='real'>0.091697339753667603</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.039218113502462897</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.038952224921451652</statistic>
                <statistic aggregation='Var' datatype='real'>0.0015380604266920625</statistic>
                <statistic aggregation='VarP' datatype='real'>0.001517275826331359</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.11739935581235922</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>RF</remote-name>
              <remote-type>5</remote-type>
              <local-name>[RF]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>RF</remote-alias>
              <ordinal>13</ordinal>
              <family>combined_DF_simple.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.79999999999999993</statistic>
                <statistic aggregation='Avg' datatype='real'>0.01081081081081081</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>0.089999999999999997</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.019567708705699665</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.019435044744158702</statistic>
                <statistic aggregation='Var' datatype='real'>0.00038289522399111446</statistic>
                <statistic aggregation='VarP' datatype='real'>0.00037772096420745076</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.036600000000000008</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SMB</remote-name>
              <remote-type>5</remote-type>
              <local-name>[SMB]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SMB</remote-alias>
              <ordinal>14</ordinal>
              <family>combined_DF_simple.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>73</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-3.2400000000000038</statistic>
                <statistic aggregation='Avg' datatype='real'>-0.043783783783783836</statistic>
                <statistic aggregation='Min' datatype='real'>-4.3600000000000003</statistic>
                <statistic aggregation='Max' datatype='real'>5.4800000000000004</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.2606107204298738</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.2452843693386577</statistic>
                <statistic aggregation='Var' datatype='real'>5.1103608293224738</statistic>
                <statistic aggregation='VarP' datatype='real'>5.0413018991964949</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>373.19820000000004</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>portfolio_return_value</remote-name>
              <remote-type>5</remote-type>
              <local-name>[portfolio_return_value]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>portfolio_return_value</remote-alias>
              <ordinal>15</ordinal>
              <family>combined_DF_simple.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>827757.90440580761</statistic>
                <statistic aggregation='Avg' datatype='real'>11185.917627105508</statistic>
                <statistic aggregation='Min' datatype='real'>9654.8503796721452</statistic>
                <statistic aggregation='Max' datatype='real'>13862.648863247872</statistic>
                <statistic aggregation='Stdev' datatype='real'>942.85901258528565</statistic>
                <statistic aggregation='StdevP' datatype='real'>936.46667438844145</statistic>
                <statistic aggregation='Var' datatype='real'>888983.11761329987</statistic>
                <statistic aggregation='VarP' datatype='real'>876969.83224014717</statistic>
                <statistic aggregation='Count' datatype='integer'>74</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>9324127501.4546108</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='quantitative' column='[Q5_Q1_adj_diff_pct]' included-values='in-range'>
          <min>-5.9789159332190893</min>
          <max>14.34469497961893</max>
        </filter>
        <filter class='quantitative' column='[none:Date:qk]' included-values='in-range'>
          <min>#2011-08-01#</min>
          <max>#2017-09-01#</max>
        </filter>
        <filter class='quantitative' column='[portfolio_return_value]' included-values='in-range'>
          <min>965.0</min>
          <max>13862.648863247872</max>
        </filter>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.141463' measure-ordering='alphabetic' measure-percentage='0.858537' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[:Measure Names]' type='shape'>
            <map to='circle'>
              <bucket>&quot;[federated.0hmtes00luxp781bkj8fj04ogy94].[avg:portfolio_return_value:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.12fe63b0yhdrls1chl1601wdsodl].[avg:portfolio_return_value:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='federated.0hmtes00luxp781bkj8fj04ogy94'>
        <column-instance column='[portfolio_return_value]' derivation='Avg' name='[avg:portfolio_return_value:qk]' pivot='key' type='quantitative' />
        <column caption='Cosine Return ($)' datatype='real' name='[portfolio_return_value]' role='measure' type='quantitative' />
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Consumer Staples - Cumulative Portfolio Return (Simple, Cosine, Jaccard)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Consumer Staples Cumulative Portfolio Return </run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontsize='12'>Simple, Cosine, and Jaccard Models</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='combined_DF_simple.csv (combined_DF_simple)' name='federated.12fe63b0yhdrls1chl1601wdsodl' />
            <datasource caption='combined_DF_jacard.csv (combined_DF_jacard)' name='federated.1l3kb9f0cns9a715jiw291mtalsi' />
            <datasource caption='combined_DF_cosine-1.csv (combined_DF_cosine-1)' name='federated.0hmtes00luxp781bkj8fj04ogy94' />
          </datasources>
          <datasource-dependencies datasource='federated.0hmtes00luxp781bkj8fj04ogy94'>
            <column-instance column='[portfolio_return_value]' derivation='Avg' name='[avg:portfolio_return_value:qk]' pivot='key' type='quantitative' />
            <column caption='Cosine Return ($)' datatype='real' name='[portfolio_return_value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.12fe63b0yhdrls1chl1601wdsodl'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[portfolio_return_value]' derivation='Avg' name='[avg:portfolio_return_value:qk]' pivot='key' type='quantitative' />
            <column caption='Simple Return ($)' datatype='real' name='[portfolio_return_value]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1l3kb9f0cns9a715jiw291mtalsi'>
            <column-instance column='[portfolio_return_value]' derivation='Avg' name='[avg:portfolio_return_value:qk]' pivot='key' type='quantitative' />
            <column caption='Jaccard Return ($)' datatype='real' name='[portfolio_return_value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.12fe63b0yhdrls1chl1601wdsodl].[avg:portfolio_return_value:qk]' scope='rows' value='Simple Return ($)' />
            <format attr='subtitle' class='0' field='[federated.12fe63b0yhdrls1chl1601wdsodl].[avg:portfolio_return_value:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.12fe63b0yhdrls1chl1601wdsodl].[avg:portfolio_return_value:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.1l3kb9f0cns9a715jiw291mtalsi].[avg:portfolio_return_value:qk]' scope='rows' value='Jacard Return ($)' />
            <format attr='subtitle' class='0' field='[federated.1l3kb9f0cns9a715jiw291mtalsi].[avg:portfolio_return_value:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1l3kb9f0cns9a715jiw291mtalsi].[avg:portfolio_return_value:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.0hmtes00luxp781bkj8fj04ogy94].[avg:portfolio_return_value:qk]' scope='rows' value='Cosine Return ($)' />
            <format attr='subtitle' class='0' field='[federated.0hmtes00luxp781bkj8fj04ogy94].[avg:portfolio_return_value:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0hmtes00luxp781bkj8fj04ogy94].[avg:portfolio_return_value:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.12fe63b0yhdrls1chl1601wdsodl].[tmn:Date:ok]' value='*mmm-yyyy' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0hmtes00luxp781bkj8fj04ogy94].[avg:portfolio_return_value:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.12fe63b0yhdrls1chl1601wdsodl].[avg:portfolio_return_value:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l3kb9f0cns9a715jiw291mtalsi].[avg:portfolio_return_value:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.12fe63b0yhdrls1chl1601wdsodl].[avg:portfolio_return_value:qk] + ([federated.0hmtes00luxp781bkj8fj04ogy94].[avg:portfolio_return_value:qk] + [federated.1l3kb9f0cns9a715jiw291mtalsi].[avg:portfolio_return_value:qk]))</rows>
        <cols>[federated.12fe63b0yhdrls1chl1601wdsodl].[tmn:Date:ok]</cols>
        <annotations>
          <annotation class='point' id='4' mark-position='1' pullback='0' text-width='91'>
            <formatted-text>
              <run bold='true' fontcolor='#000000' fontsize='8' underline='true'>Q1 Stocks</run>
              <run>Æ&#10;</run>
              <run fontsize='8'>K,  KHC </run>
              <run>Æ&#10;</run>
              <run fontsize='8'>WBA , MNST</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.5'>
                  <node-reference>
                    <fields>
                      <field>[federated.12fe63b0yhdrls1chl1601wdsodl].[tmn:Date:ok]</field>
                    </fields>
                    <multibucket>
                      <bucket>#2017-09-01 00:00:00#</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='12024.341091672941'>
                  <node-reference>
                    <axis>[federated.12fe63b0yhdrls1chl1601wdsodl].[avg:portfolio_return_value:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-51' y='72' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='0' text-width='87'>
            <formatted-text>
              <run bold='true' fontcolor='#000000' fontsize='8' underline='true'>Q1 Stocks</run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='8'>K,  KHC </run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='8'>MNST, HSY</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.531644'>
                  <node-reference>
                    <fields>
                      <field>[federated.12fe63b0yhdrls1chl1601wdsodl].[tmn:Date:ok]</field>
                    </fields>
                    <multibucket>
                      <bucket>#2017-09-01 00:00:00#</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='11929.245167932695'>
                  <node-reference>
                    <axis>[federated.0hmtes00luxp781bkj8fj04ogy94].[avg:portfolio_return_value:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-50' y='68' />
          </annotation>
          <annotation class='point' id='6' mark-position='1' pullback='0' text-width='76'>
            <formatted-text>
              <run bold='true' fontcolor='#000000' fontsize='8' underline='true'>Q1 Stocks</run>
              <run>Æ&#10;</run>
              <run bold='true' fontcolor='#000000' fontsize='8'>K, KHC</run>
              <run>Æ&#10;</run>
              <run bold='true' fontcolor='#000000' fontsize='8'>WBA, TAP</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.531644'>
                  <node-reference>
                    <fields>
                      <field>[federated.12fe63b0yhdrls1chl1601wdsodl].[tmn:Date:ok]</field>
                    </fields>
                    <multibucket>
                      <bucket>#2017-09-01 00:00:00#</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='12539.483192170683'>
                  <node-reference>
                    <axis>[federated.1l3kb9f0cns9a715jiw291mtalsi].[avg:portfolio_return_value:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-49' y='75' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Consumer Staples - Quintile 5 and 1 Variance (Simple, Cosine, Jaccard)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Consumer Staples - Quintile 5 and 1 Variance</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontsize='12'>Simple, Cosine, and Jaccard Models</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='combined_DF_simple.csv (combined_DF_simple)' name='federated.12fe63b0yhdrls1chl1601wdsodl' />
            <datasource caption='combined_DF_jacard.csv (combined_DF_jacard)' name='federated.1l3kb9f0cns9a715jiw291mtalsi' />
            <datasource caption='combined_DF_cosine-1.csv (combined_DF_cosine-1)' name='federated.0hmtes00luxp781bkj8fj04ogy94' />
          </datasources>
          <datasource-dependencies datasource='federated.0hmtes00luxp781bkj8fj04ogy94'>
            <column caption='Cosine Quintile Variance %' datatype='real' name='[Q5_Q1_adj_diff_pct]' role='measure' type='quantitative' />
            <column-instance column='[Q5_Q1_adj_diff_pct]' derivation='Avg' name='[avg:Q5_Q1_adj_diff_pct:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.12fe63b0yhdrls1chl1601wdsodl'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Simple Quintile Variance %' datatype='real' name='[Q5_Q1_adj_diff_pct]' role='measure' type='quantitative' />
            <column-instance column='[Q5_Q1_adj_diff_pct]' derivation='Avg' name='[avg:Q5_Q1_adj_diff_pct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1l3kb9f0cns9a715jiw291mtalsi'>
            <column caption='Jaccard Quintile Variance %' datatype='real' name='[Q5_Q1_adj_diff_pct]' role='measure' type='quantitative' />
            <column-instance column='[Q5_Q1_adj_diff_pct]' derivation='Avg' name='[avg:Q5_Q1_adj_diff_pct:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.12fe63b0yhdrls1chl1601wdsodl].[avg:Q5_Q1_adj_diff_pct:qk]' scope='rows' value='Simple Variance %' />
            <format attr='subtitle' class='0' field='[federated.12fe63b0yhdrls1chl1601wdsodl].[avg:Q5_Q1_adj_diff_pct:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.12fe63b0yhdrls1chl1601wdsodl].[avg:Q5_Q1_adj_diff_pct:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.1l3kb9f0cns9a715jiw291mtalsi].[avg:Q5_Q1_adj_diff_pct:qk]' scope='rows' value='Jaccard Variance %' />
            <format attr='subtitle' class='0' field='[federated.1l3kb9f0cns9a715jiw291mtalsi].[avg:Q5_Q1_adj_diff_pct:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1l3kb9f0cns9a715jiw291mtalsi].[avg:Q5_Q1_adj_diff_pct:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.0hmtes00luxp781bkj8fj04ogy94].[avg:Q5_Q1_adj_diff_pct:qk]' scope='rows' value='Cosine Variance %' />
            <format attr='subtitle' class='0' field='[federated.0hmtes00luxp781bkj8fj04ogy94].[avg:Q5_Q1_adj_diff_pct:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0hmtes00luxp781bkj8fj04ogy94].[avg:Q5_Q1_adj_diff_pct:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.12fe63b0yhdrls1chl1601wdsodl].[tmn:Date:ok]' value='*mmm-yyyy' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0hmtes00luxp781bkj8fj04ogy94].[avg:Q5_Q1_adj_diff_pct:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.12fe63b0yhdrls1chl1601wdsodl].[avg:Q5_Q1_adj_diff_pct:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l3kb9f0cns9a715jiw291mtalsi].[avg:Q5_Q1_adj_diff_pct:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.12fe63b0yhdrls1chl1601wdsodl].[avg:Q5_Q1_adj_diff_pct:qk] + ([federated.0hmtes00luxp781bkj8fj04ogy94].[avg:Q5_Q1_adj_diff_pct:qk] + [federated.1l3kb9f0cns9a715jiw291mtalsi].[avg:Q5_Q1_adj_diff_pct:qk]))</rows>
        <cols>[federated.12fe63b0yhdrls1chl1601wdsodl].[tmn:Date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='S&amp;P  500 - Quintile 5 and 1 Variance (N-Positive, N-Negative, N-Positive-Negative)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>S&amp;P 500 - Quintile 5 and 1 Variance</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontsize='12'>N-Positive, N-Negative, and N-Positive-Negative Models</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='combined_DF_filesizeQ1Q52.csv (combined_DF_filesizeQ1Q52)' name='federated.1ttep9r0g6bkro19knk1u0on0rdg' />
            <datasource caption='combined_DF_files_N_positive.cs (combined_DF_files_N_positive)' name='federated.0aunuvn0o4d5qq1gvtvgv0jhh5qr' />
            <datasource caption='combined_DF_files_N_POSNEG.csv (combined_DF_files_N_POSNEG)' name='federated.1pvbgg10wgdmp61cc5e1k1c99tvf' />
            <datasource caption='combined_DF_files_N_negative.cs (combined_DF_files_N_negative)' name='federated.082wkbe033d9fn15ymbxl0ivyoco' />
          </datasources>
          <datasource-dependencies datasource='federated.082wkbe033d9fn15ymbxl0ivyoco'>
            <column caption='N-Negative Quintile Variance %' datatype='real' name='[Q5_Q1_adj_diff_pct]' role='measure' type='quantitative' />
            <column-instance column='[Q5_Q1_adj_diff_pct]' derivation='Avg' name='[avg:Q5_Q1_adj_diff_pct:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0aunuvn0o4d5qq1gvtvgv0jhh5qr'>
            <column caption='N-Positive Quintile Variance %' datatype='real' name='[Q5_Q1_adj_diff_pct]' role='measure' type='quantitative' />
            <column-instance column='[Q5_Q1_adj_diff_pct]' derivation='Avg' name='[avg:Q5_Q1_adj_diff_pct:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1pvbgg10wgdmp61cc5e1k1c99tvf'>
            <column caption='N-Positive Negative Quintile Variance %' datatype='real' name='[Q5_Q1_adj_diff_pct]' role='measure' type='quantitative' />
            <column-instance column='[Q5_Q1_adj_diff_pct]' derivation='Avg' name='[avg:Q5_Q1_adj_diff_pct:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ttep9r0g6bkro19knk1u0on0rdg'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0aunuvn0o4d5qq1gvtvgv0jhh5qr].[avg:Q5_Q1_adj_diff_pct:qk]' scope='rows' value='N-Positive Variance %' />
            <format attr='subtitle' class='0' field='[federated.0aunuvn0o4d5qq1gvtvgv0jhh5qr].[avg:Q5_Q1_adj_diff_pct:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0aunuvn0o4d5qq1gvtvgv0jhh5qr].[avg:Q5_Q1_adj_diff_pct:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.1pvbgg10wgdmp61cc5e1k1c99tvf].[avg:Q5_Q1_adj_diff_pct:qk]' scope='rows' value='N-PosNeg Variance %' />
            <format attr='subtitle' class='0' field='[federated.1pvbgg10wgdmp61cc5e1k1c99tvf].[avg:Q5_Q1_adj_diff_pct:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1pvbgg10wgdmp61cc5e1k1c99tvf].[avg:Q5_Q1_adj_diff_pct:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.082wkbe033d9fn15ymbxl0ivyoco].[avg:Q5_Q1_adj_diff_pct:qk]' scope='rows' value='N-Negative Variance %' />
            <format attr='subtitle' class='0' field='[federated.082wkbe033d9fn15ymbxl0ivyoco].[avg:Q5_Q1_adj_diff_pct:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.082wkbe033d9fn15ymbxl0ivyoco].[avg:Q5_Q1_adj_diff_pct:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1ttep9r0g6bkro19knk1u0on0rdg].[tmn:Date:ok]' value='*mmm-yyyy' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0aunuvn0o4d5qq1gvtvgv0jhh5qr].[avg:Q5_Q1_adj_diff_pct:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1pvbgg10wgdmp61cc5e1k1c99tvf].[avg:Q5_Q1_adj_diff_pct:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.082wkbe033d9fn15ymbxl0ivyoco].[avg:Q5_Q1_adj_diff_pct:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0aunuvn0o4d5qq1gvtvgv0jhh5qr].[avg:Q5_Q1_adj_diff_pct:qk] + ([federated.082wkbe033d9fn15ymbxl0ivyoco].[avg:Q5_Q1_adj_diff_pct:qk] + [federated.1pvbgg10wgdmp61cc5e1k1c99tvf].[avg:Q5_Q1_adj_diff_pct:qk]))</rows>
        <cols>[federated.1ttep9r0g6bkro19knk1u0on0rdg].[tmn:Date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='S&amp;P 500 - Cumulative Portfolio Return (N-Positive, N-Negative, N-Positive-Negative)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>S&amp;P 500 Cumulative Portfolio Return</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontsize='12'>N-Positive, N-Negative, and N-Positive-Negative Models</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='combined_DF_filesizeQ1Q52.csv (combined_DF_filesizeQ1Q52)' name='federated.1ttep9r0g6bkro19knk1u0on0rdg' />
            <datasource caption='combined_DF_files_N_positive.cs (combined_DF_files_N_positive)' name='federated.0aunuvn0o4d5qq1gvtvgv0jhh5qr' />
            <datasource caption='combined_DF_files_N_POSNEG.csv (combined_DF_files_N_POSNEG)' name='federated.1pvbgg10wgdmp61cc5e1k1c99tvf' />
            <datasource caption='combined_DF_files_N_negative.cs (combined_DF_files_N_negative)' name='federated.082wkbe033d9fn15ymbxl0ivyoco' />
          </datasources>
          <datasource-dependencies datasource='federated.082wkbe033d9fn15ymbxl0ivyoco'>
            <column-instance column='[portfolio_return_value]' derivation='Avg' name='[avg:portfolio_return_value:qk]' pivot='key' type='quantitative' />
            <column caption='N-Negative Return ($)' datatype='real' name='[portfolio_return_value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0aunuvn0o4d5qq1gvtvgv0jhh5qr'>
            <column-instance column='[portfolio_return_value]' derivation='Avg' name='[avg:portfolio_return_value:qk]' pivot='key' type='quantitative' />
            <column caption='N-Positive Return ($)' datatype='real' name='[portfolio_return_value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1pvbgg10wgdmp61cc5e1k1c99tvf'>
            <column-instance column='[portfolio_return_value]' derivation='Avg' name='[avg:portfolio_return_value:qk]' pivot='key' type='quantitative' />
            <column caption='N-Positive Negative Return ($)' datatype='real' name='[portfolio_return_value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ttep9r0g6bkro19knk1u0on0rdg'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0aunuvn0o4d5qq1gvtvgv0jhh5qr].[avg:portfolio_return_value:qk]' scope='rows' value='N-Positive Return ($)' />
            <format attr='subtitle' class='0' field='[federated.0aunuvn0o4d5qq1gvtvgv0jhh5qr].[avg:portfolio_return_value:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0aunuvn0o4d5qq1gvtvgv0jhh5qr].[avg:portfolio_return_value:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.1pvbgg10wgdmp61cc5e1k1c99tvf].[avg:portfolio_return_value:qk]' scope='rows' value='N-PosNeg Return ($)' />
            <format attr='subtitle' class='0' field='[federated.1pvbgg10wgdmp61cc5e1k1c99tvf].[avg:portfolio_return_value:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1pvbgg10wgdmp61cc5e1k1c99tvf].[avg:portfolio_return_value:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.082wkbe033d9fn15ymbxl0ivyoco].[avg:portfolio_return_value:qk]' scope='rows' value='N-Negative Return ($)' />
            <format attr='subtitle' class='0' field='[federated.082wkbe033d9fn15ymbxl0ivyoco].[avg:portfolio_return_value:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.082wkbe033d9fn15ymbxl0ivyoco].[avg:portfolio_return_value:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1ttep9r0g6bkro19knk1u0on0rdg].[tmn:Date:ok]' value='*mmm-yyyy' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0aunuvn0o4d5qq1gvtvgv0jhh5qr].[avg:portfolio_return_value:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1pvbgg10wgdmp61cc5e1k1c99tvf].[avg:portfolio_return_value:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.082wkbe033d9fn15ymbxl0ivyoco].[avg:portfolio_return_value:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0aunuvn0o4d5qq1gvtvgv0jhh5qr].[avg:portfolio_return_value:qk] + ([federated.082wkbe033d9fn15ymbxl0ivyoco].[avg:portfolio_return_value:qk] + [federated.1pvbgg10wgdmp61cc5e1k1c99tvf].[avg:portfolio_return_value:qk]))</rows>
        <cols>[federated.1ttep9r0g6bkro19knk1u0on0rdg].[tmn:Date:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard - Consumer Staples Cumulative Portfolio Return'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='6' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='94010' id='4' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='94010' id='1' name='Consumer Staples - Cumulative Portfolio Return (Simple, Cosine, Jaccard)' w='100000' x='0' y='0' />
            </zone>
            <zone forceUpdate='true' h='5469' id='7' type='text' w='100000' x='0' y='94010'>
              <formatted-text>
                <run bold='true' fontcolor='#000000'>Note: </run>
                <run fontcolor='#000000'> The Quintile 1 stocks highlighted in each model indicates the potential impact on the following period&apos;s overall portfolio return.  It is recommended to place additional monitoring in these stocks.</run>
              </formatted-text>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard - Consumer Staples Quintile Variance and Cumulative Portfolio Return'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' name='Consumer Staples - Cumulative Portfolio Return (Simple, Cosine, Jaccard)' w='50000' x='50000' y='0' />
          <zone h='100000' id='3' name='Consumer Staples - Quintile 5 and 1 Variance (Simple, Cosine, Jaccard)' w='50000' x='0' y='0' />
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard - S&amp;P 500 Cumulative Portfolio Return'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='6' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='99362' id='4' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='64593' id='1' name='S&amp;P 500 - Cumulative Portfolio Return (N-Positive, N-Negative, N-Positive-Negative)' w='100000' x='0' y='0' />
              <zone fixed-size='87' forceUpdate='true' h='34769' id='7' is-fixed='true' type='text' w='100000' x='0' y='64593'>
                <formatted-text>
                  <run bold='true' fontcolor='#000000' fontsize='8'>Note: </run>
                  <run fontcolor='#000000' fontsize='8'> The Quintile 1 stocks highlighted in each model indicates the potential impact on the following period&apos;s overall portfolio return.  Place additional monitoring in these stocks.</run>
                  <run>Æ&#10;</run>
                  <run bold='true' fontcolor='#000000' fontsize='8' underline='true'>N-Positive Quintile 1 Stocks:</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000' fontsize='8'>CCL COST PDCO VAR DRI SJM GIS ORCL CSRA BF.B GPN UHS MCHP CAG FDX PAYX STX NTAP NKE RMD CTAS RL EA HRB KORS QRVO KLAC MSFT DAL ROST PG CLX BMY HPQ HBI HPE TGT AMZN WHR LRCX KMB YUM GILD AXP GWW PPG L VRSN C SLB KMX ESRX MMC CDNS VNO KMI EBAY HAL SWK TSN SNPS INTC URI HRL MAS PHM O ADBE XEL DTE RCL CINF IBM AMAT IVZ SHW AON MMM ABT ATVI AMG APD ALK ARE ALXN ALGN AGN LNT ALL GOOGL GOOG AEE AEP AIG AWK AMP ABC AME</run>
                  <run>Æ&#10;</run>
                  <run bold='true' fontcolor='#000000' fontsize='8' underline='true'>N-Negative Quintile 1 Stocks:</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000' fontsize='8'>HBI DRI TGT QRVO BMY SRCL ROST WY MGM KMB RMD PDCO CAG PPG WHR KORS CCL SJM GIS NKE ABBV STX DAL XRAY SWK CTAS GWW CSRA KHC BF.B PAYX YUM ORCL CTXS HRB AOS HON CBG GPN MAS NLSN AMZN AAP STT SLB MMC FDX WRK NTAP LMT TSS PHM TSN AXP RL EFX COST KMX GILD CFG WDC GPS IBM KLAC L PEG SO DG PSX AFL VRSN C RRC HCP EA DTE BBY PFE CDNS HAL MCHP DLTR F WLTW ZBH EBAY KMI IVZ DGX EXPE ADBE ITW WM MAT TRV UAL KEY STZ</run>
                  <run>Æ&#10;</run>
                  <run bold='true' fontcolor='#000000' fontsize='8' underline='true'>N-Positive-Negative Quintile 1 Stocks:</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000' fontsize='8'>HBI DRI KMB CCL MGM BMY TGT CAG KHC GWW WHR NLSN CTXS AMZN CBG WY QRVO ABBV AOS SWK XRAY STT PDCO MAS YUM PPG SJM GIS WRK RMD NKE AFL VRSN DAL ROST SLB ITW PAYX KMX LMT CDNS HON GILD WDC HCP TSS NTAP EFX KORS GPS PHM DG BF.B MMC L PRGO DTE TSN CTAS PEG SRCL HRB AXP STX WM COST UAL CFG AAP PSX ADBE EBAY PFE DHR ZBH IBM DGX KEY NVDA EA ORCL FDX TRV CSRA NEM TDG WLTW MCHP KLAC C SO MAT KMI CA PYPL AET IVZ MAA</run>
                </formatted-text>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard - S&amp;P 500 Quintile Variance and Cumulative Portfolio Return'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' name='S&amp;P  500 - Quintile 5 and 1 Variance (N-Positive, N-Negative, N-Positive-Negative)' w='50000' x='0' y='0' />
          <zone h='100000' id='3' name='S&amp;P 500 - Cumulative Portfolio Return (N-Positive, N-Negative, N-Positive-Negative)' w='50000' x='50000' y='0' />
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='156'>
    <window class='dashboard' name='Dashboard - Consumer Staples Quintile Variance and Cumulative Portfolio Return'>
      <viewpoints>
        <viewpoint name='Consumer Staples - Cumulative Portfolio Return (Simple, Cosine, Jaccard)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Consumer Staples - Quintile 5 and 1 Variance (Simple, Cosine, Jaccard)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Dashboard - Consumer Staples Cumulative Portfolio Return'>
      <viewpoints>
        <viewpoint name='Consumer Staples - Cumulative Portfolio Return (Simple, Cosine, Jaccard)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview visible='true' />
    </window>
    <window class='worksheet' name='Consumer Staples - Quintile 5 and 1 Variance (Simple, Cosine, Jaccard)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.12fe63b0yhdrls1chl1601wdsodl].[avg:Q5_Q1_adj_diff_pct:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.12fe63b0yhdrls1chl1601wdsodl].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Consumer Staples - Cumulative Portfolio Return (Simple, Cosine, Jaccard)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12fe63b0yhdrls1chl1601wdsodl].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard - S&amp;P 500 Quintile Variance and Cumulative Portfolio Return'>
      <viewpoints>
        <viewpoint name='S&amp;P  500 - Quintile 5 and 1 Variance (N-Positive, N-Negative, N-Positive-Negative)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='S&amp;P 500 - Cumulative Portfolio Return (N-Positive, N-Negative, N-Positive-Negative)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard - S&amp;P 500 Cumulative Portfolio Return'>
      <viewpoints>
        <viewpoint name='S&amp;P 500 - Cumulative Portfolio Return (N-Positive, N-Negative, N-Positive-Negative)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='S&amp;P  500 - Quintile 5 and 1 Variance (N-Positive, N-Negative, N-Positive-Negative)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.082wkbe033d9fn15ymbxl0ivyoco].[avg:Q5_Q1_adj_diff_pct:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1ttep9r0g6bkro19knk1u0on0rdg].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='S&amp;P 500 - Cumulative Portfolio Return (N-Positive, N-Negative, N-Positive-Negative)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.082wkbe033d9fn15ymbxl0ivyoco].[avg:portfolio_return_value:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1ttep9r0g6bkro19knk1u0on0rdg].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Consumer Staples - Cumulative Portfolio Return (Simple, Cosine, Jaccard)' width='384'>
      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
      3G43JpOJtLQ04uPjVevS7/czODhIf38/fr+f+Ph40tPTiY6OVi3jdrpQe6hQUBd9fX3YbDZ0
      Oh2pqamqBxUwXhfR0dGkp6cTFxenun37/X6Ghobo7+/H5/NNWRcWiyW0N1VSUlKoXUxVF/fk
      XkD19fUcOHAAn8+HXq/H5XJRXV3NlStXyMvLCzt6l2WZ06dPc+7cObRaLVFRUdhsNi5fvkxr
      ayuzZs0K2zC8Xi979+6lsbExdCBHb28v5eXleDwesrKywj7UgYEBdu3axcDAAAaDAVmWaWlp
      4dy5c6r3Sqmvr2f//v2hk4zcbjfV1dVUVFQwc+bMsKN3WZY5c+ZMaFX1zbpobm5WrYsPPviA
      hoaGkC76+vooLy/H5XKRnZ0dVhdDQ0Ps3LkTi8US0kVraytlZWUkJCSomtU1Njayb9++0EEt
      brebmpoaLl++rEoXiqJw9uxZzpw5g0ajQafTYbfbqaiooKmpicLCwrCdTkdHB3v27AkZD5/P
      R0NDA+Xl5eTk5KjaWqOiooLS0tLQoSAOh4OrV6+GFlCFM2Z+v58jR45w9erV0AEpAwMDXLx4
      kb6+PvLz88M+D5fLxXvvvUdXV1fIcHV3d1NWVkZUVBRpaWlhZXR2drJnzx7sdntIF42NjZw7
      d46srCxVbpyrV69y9OjR0AFADocjtLGdmlTrQCBASUkJV65cCeliaGiIixcv0tPTQ2FhYdj7
      8Hg8vPfee3R0dIQMV1AXGo2G9PT0sDK6u7vZvXt3SBd+v5/GxkbKy8vJzMxU5bK9du0aR44c
      Ca1SdzqdoNxj+P1+5Re/+IXidDrHXJdlWampqVEOHz4cVsbQ0JDyzjvvKD6fb8z1QCCgHDp0
      SGloaAgr4/Lly8rZs2cVWZbHXPd6vcqOHTuUoaGhsDL279+vNDc3j5Ehy7JitVqV7du3hy3v
      9/uV7du3Kw6HY8x1WZaV+vp65cMPPwwrw2azKW+99Zbi9XrHXA8EAsqRI0eU2trasDIqKyuV
      U6dOTaiLd955RxkcHAwr48MPP1QaGxvH6WJ4eFi1Lt544w3FbrePuS7LstLU1KTs27cvrAyH
      w6H86le/mlAXpaWlyo0bNz62fCAQUH79618r/f394+rQ39+v7NixI2wdfD6f8vOf/1xxu93j
      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
      RolWAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Consumer Staples - Quintile 5 and 1 Variance (Simple, Cosine, Jaccard)' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Dashboard - Consumer Staples Cumulative Portfolio Return' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Dashboard - Consumer Staples Quintile Variance and Cumulative Portfolio Return' width='384'>
      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
      bDbsy2fsgNTL7tces9WBoihiSX47Dpwqp6bRwvFzVUHbACREhzJtWC8cThcpcb6dXvjnVTvZ
      f6qc++ePZN74PkSG6dv0s/+/JeOprDORnth9u0lNVjtAl8c/6posnCquRaWSaDBaL5p9tSev
      lC2HC/nBdUNJiA7jjw9fCyjEdmICRUe8Udfi7bff5tChQ63jBw888ECnr3+VRSfYvr+Igdmp
      WJwQHyKzZc8xFsycwser3mPkzJuI8/MwicfJ4DQaDWlpaRQXF1NXV+d2bUybuZHI2DTUEmT1
      6c3RXSVAS9nJC629zWwiMToEh1PGZbdQVtaETtfyAXQ4HISGhtLY2EhMTAy1tbVMHJCExZjF
      yJx0ysrKGNYriiEZQ3G5LDQ0KDQ3NxMdHU1tbS1xcXGt/zY1NRESEoLT6URRFByyxB9W7cdq
      d/LIvH5kpqe0btvY2EhYWBh2e8sfhE6nw2QyERUVddFxv7utJEloNBosFguRkZEXbdvQ0EBE
      RARWqxW1Wo1KpcJmsxEeHt56fi9sa7PZ2n39cXFx1NXVERMTg9FoRK/XI8syLpcLg8FAU1NT
      m23be/2yLGMwGC55rhobG1k2oy9De8Uwsk8M9fX1Pnv9Vqu13W3r6+uJiorCbDaj0WjanKv6
      +npiY2Opra3lB7P7U19fj8VspNZsRqvVXvKz05Vzl54YycniWjSyhYaGhkueu7KysjafM08+
      Ow1Whb3HCpk/aSDNTQ2dOnchISHIsnzR629oaGg9V5d6/U6nE6ei5vfv7UFR4OG5/eiZlkxt
      bS2xsbE0NzdjMBjanKuO/s4emNsfCdBLDkpKStq8/rfXH6S42khipJb547Nxnn/9dU4rZrO5
      3XPV0NBAeHg4jc0mduZVMrR3IlEhqkt+zrqyerempoZf//rXHqW/qSmvpHf/HPr1Tic8LARb
      QyUgsW/bl0RnjaRPektxHpfr2xxTF86rr3g0C+jnP/85c+bMISyspT80Jyen9f87y1Rfyrot
      p7jlhumYKs+w/nA1i64Z32abhoYGQsMiUBQFvR9XftY3W3j05fXYHS5efvQ6krrhHHFFUcgv
      qyclLoLQbjL+0R6r3UlxVSPZqbFBOy1WlhUsNgehBt9Pj37s5c85V9HIAwtG+m1aZU2jmUdf
      +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
    </thumbnail>
    <thumbnail height='384' name='Dashboard - S&amp;P 500 Cumulative Portfolio Return' width='384'>
      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
      HA4sFovsC7+YgBSr1Sq7QMbHx4d9xu12MzU1hdFoDBtJKtnYxfEAACAASURBVLmESZO2r68P
      nU6nGggm7fBut5vU1NRF6RL9fr9snF7MM9KCKcVZqG1KXq+XQ4cOsXr1auLj43E6nTQ1NbFj
      xw5VN0ppgs7NzZGYmIjJZArrqy/Jz2g0kpqaGlYWUru1Wi2pqamKE0kURU6fPk1sbCzZ2dkE
      AgG6urpISkpi7dq1qnXcjLwh2F/SQhNu85a+bbHyttvtHD9+nHXr1hETE4PNZqOxsZE777xT
      VYbz5Z2cnKzoTj2/vM1mY2ZmhpiYGJKSkhbV7omJCQwGAykpKWED5v72t7/Jdjqv10tTUxPr
      1q1TjE+A4OJnt9vRaDTExMQgiqJqPYFAgJmZGQKBAHFxcap9JH2Xx+ORPaQk70Clto+MjFBf
      X8+6deuIjIxkenqanp4eDhw4EPa24XK5iIyMlOWt1r8ul4u5uTl0Oh2JiYlhPRylGCpRFImJ
      ibn1bgD9/f1UVlbK15i0tDRsNhtWq3VBn1xpgku3Bbfbjd1uV3Ut83q9HD58mKSkJEwmE0ND
      Q1gsFg4ePKjYwRcuXGBmZob4+Hh8Ph8Wi4U9e/YoGjfn5ubYu3evLNz09HSOHTum2O7Z2VlO
      nTpFYmIier2e5uZmUlJS2LRpk+IAGRgYoKGhgaysLLRaLS0tLaSnpysa09xuN4cPHyY+Ph6j
      0UhbWxtRUVFUVVUtWId0ipqv5oqIiGBkZERxA/D5fBw9ehSj0Uh0dDTt7e2IohjSF9fj1KlT
      QNDtzev1cvbsWXbv3q14Uu3s7KS9vZ3k5GREUaSmpoby8nJycnJuKCtFT5aXl8v1Z2RkcOLE
      CdUNoKamBovFsmh5t7e3093dLRuK6+vrKSoqUtTXLiTv5ORk2Z5zPSYmJlizZo1sfE9LS8Pn
      8zExMUFe3sIJlm5W3oFAQA4QjIuLw2w2MzExwf79+xUX0MbGRoaHh0lMTMTv9zM9PU1VVZWi
      E4bf7yc2NjbE4yc+Pp6mpibFDaCrq4srV67I8p6enmbDhg2Kt4bx8XHOnz9PVlYWer2epqam
      ED//63H9mLXb7fKYVcLg4CA7duyQx2haWhozMzMyTcf1kFRA0sLsdDpxu93s27dP8aBQXV2N
      3W4nJSUFn8+H2WymsrJS0eg/PDwsu0RrNBosFsuttwGUlpZy6NAh0tPTiYqKYnZ2Fq/Xq7io
      2e129Ho9u3btknXI4+PjtLe3K/qsDw8PU1paGuJa2t7ezvDw8IKTye/343A4OHDggFxe8j/f
      uXPngnXk5uby8ssvs2zZMjnXspqrY3NzM3v27JGvh6IoqgYGQXBi3HPPPfJJSBRFjh49qlpH
      VVWVrG8VRZELFy4wOzu7YD4GKRBIUlU4nU6mpqY4cOCAYh29vb2sXr1avvmIokhTU5Oi+5rk
      n33bbbfJfTs3N0dLS8uCkaGiKNLf388999wjlw8EApw4cWLBDUDSLx8+fJi0tDQCgQAjIyOq
      EZuS+918ebtcLi5evKioDhkcHOTgwYMhQTvHjh1T3ABaWlrYvXu3vFhI8vZ6vQveBHJycjh8
      +DAjIyPExMRgt9uxWq0cPHhQsR0tLS3s2LEjxI9cinhdKIp2dnaWlJSUkGjkkZERuru7F9ws
      A4EAExMT3HXXXXJ5v9/PqVOnFBdP6XR84sQJEhMT8Xg8jI6OKqpsRVGkr69vQXkrbQAdHR0h
      TgeiKHLixAnFzIY9PT03NWYhuE4dP36cjIwMjEaj7AWlZKucnJwkJSWFsrIyeZ3q6+ujt7d3
      wXXB7/fjdDpDYg0kj0ilvm1tbeW+++4LGYO33AZgNBp5wxveIC/8kmucWhDHxMQEQ0NDxMfH
      4/F4aGhoUPVCSEtL4/jx42g0GmJjY7HZbLS1tXHXXXctWF6n02G32+nv75dPOs3NzQsuOBJK
      SkrIz8/HZrMBhHVxS09Pp66ujjVr1hAREcH09DQul0v1OpmamsqZM2dYsWIFWq2W4eFhVTVC
      VlYWtbW1lJeXExkZKUehKumqdTod+/fvx2az4XK5MBqNYYnh0tLSOHv2LEajkaioKOx2O729
      vYrGU71ej81m48qVK6SkpODxeGhublaVn8FgoKWlhezsbNkLSM2OsX79etxuNzabDZ1Ox8aN
      G1U9gXQ6HQ6Hg76+PpKSkmR5q6ko4uPjuXDhghwxq/ZNcE3ea9euleUtuTEvBL1ez913383s
      7Cwej4fo6Giio6PDRljX1dXJ8p6dnWV8fFzRXhITE4PZbCYuLo6EhIQQld9CkIzRnZ2dpKen
      EwgE6OjoUI14lzZ7h8OBw+HAYDBQUVGhKo/IyMgQeff19alGfmdmZnL27FlKS0vR6/WMjo6q
      6vTT09MXHLNqB7a4uDjuu+8+Zmdn8fl8rFq1SlXlFxcXR01NDampqcTExOByuWhtbVXsW51O
      h9/vl4NDfT4fbW1tqg4Y8fHx1NfXy3Y6s9l869kAnE4nJ0+eRKfTUVFRQVJSEnV1daxevVrx
      Gup0Ounu7sbhcKDX6ykoKFDVUUPwRNff3y8b1PLz81WjEb1eL52dnfIikp+frxrs0tLSwujo
      aIj3T3V1taKBTLq5SBGJ8fHxFBUVqUZ6Sn7eZrMZQRBIT08nMzNTNTBoenqavr4+fD4fsbGx
      FBcXK7ZbOmkJgkBJSQnLly+nr68PvV6vuhjOzs7S3d0tL1TFxcWqAW0+n4/BwUGsVisGg4H8
      /HzVuIFAIEBfX19IHEBOTo7iBK+rq5MJ+bZt24bf76e2tlbRbRSC8u7q6pL1r3l5eaoLm3TL
      k4z+mZmZpKWlqcriZuTt9Xo5ceIEAGVlZWRmZtLY2Mjy5csVF0NRFLFYLDKXUUxMDMXFxar6
      cI/Hw+DgIHNzc0RFRZGXl6cqO7/fT3d3d0gcgNoYhKDKz+/3k5mZyerVq5mZmcFsNis6MEjy
      lgyg4eQt2fcGBwfx+/2kpKSQnZ2tqj+/2TFrtVo5d+6cHGkeGxtLTU0NGzZsUJSh3W6nu7sb
      p9NJZGQkRUVFqoeEQCDA8PAwU1NTREREkJubq2rfFEWRgYEBeQympKTw98NLukh0d3ezZcsW
      7rjjDtmN0uv1Kp4QpGjV8fFxVq9ezaZNmxAEgdHRUcU6BEGgrq6OoaEhVq5cycqVKxkcHMRu
      tys+09vby8jICMXFxTKtg1oo99jYGHv27CEnJ4fLly8jiqJMELcQPB6P7Ma1detWSktL6e7u
      VnV3k+IZfD4fGzZsICsri4aGBtV2SwFXFRUVrF27loGBgRBf4/mw2WwkJSWxf/9+Ojo6sNls
      BAKBG1gQ50OKWJ2bm2PTpk2sX7+e0dHRG/y456OlpYXu7m6ZdVQQBNW+nZiYoKenh/T0dCoq
      KsjOzqa9vV3xe2ZnZ2V1i9THarKAoNHebDZTVFTEli1biI+PV3XrHB0dpbGxkYiICNavX09q
      aiqNjY2K5ZXkrdS3o6OjFBUVsW/fPurr63G73TKFhBIEQaC5uRmPx8OWLVtYt24dg4ODim0X
      RZGGhgZ6enooKCigtLSU2dlZeUFZCMPDwwwMDJCbm0tFRQXp6el0dHQolpfat2fPHqamphgf
      H5dpMJQwOTlJT08PqampVFRUyDw8SrDb7dTW1mKz2SgvLycvL4/m5mbFvpLGrM1mW/SY7e7u
      prKykttvv53Tp0/LY0ptnero6JDdfzdu3IjdbpcDBxfCfFtXWVkZMTExtLS0KJaXAjDj4uKo
      qKgIkjEqlv47RWpqqqzKqKio4NixY6r+sh6PB6vVyq5du3jttddk3ZmkelkIIyMjJCcns3Pn
      Tk6dOkUgEMBmsyny6Eg0Dbt37+bixYsyf4uaT65Op8PlclFQUCCTqKlN1ubmZtavX096ejo1
      NTVAcKFTu8A1NDSwd+9eYmNjaWpqkk98Smhvb6eoqIiioiLOnDmDKIpMTk4qLjpGo1F2t7v9
      9ts5deqU6vshqAtPSkqivLycU6dOIQgC09PTihNc+vuePXuor6+X+1ZJfqIo0tLSwt69exka
      GpKDaySmU6VnfD4fq1evZnx8nJ6eHtV+lU5Su3fvpra2FofDIRs4ldDa2sr+/fvxer3y+9Um
      t6TmWqy84+PjZTfWqqoqjh8/rjrGISjvwsJCiouLOXv2rHxjVBqHdrsdQRDYs2ePTETocrkU
      F0KJcmHfvn1yFLQgCKqy0Gq18vsqKyupra1lfHxcsbwoijQ3N7N3717MZvOi5C0xi+bl5VFd
      XR12XkhjdsOGDYsasxDk3RkdHSUqKory8nKOHz+uumFYrVYCgQA7duzg2LFjBAIBZmdnFdc2
      URQxm83s27ePnp4epqenEQQBq9WqWEddXR179uzB6XTKB6hbbgNYtmyZbKRMTU1l27ZtREVF
      hXWpMxgMbN++nZMnT6qeUAE5xsBoNLJ+/XrOnDkT9lQLwUW9qqqK06dPq5KuAWzZsgWn0wnA
      tm3biIyMVDQoza8nPz8fQRBUA6EkSMRVJSUlcvBLOIiiSEZGBgkJCbS1tamWlWgcAoEAkZGR
      7N27F0EQFjQYS5AMXPHx8RQUFFBXV6e62ErRxlLfSobQxWDHjh3U1dWp3tw0Gg2bNm2S6Yp3
      7dqFIAiq9puF5K22GEj1BAIBysvL6e7uVvXXlspD0E1YFMWwxGAJCQmy2i0uLo7bbrsNg8Gg
      qrac74GWmJhIa2urqiyk8RQREUFVVRUnTpxYVLsBdu3axblz51QXQan8hg0b8Hq9REREsH//
      fpxOZ9i5AcEN49KlS2E3voiICLxer6z26ezsDPtN0piVKOLDac7z8vJkg++yZcvkIM5weS2M
      RiMbN26UN2Q1SBv1jh07uHDhwg1Rvgu1A4LBeNKmccttAIDsiSOxb27fvl2VZU8KzpIYIRsb
      G1X1nGlpaWi1WkRRJCsri8LCQoaHhxWFp9VqSU9Px+12Exsby+bNm2X+fSWYTCbZ+6K5uZkV
      K1bIARoLobS0lJGREQC2bt3K9PQ0s7OziuUhGAhmNptlPeTY2JiqUbCkpEQ+OZWVleH3+xkf
      Hw9rSJQmVH9/P1u3blXVW2ZnZ8sTtKioiLi4OAYGBhT1rxqNhuzsbDweDzExMVRWVtLY2Khq
      1F2xYgXj4+PodDp2795NXV2d6gEhISGB+Ph4+aoveYAp4Xp5b9myherqalV5r1u3jvHxcTQa
      Dbt376arq0vVID9f3hUVFVgsFmZnZ1V157m5uTK7pcViobKyUnUDkPpJ+r5AIMDY2JhiHdHR
      0bKTQ0JCAhs2bKCrq0txLmk0GnJycmTmzKqqKi5cuBA21iAjI4PIyEgEQaCjo4NNmzYp2lc0
      Go1MYa7T6bjjjju4dOmS6kK7Zs0a2T60efNmXC6XKhvo/DFbXFwcdsxCcIxIh4je3l6ioqLY
      unWr4jMJCQlotVoCgQCZmZnk5ubKuUuU2r18+XIcDgeRkZHs3LmThoYGVdvmunXrGBgYkPMt
      tLS0gHgLo6OjQzSbzYsuHwgExJGREVEQBFEQhEU9Y7fbxYmJiUXXIQjCTddx6tSpRb9fFEVx
      YmJC9Hq9N1XH4OCg6Pf7F13H9PS06HK5Fl2Hy+USz58/v+j3i6Io2mw20Wq1LrqOQCAgDgwM
      3FQdZrN50e8XBOGmZfHfkXd/f/9N1XGz8h4bGxNbW1tvqo7p6WnR6XQuug6/3y8ODQ0t+v3/
      nX7y+/3i6dOnF12HKN6cvKXyXq930e+/2TEriqJ4+fJl0Wq1LroOr9crTkxM3NS4vdkxJcni
      lrwBiFevxBIT4c0819nZqRrBdz3sdruqPnGhOjo6OhZVh9VqZWpqSpUDaCH09fXJzJiLbYfE
      KrlYDA8Py5GV4ero6enBYDAsKp3lfMzMzDAxMbHodohXXfxuBu3t7Yt6/9jYGHa7/aZlcTPy
      lhBOnXM9bkbe3d3dpKWlLZoRUoLZbMZmsy26HX6/n/7+/puqY7GygGAQYyAQuKnsVjdbBwT1
      ++HUWPNhsVgWPWYlVW1ZWZmqW+r1cLvd9Pf339S8WIxKeD46OzuDqtUnnnjiiZt68u8Ezc3N
      xMXFhb1OzodGo8FkMi0qraCEiIgIme98MfQD4lXa5cjIyLDh6H6/n7q6uhCyrMUgKioKk8l0
      U7lCTSYTUVFRi3pGUreYTCaZDlsNQ0NDOJ1OVcKuhaDX62UemsXCZDLJ3EZqkPLWxsfHyxxC
      ald2j8dDY2Oj7CN9M5D6ajEQr0Z6RkVFLaoej8dDbGysnDM6nCw6OzvR6XQ3teAAcgzHYnMv
      S3NpsbKQKBeMRuOicjZPTU0xOjq6qDzT83GzsjCZTBiNxrAUCoBMAyFRTSymry5fvkxqamrY
      hDbzIQWMhaOnmI/FykK86vAgrZ237AYwMTHBxYsXmZqaYmhoiMzMTFUhdnR0UF9fz+TkJH19
      fSQkJITt4JaWFlpaWpicnGRwcDAsuZbEhZ+YmIjdbpdzwCpB8v7p7u7GbDbLbItKEASBkydP
      Mj4+zsDAgMxoqvZNUvj+zMwMXV1dMmeIWvmamhqZ+Ory5cskJyerDva5uTmqq6uZmpqiv7+f
      5ORkVf22KIrU1dXR09PDyMgI/f39qkyJcI0+2W63c+XKFXJyclS/aWBgAIfDQWZmJoFAgNra
      WlXDrtvtprm5mYGBAYaHhwFU+wmCp8eamhqmpqbo6+uTFwcleDwejh49ytzcHO3t7ZhMJtV4
      BumAIKUqrKmpITMzU3XxtFgsVFdXy/EcmZmZqv0kisEsUoODgwwNDWE2m8PW0dPTQ21trewb
      n5ubq1q+paVF5kvy+XzU19erxolA0MW4rq5OHuvhFvbZ2Vlee+21kDgWtQOJeDWyemJigt7e
      Xrxer2J6R6n8+fPnKSwsJDIykqamJpk0UQ2jo6PU1tbKWQnD9W1TUxNtbW2Mj4/T19enSgAI
      wVv08ePHcTgctLS0kJWVpVreYrGEpPC85SKBJWzatCkkejbcbjwyMsLu3bsXfWqGoFpA4qip
      r6/HYrGoDipBEHC5XJhMJhwOR1hvI5PJxH333SerZsJ9m8vlIiYmhi1btiz6VDQ5OUlmZiZr
      166VQ94Xyt86H263W+b1l3hP1FBcXExBQYFcbjEnI5vNxh133LHodnR2drJ//34iIiKYmpri
      ypUrYdNPSqRXEomXGhITE3nggQcWLQsIqmZ279696FNzf38/a9asITc3l0AgwOnTp8OqMJ1O
      J6IoyoR44bB27VpKS0sXLQspVuBmZDEwMMC+ffvQarX09PQwODiomgAIgrJISEjA5XItSuWS
      m5vLW97ylhCPKzUMDg5SXl6+6ExjEvOpFGV86tSpEArxheDxeGQvKClneDhs376diooKIHhr
      WszNZ/fu3YuWRXNzM/v378dgMMiZ0cKpMaUx5ff7b90NoK6ujsHBQWJjY5mdneWNb3yj6mCP
      jY2lu7tbvhonJSWF3b0lnbNGE0ymIglPaRNYv3697OoWjlMeggvt6dOnmZmZITExkYSEBMUk
      8hD0wpCCYyA4ucOxUCYkJFBXVyefTOfm5ujr61M8Keh0OkpLS2ViuqKiorA3pc7OTvr6+uRA
      sDvvvDNsFiPxqh+zJDPJ80oJUpBWbGysbJcZGRlRpALPy8ujrq6OI0eOEBERoRrVC8F+OXfu
      HHNzc0RHR1NQUKBKnQ1B976mpibZRVFSNykhJSVFTlQvXg1A6+vrIzc3d8EFTspeJ/E3rV69
      OuyC3tTUxODgIKIoYrfbeeCBB1RvY3q9HpfLJefM1mq1YRk79Xo9XV1dGAwGJicnEQSBmJgY
      xcV3zZo1nDt3jpaWFgwGg2qicwnDw8O0trbKnk9VVVWqm2V2djYNDQ0hOR3U1GAmk4mxsTHZ
      pjQ3N0d/fz8ZGRkLqpU1Gg3l5eWcPHkSURTJyclZlJrt/PnzDA8Pk5aWhtVq5b777lPdzPR6
      PYODg7LMUlJSVGWelpZGQ0MDqampCIKAxWJRTeuZlJSE2WzmyJEjaDSaW1MFJAgC/f39FBQU
      UFxcjFarJS4uLmySZrvdjsvlwuVyERcXF3YDMJlMcvReYmIiBoOByMhIRbuD5OsdGxvL8uXL
      iYiIUBXe4OAgy5YtQ6vVsnPnTgYHB1V5z+EaNbLL5cLv94el49VoNOj1evkUmZGRgSiKxMXF
      KX6bFKS2atUqdDqdqpoCgokmtm/fTiAQYMWKFbhcLtVYAKkOiUPI7XaTlJSkuuhER0fLNha9
      Xk9SUhIRERFy0p6F2i3JY+PGjYqJzue3Yf369Xi9Xnbt2kVfX5+qykiqQxpPLpeL6OhoVV1v
      RESE7F4MQf97URRlF8CFIMmirKxMHltq6OjooKysjMTERJKTk9Hr9WHtZNJNT3KHDCcLyR4h
      6dBjYmJke47S+wVBQK/Xs3r1agRBCDv3JKI6t9tNRUUFo6OjqlQbcI1K2eVyqX6PBMnVVBRF
      +d2xsbGKLsM6nQ63201hYSFGozGsLPx+v/zdGzduxOVykZqaqromSLkfpHYkJCSolpdsjdKY
      kg5SSvT10i3E4/GwdevWWzMOQJpE6enpNDY2Mjo6GvbKJEUtSv8s5voWGRlJX18fXq8Xr9fL
      8uXLVXX0Ujj55OQkERERtLa2qr4/Li6Oubk5uWy4DEBASBvCqTUAWdjt7e0yaZSkx1wIgUCA
      8+fPk5iYyPj4OP39/WGDd6SFbXJyctGeIfMnq8vlCqtmioqKwmw2y3lS09LSyMrKUpT78PAw
      w8PD2Gw2IiIiVEPkIXgykiJV29rawgbyQXCCz2/DYgIM5+bmuHLliqwLLiwsVDwRSonhY2Ji
      ZBtOuO/SaDTExcXR29vL0NDQog3NUhvCyRqCshgcHJTjULKyslRtXRJNiNVqlfXn4WAymWSu
      +66urrDlJfWr9E+4YEFpU+rs7CQhIQGv10tBQYHiZimKIufOnSMhIYHR0VHMZrNqgCEE54Xf
      7ycnJ4cLFy4sypvwZudFdHQ0Y2NjDA8PExMTQ3x8vBwPshBmZma4cuUKHo8n6KQS9ov+DiFd
      CePj41m/fj2VlZVhLf/JyckUFhZSWFhIIBCQo3DVcOnSJbZv347T6ZTDv9Ug8eNHREQQCATC
      DsKUlBRKS0vZtGkTycnJilmu5iM/P5/CwkIKCgowm81hB4jFYsHpdJKTk4MgCKq8LRDcAPR6
      vWwA9Xq9YRe2bdu2yaR2q1atUuSfn4+MjAxZHuH6FZBZSgVBID4+PuyiMDc3R1ZWlnxCCieL
      vLw8cnNz2bp1K6mpqYtyP4yLi5PbIFH+qmFgYIDo6GiSkpIwGo0MDg6qlvf5fJhMJuLi4sJy
      yUioqqrCaDRSUVHB5s2bw5IeQlB9Io2p8fHxsHVcvHiRbdu24fF4iIyMlI3mSpiZmSE/Px+9
      Xr+oeQHIrpM7d+4kOzs7bHKeyMhIWRYZGRlyEJ0SnE4no6OjrFq1CrfbfUPO34UgiqLMpe/3
      +xcVBS3lPlizZg07d+4Mm5ApNTVVbofT6QzbV5cuXZJZTVNSUsJG7zscDlJTU4mKiro16aCn
      pqa4fPlyyLVIr9ezbds21atSVFSUrAIoKChgZGQk7JVSuuJLEZLhVAIbNmzg/PnzTE5O4nQ6
      VXWdly9fvoG3w2azqfpvazSaENWK0WhUzQkM166tWq0Wh8MRduMzGAxkZWVRXV2Nw+GgsLBQ
      cXOVcqVe3++bNm1S1Y9KNNsSsrKymJqaUtXx6vV6mYtmeHg4rFtdSUkJ58+fx2w243A4VA3G
      1dXVN9y+PB5PWGO50WiUvyM6OpqLFy9SVFSk2gYpC5XVag17mo+OjiYhIYFLly4RCAQoKSlR
      VE/YbDaqq6tvkEVlZaXqoiPdGCQkJSVht9tVVXg6nU4+FI2MjISladi4cSNnzpxhYmICu92u
      aucCOHbs2A23ooiICFUvnYiICPnQkpCQoEo4B9duxj6fT+b6UoMUYX727FlmZ2fJzc1V9RIb
      HR2lpaUlpB3SxqxmA5jvpp6Xl8fExISqPc1gMGCz2RAEAbPZHHZeZGZmUltby8DAQJBFVLX0
      3yGkU4TBYKCwsJD09PSgMSOMl0B3d7esnhAEQbbMq2Hr1q00NjZis9koKioKq/MDWL58OaWl
      pWH9lw0GAz6fj6SkJEpKShbloy+KImfOnJFPBSaTKSwHUnx8PDk5OXR2duJwOMJ6CEj2gRUr
      VpCWlqbaZkmfKAiCfILWarVhDZWiKNLY2BjCh6PGrQ5B/pKmpibsdjtxcXFhDbSBQICcnBzy
      8vLCukIaDAY5x3JxcTGRkZGL8gIaHh6WWScFQQjrlZSZmYnT6WR8fJyOjo6whmlBEEhKSiIq
      KkrROClBp9PJJ9jly5fL6rHFyOLixYvyAqjX68OO84qKCnle5Ofnk5WVpVo+EAiwfPlySkpK
      yMjICDtX9Xo9Pp+PrKws2ZYW7pm5uTkuXrwotylfhRcfgotxaWkpV65cQaPRBPXhYVJVRkdH
      U1RURHJyclgnB71ej9/vl2mdpc0r3Li6cuUKZrMZCMo/nMF83bp1NDc3Y7fbmZycVM19Lb1z
      2bJl16jhxXD3nr9DiKKI2+2WOd+joqLYuHHjgoNEqXlqi7PkoZKVlYXH4+HChQtkZGRQUlKi
      +FxnZyf9/f3k5+fjdDoZGRnhwIEDqgIXBEHW7Xo8HvLy8hQH7n+nHZIHRWxsLENDQ3R0dLB1
      61bFCS6KwYxh0gA3m83y9VUNPp+PoaEhhoeH0Wq1lJeXq+pSb7YdkleDtFhptVrF1IgQvCVW
      V1dTXFwsU0fffvvtqkbBQCDA9PQ03d3d+Hw+iouLVU+2C7VDrQ3T09PyLbS7u5uhoSGZyHAh
      +P1+jhw5QlZWFiaTSXZ6UOMoguDNZWBggNHRUSIiItiyZYviIeFmZSGKIsPDw2RnZyMIAufP
      nycuLo5169YpPjM0NERzczNFRUV4PB76+/tlt0U1SAZU6dC2bt06xUX3ZtvhdDrlwMWJiQma
      mprYsGGDon1PFINpZY1GIykpKYyPj2MwGNi8ebNqXH0HbgAAIABJREFUG0RRxOVy0dPTg8Vi
      ITY2lvXr1y+4Jvx35oXZbJa94BoaGnA4HGzfvl1xzXE4HBw9epQVK1ag0+no7u6+9W4AErRa
      rXzqCcd5fj07p8/n4/bbb1dcpKanpxkbGyMrK4szZ86wefNmWlpayMnJUVSH9Pb2hqRCTExM
      pKurS/VkK91cFtMO6Uo5v12JiYmqMQGXLl2isrISt9tNS0sL+/bt47XXXmPPnj0Llh8bGyM9
      PV0+yRYVFXHy5EnZG0itHdJJU/KqUILdbqempiakraIYzK+qNDFaW1vJycmhvr6e1NRUtFot
      nZ2din3b2NgYssjk5ubS1NS0YArJ+W2Q3CDne1Uo4dy5cyHqNI/HQ1VVlaLq5NKlS+zevVt2
      N9yxY4dqCsmenh5WrVol+9cXFRVx4sSJsFHj18tCDTMzM9TV1ck/i6JIZGSknD71erjdbnp7
      e8nJyeHcuXMyCdvY2Jii+u7KlSvs379fHj/Lli2jpaUl7ElVmhuSJ1c4qvT5ti2fz0dpaami
      Cq+1tZWCggIEQaC6upqDBw9y+vRpRf97icxOUl1J80KKCVCDtE4JgqDaBinX9Xx7m9/vZ8+e
      PQtuluJV2vPMzEyZWqSkpIT6+nrFdKa1tbUhqTCLiopuvQ3AZrNx8eJF9Ho9+fn5cgJrpUkh
      MQTOh3QFV0rD6Pf7iYqKkgM/EhISiI2NxeFwKG4AUoo2CXFxcao85h0dHQwNDZGQkEBJSUlY
      l7XMzMwbTqRqOWLh2uBra2ujtLQ07GCdnZ2V2R4lSNfxhTYAv9/P+fPnCQQCZGVlsW3bNnnS
      KiE2NvaGDUiawEonbr1eL+s4y8rKsNlsqslXJAoOqR0SvbcSmpqamJycJCkpibVr1y6KpuH6
      q7nb7aampkZxQZc8pRobG+UUjGo2AIfDQXZ2dkgZiS1yITm6XC4uXLiARqMhNzeXyspKtFqt
      ajuSkpLYt29fyO8uXryomBNYEAQiIyNlG4bEiGqz2RQ3AIlKWWqHyWQK6z1z/vx53G436enp
      bN68Gb1er9qOdevWsW7dupDvPH78uOIGIIoiBoOBvr4+CgoK0Ov1sipzoXEuqR3ny8JoNOJ2
      uxXnrcVi4fLly7JxWrLtKbUjMjLyhrzH/f399PX1KR50pHHQ0dEhH6DUvN38fr+smpL64Zbb
      AKSoTonYrbOzE71er0oJfT0iIyNVDcCpqam0t7fT398v2wqsViurV69WfEar1XL69Gn5ZylN
      ohIknavVapV1l1lZWaqU0NcjnG67tLSUEydOoNfrKSsrw+v1qhqJEhMTaWhoCFlcRVFUPP0H
      AgHsdjsGg4HBwUHZq2XLli03xUUTHx+vWF6j0RAfH8/Ro0dZuXIlOp2OoaEh1XiJ+Pj4EFnM
      9/NeCDabDVEMpsOsrq4Ggo4C4aJbr/9ONXqD4uJijh49islkIikpidnZWVVDa3JyMo2NjSG3
      Ip1Op3i9l1xSDQYDvb29MjlYVVVVWM+T+UhJSVFUS0VHRyMIAkeOHJFP8OPj46pjNioq6gZZ
      hIt1kVyjR0dH5cx969atW3SUL6BaR0lJCdXV1QiCwN69e+WTvFLfxsTE0NraesMtQ229mR/x
      3NbWRltbG0ajUT4kLQbR0dGqsRXp6ekcO3aMnJwcDAYD3d3dqmM2LS0tRBbArWkD+J+A1C3S
      ji1RI9wsUdj/Nua3Q1Jt3Awdxt8D/l+VhfT/txL+X5XFrTgvINiO/y+yWNoAlrCEJSzhHxS3
      3pa3hCUsYQlL+L+CpQ1gCUtYwhL+QbG0ASxhCUtYwj8oljaAJSxhCUv4B8XSBrCEJSxhCf+g
      WNoAlrCEJSzhHxRLG8ASlrCEJfyDYmkDWMISlrCEf1Co8J/6qD5zhuk5N4h+WlvabiDIEkUh
      mGB4ERWJQoBLNWd57bXXeO2117jcfIXa6gv4FvFwR0Mtf/zjn+nqWziZyfBADzO2G7leBCEg
      f3NXZycub4BL5y7gUeJkEkX6u9sZmVRO7DH/nWq4cKZa9e8em4X6+muc5X6vi87OG5OceOfG
      uNTcP+8D3Jw/exmfy0Z3T98N5e1TQzR1mOWfRVEkEFAnBRvsbKTbPBn8Do+Tzk5lnp3FQgz4
      uXChLnzBMGiqPc2k47qkGGKA82cuyD8O9fdgtStz/Yz0tXJlYISBjhYcXvW+CEdmd92HyORd
      Aa+d2prwma4W+76wJcVr5GKW0UHGpmdvKNN4oQaHP1jGbbPQO6CeuGXRXymKBBaRUe96CIKA
      cLVvL1VfIIwoEAUfv/3JD/nb0dPX/eGa/M+fvbDAkwtj3NzPxEz4RFA3i6mxIUanlPMJjHU1
      0DI4g885S83lxv/r9c/HpXMXcAtw+cIFXL7wY0mFq9jF++49yFe+90sQPXz9iS8hiCD4fUxO
      ThIQRNzWCf7pHY/gu5rk2u20M2OdCz6+APtdhN5A45mX6R6fI0Kno7GmDn8ggM93jWTJ4/HI
      gwSgq/Ykz/z+KGtWF/OtL3+WwekbO9rndOG9usgJgoD3KgfHy7/5Nh0TQeIpt8OBIIo019Xh
      FQFRxH0dQdiLP/0eT37hU5xrag/tinltefFnP6fNLE02EY/HPe97rzF6XrhYe8M75k8at2Oa
      +tYefF4vgiiiARxOR/At4rWFwGMdoaVjRC6H6OZiXZDwyX6VjXL+Iu+YHKCjd1LOHuWeHeHZ
      7/yHXK/f78PnvzYwBEFgqLOB/nGL/DuHyyG3R65XgijKXEzzv1XuAVFAEEQEwcfl2kb8ft8N
      G5AgBPD5/YiiEJJVyevxhPSRIAi01Z3B4vRfV6/AxdrLcrnr5T//nYIgMNrTSo95ApfbiSBe
      +73UBiEQQLj6h1d+/Usa+i0hbRXktgqhbRH9PP3UdxGAgNdGbX17SH8JQgDPAhmdfD6vXB8E
      qc1FAMHNV576gdyXQsCP1zs/69S1zGbmtlp+8ZczV8v5cF0dy0IgINffdukyLv9VygNCx4vX
      572WZUx6uyiE1Hf9HJb6zDnWwQ9/96eQNomiiMftDtk8/T5fiDzrT/6J1xo6AWiqqcMrBOS5
      CuD1eggI156fHWpm2Glk365tSHPtmvzrAbh8MXjIEAUB97xxuRAEtxvX1bG/YFuvf1YMjn95
      rAsCHs+N8hQ9HpzewNU2e/EHrptfTU10jc7S2XCWmtZ+EEUCfj/XV3f9+A/5diFw3ViY97d5
      Mm+pq8MnQtPly7h98xl3r5sXV8eWKhncxl37GTzzVwYefiMawOea5U13H8SUmsGUN5n37V/O
      +XMn+Kf3/QuPf+hNvP8TXyApXsc97/sMyfYrVJvj+OZnHwJAo9VRVr6F8c46YteXs64km1d+
      +0M+//kvMT7YyWe/8SMu/PE5hlx6BnumeP6Hz2DUaTj0ykme+tzjpMdG8tGHH+TomWY8rSd5
      6N8+x/DZVxiLL0XouEhW0nL+84ufosetxzlh5m0f+AR/+c8jJF2Z4s5778fSdonsFUFee9Hv
      5rP/9jkSM+KY8aXwlcceQaOB+9/3YVauyqV13r4w2H6RL3/3BVKjjbzlgx/ipT//mZOdQ7zh
      rjfRceFPTLi0DI1ZefabT/P8E/+GJzKGzXfchQi4HTM8/uRX+PhHP8hjn/8aeWlp7Hv7e6lc
      W4AGOPT7HzPcV82sw8RXP/8BLl7sYtXyZXzyE58mJW85LuJ4/D138Iff/YDexjzcpky++qm3
      IwKCx0ZdXR/FmXF84l8eY9ny5RCVziP3ruOXP/s2zWcz0KavpDxmhr+9chadxs++HTl852dH
      iTVYefB9n2W64TCH63uwmJt4z2eCVLeiz0XtxW6Kk3W85ePPsHFFFjZTBs8+9hEQ/Dz9+BfA
      FMWETc8zT3yE73zjS1jdEWjic/jne8r54td+QuqyFB79109z4dxhJqdHuDIyze9++Bw6rYYf
      f/lxuq0wNHiFzGXFWGeHePTzz9F76rec651hbniQf//qtzn3xx9SPzxHR+MpNjzwUZ5+/HMI
      0dFMzOn41tOfDLl19jRdJD9lOX/6wicZ8Bmxjw3z3k8/xUzjCV6qbsUx2c6bPvwlLp1pJKN0
      M3/68bep7jCTvWINu9dm84cjZ5ge7OSRx57iL3/4I4amPu6/6356Lx1i0qdjyuLgG0//O595
      /yOkLM9j4447ObhnK+3Vr/PqsUN4/B7e/6G3cPzFXzE52YJlRstXPv8BPvaJL5OXF8Wykn08
      /Na9aEQ3j77jvWSsXUN79xDPf/cbfPWznyEmPZ1RK7xz9xoOHT+EKHr5p3cf5Mtf+gHZGbBq
      +9soNI7wzd+coCBdT/LaOzD1vM5LzTP45izsWhXLqK6Auf56/nL4LCMDo3z8S0+HzOWAc4pL
      9SNE24f49+/8iZw4H1MePdmpsaTlbWd3UYCv/8c5MhNEsjfcwd0bcvjBCy/hsQxx73s/jWms
      iV8criY7J4fsKC+HTtYQ8Hp49OF3oREDPPXZj+KLTmfa4uQbT3+Gf37gHazYuomxcQ/f/e5X
      0QQ8/OmPLzGhO4Plvvux2UZ4/HNfZG6sjw89/k16TvyKtgkPQ72TfPsH3yTWAL//2a8512Ah
      JyeLwctH8RhMDIzY+cHzXwmRv9c5w6c//WkSk9Jx6pN5x56V1M8ksiPJwid/fIQXf/QVvvrs
      z9i7MgHK7uPCC09xbnAWnWOaA+/6JCZrG79+pZrECDdV9z/K3beVQmCWtx98FyXb1jNu1/DN
      L3yEjzz6OAWF8cTlbGdTwjQvX+4joEvkLduyseVUMtx4hL+8WovHY+Xhj3yBmSvHeflcC7be
      Nu57bCduMZq3vWE7v/7eN+gec2KKT+WT//phdIj86affpGbQhnWwn3/97Gd48W8neOxTj/KV
      z3+Z9374XXzus8+Qm60nd909ZHk7Od3WT2RCAbvLkjl6rp6+nlG+9K1nF1zHaw7/mR//9Rwp
      0T5Ktt7NnZuz+PyTz5OSHheGDVQXyQcf2sPzP/k9IhrGu+tJ2Xg/v3zmkzzy4J2U3/15yo80
      8vtffJtfP/c4y0vKWJOh4ZWXj/HST5/mDYLybgyQmlbAJz76KE0v/oorvYOcbDLz4H0HcY8f
      on3EzvqcWDz+KKIMQfa82NgYxD4nPmfwVC8i4vaJaPwiARF0Sfl88QMfpP/iy7TZ3dxz1+2s
      uucRVi+L49eNdUj7oXWok1mXh22r1nP4z4dwCmDSKRBz+QPoDQa23L6Xkvwc7r73blbf+07W
      ZBk5d9TAl55+nIuvvMCRUyeIWL6Vzz/6dgCeOvE3/uVjn+GhT3yelGgBg95Aaflm1hVmXf12
      OPi29/Oed97Fk0/+O4giCD7qXj/Onf/8Oe6uyOW5b/0CEHjz2z/Eux/YyOOPfSvktCaKfl4/
      coh3fOpr7CqN57lv/w6Ahx7+GG/ev4LPfe777PnUm2maiudfPv4unvvMI+zasx+dzcy5k2ex
      jA3ynWe/xvm//QopIaKIiCj6EEUfD77lYd79wBa5Xs/cBP1Dw9z9pgc49MJL2DURFK5Yx8Ss
      g7q2Vg4fm+bfvvoshekmAj4XWysP8MhHHuZLj30JnyiiQ0NE4jIe+5f3U/Pir8je/VaE1mOM
      zthoMNt45qknmbhynv989Rij0wG++fUv84fvP4XHNkXfwCB3P/ggh154ibnrbrY+n4gggi5p
      OU8+8iG6zv+V7vFR6ht7+M6zX6fx5B8ZAUTBi+B30TTq4Jlnvo5WA6MDHeRlphDvs9Da7+C+
      ++8hZ+9b2JQXwz//+Mvc+86HOPvKqwxN2dAY9GStWM2WTcGDxMptO7lj50W++KXP4LePsveN
      D/GhD76ZLz/1GK2vvUpaURFla/M5efQUvHUvAMVbbuNjn3g/R37/E1577XWyy/bw6MP38/sf
      fov4tZXs3tnL40/8C8d+8SxFZaWszk/l9ROHKdi/jo/967+xpSSaLzz5Am9+030IKzx88G27
      aTv7KuhE0rPySEvrwxCw0z0Qmm9YFAOIBG9S7/3AJ9hR4ONPr0/xznvW8vPfHiXgj+A9n/g0
      t61K5skvf5v4/Zsoyk3FFaulubWXqa5mvvfd59BpwD7SznRUJh99+F0AeGcGETI38eRH38Nf
      f/483eZJtux7Cx/7+EN84+nP4Q2IROuN3H//3VhT1rN/82p+3n6Fp/79UfpPvEhDr5ljNR28
      8b570c0doal/hsqSVB54x5vQ5lu5//ZVfKeziyf+7RGO//b7XOy1hLRtsP0yZfveyXvu3cXz
      T36BtOIN9P3oP3AZBapWLqOpuYn4ZfkEAjNB8jRTKp/9/KfQjV3iLw29zLU18dy3nsHafoaa
      0WuDq+LAA3zs4+/i+899k9rjLxOXk8eashKOv3qGdbeVkFm6jUfeeoCGw3/CL4hUn23h6899
      nQjXGF/+3n/ht4/x3LPP0PjSrxnUwsbK24NLil/AlJbGgb370WmAgI/mcTff+NIXGW95nVfq
      BwnMjGOxjOGJMNL7+iGyVhazYWUOJ4+fIGVtCqu338Xb7trBQEcDKZ3juK1jDIwp5NYWtXzw
      o59iU0kaX/3GVzg/Hcujjz/FurzE8EbgXfe9jb7Tf2HAasMQHcNEXwdzc1Z6p2aJNugJOJ1Y
      bQ6ijVFEJUSz/4G384mH38zoUA9XuofCvV76QrQ6HVFGHQXFK3jrux4mJzFIYbumJIZXzjWD
      KPDq4WOsWFsEmuB1zeZwhLxFgJCTgUarwe+/UQ8WYTSii4yhpGQl7/3g+zHMW/c1GulfQSTn
      lvLFxz6Fs7+Glw43owmIwXdqInA55giIMD4+RVJSEjMz44iI+Hx+Ik0JbNtUSt3FRkRDIl99
      +klSI+387Ocvz2v1jUiKj6e15TLTk+NY7MEru0YqvcD+lBofR1PzZSZGR5hzeW4or0GD4A6q
      2KJM0SSkZbNh623cs38HfrcLvyDi9TpufDEgawiv1quNMBBhNLGipISHP/whZgebqTV7eNtb
      HyQ9IQ5jlJ4JywwBv5+Qm+z87xbn/Ue+A2vwuxx4fAEmx8aIjknC63IiXP02bYSeCGMMxVfr
      NSqQHYrX/Y/f48IniHg81/S+Go0Ot8eGxx/A5/Pxwo9/wN773sre2yrQAhoB/N6gfCOiTBSu
      KOEt73kf6bHRPPb019iYl8g3f/Dza3V6/NfUSvPqj46PQW+MZ+XKUt79nneGfKQoinT1DZOe
      loRlYvIqFbWV6Eh9UFYiRMWZMMakULJyNf/0rreGNlQTlE3AE6oS+N4vfsO9D7yZ3TvCpztd
      CBpRxGGdwuGFP//4O2zecz93H7gDgw7QuJl1efH7fKAJLmIStJFRzE1PAiJT0zaMkZEhfXGt
      oAbfVb30NRGKaLRaoqMiyC8s5o1vfzdFGaEUyDp9JLbZGQQRxiamiTOF0ltHRkdjmZgABCyz
      HmIT0jD6Rhlxeblzx1q+9cxP2T6vT0Tps8SrXyL66DaP09fXe12PiAgBH+axaRKTE9AZ4li5
      spT3vPchtDodm69L6Rmh8WG1eZmZHMcYbcLv8+ALCDh8vnmDA97w0Pt5xxsO8IsffIsZpw80
      WnwuO15fgPHRMaJjU7itYiXfevY7bN13N9FxsRiikyhZWcq73/12dFExlG8M5jL5zi9f4M1v
      eztVm9TTkYoiOK0j2B16TLGRjI/NEPC60T3xxBNPLPyIgHl4nK07d5KdHMt0QM8bH3gz9v4G
      nv3eT7jjwUfYV7key0gHP/rtqzzy0Y9w6dTLHDlxjszi1UTMmakdsrOpNJSf2j47TVx6Hsmx
      0VimZsgvLsI7ZyUiLZ+yzEhefPU47d0DbNm6HZNBR+GqdRz+zc84fOI4L5/v5uOPvBujzs2P
      fvI7+kcn2LJ9Byatl+SsPATnHPlFRQTcTrTRKaxZUcDPfvADAlFJpMZGklNQgMM6S/GGzbgm
      2nm9pp6RiWkqtm1Gp4EXfvE9Tpy9TF93N4LBRHF+DuPdrXzvF//B1IyTex68l/ysWH7+05+j
      M6VQkq3n57/5C9OiiXe+6X48w6387sWXcGqjWZaUyBvf9nb6W0/h00Tzy1/8BvPwOHvuv5fM
      lHgEvxenR0N+3jKmpiZYWVKKdc5NxW27GOuo48LlZuYcXm6vLMfujyI/J4nxiRnWri3GanFS
      VJDFrENg++7b6a1/ncut7dhdAju2rMWjjSMnI47xyVnKNpRRf/5V6q708dZ3PsgffvNburqu
      kJZXwtrlJp7/yW/oHhph+447SE+MQxT8WOe8LM9Jwe4zsjwnCcuUldI1Jej0UWi9kxx57Tz9
      wyPcdscd1L36X1ysbyAhPZN3Pvggv/vpDznx+inWbKrE63BRVLycyfFpVq5ZhU6jYXbGQm5B
      IT77LIlZeRj9LvQJ6ZQui+FHP/kVTQOzfOB9b0frHOTX//ESQ5MWdt/5RuK1Vo6cOk//kJnK
      qu3YLFaKVxRdHVMzJGfn43fMUVBchM/tJCImlTV5Jp7/4S/pHBiiovJ2ojWQs2IFeSb43s9/
      Q/vAMJvXlvCXF1+md3SCtVsrWV+SwS9/+jNEYwIbS5fxn68cp3dggM2byvjhc8/RMTDKjp17
      KcpbBmhxWnp54c+vUFq+EcErUFiYw/T0BNv33Evj2Zdpam3Fq4thbWkxGvz8/FvfpKmjjZjl
      5dy3/w5G2s/w0svHiM1dxe5tGxnrvczLx89y4M3voObYf9LW1owuNoO8jCSMiekkx0ZimXaw
      cVs5J/7rD3SNzlBamIPOlEKmzsmLrx5hYHiM8i3bMGk1ZBYWEKnTIPo82DwRZKaawJhEeqIB
      u1dPXnYys3MeYkQbP/jNH6hvbOKh976XvMxEfv/Ci7T3DVJSvok3VG7g2e98n0vNzWy/bS8X
      Dr1Efe84W8rXojOYcAy08B9/PQRJBdx5WzmzM06KV+QzMz1D8cpSdFoNsXEJ/OmXv8DijWBZ
      Ujx5xUUE7DbEuHS2rkjlj/91iLbOPjZWbCfWqEcIeHH4DRSvKMQ908Xv//g3PLGZ3L+7glnL
      LMUrCpmemmHD1u00n36VV44cIX/zXjavLkDntWJIWUnlts00NrfxxvsP4rVZicnIRe+1k5m3
      HL3oxU00B+/Yzn/9+c/0D4yQlLOWVYVpIHp45omnuNLbyYZdB9h52+10XDxEQ0sbDkHPitx0
      YjPySIzW47bNEpm0jE2rl/H88z/mXF0rH/rwB8mIFvj+z39Hx4CZip23k50cTCZ17C+/4fjZ
      OuJTC7ltx0Z0Wi2JBpEf/+y3NA/Z+cB7HiA7ZxmHT53j3e94M8vyC6k99Vda2loJRCaQn5FI
      cnY+scYIhPFB/nrkBCOTM1RUVqHzecktLsI5YyGnsBCDTou5u5EfvfAXGmov89A/f5SyDav4
      469+zPGTr91adNDtl6rxJS1n7fKM/+1P+f8Nlr5Ovvvb32PQeElcvp0PvuOgavnx9iZ++Oe/
      ovXbySs7wLvuv/1/6EuXcNMQ3Dz/wz/w6CMP/W9/yQ1oPPFXZpdVsLP0/925pYQjf/sDLT0T
      9F5p4eOPf43i7AQIzPL8j1/l0Q+9NfwL/s5Rd/yvaHM3U77ixox7t9QG8I8Cv8+LLyAQpZK9
      6xpEfF4fAUHEaFx85qcl/C9AFPF4fURGqidE/99AwO9D1OiI0P3jhQYFPZhc6PSR6COuZusS
      BTzeAJGRi8sy+PcMv88H2oVlu7QBLGEJS1jCPyhUAsEEZq1WfH4BRBG73RHiY+uwzTEzM4PD
      5Vb1vQWwzVoYmwxa4CW/4pnpCaZmlIMnQj5FFJkaH6G7dyDEh/3a3wUG+vvxLRDwJPkuiwEf
      PX2DCAE/516vIaD0yaKIy2HD6faG/M42O8Pw8Agery+kHWqYGOygZ3hiUW1cwhKWsIT/aagE
      gtnZkpvNM7/4K4hOPvTQ+5jv1fme+2/nAx9+lH23beO/jl+WA0H8VxdhURDw+fyIokhfRyOn
      65oZaK/hy9/9GaIo0nL5HJfa+67m40TOyykKAv+HvbeMrurq3r5/+5yTEzdISAga3N2laL0U
      qwttoTdtKW2hQHDXFi/uTnGXkAQJIQkJEkFC3N396F7vh5OckJb2/4z3fd7n+XDnGoPBOHvv
      tdZcc80le2dec1ZWamqRJHxP7uS9sRNYMvsXxk+ajVEWyEI2/TVfCDDqOX3uDOU6EyFNNlYT
      jQSLvKaQVWZA6Cs4fPo8Rr2GdavXohMmckWl5qW2hODiwZ1069iRy8FR5vaj7t/g9VHjWbxw
      DovWbiU/Noz5q3eayRcGva4WScOg12MwGnkRcpVbD6JMMlX1T6/Xm/v6N+JJHepQhzr8H8S/
      8gC69h9E0Pl95H8yzOSvWgvu7Dp0lLiAUxy87YMu1ps9V0OwtnVk544NLP9lCoVGJSNGfc1r
      TSSys0rYdvUi525GUFqUz9jOjcnTFTLrh++ZsWYTsXdO8KLClaR7p4nNLaNNnxGsmDUFCcHO
      3Uc5cu46rRrY8NW7I4lIzOLQut/5fdtG9i2ayWivlZSmpGM0GvnuszGUqZzJztQyd+63HDl5
      jqfJxcxfuoii+CSz65esK+fXKZNIK9bSc8QY5kz5CglwbdKeb8e+g/IlV9C46HDa9hrObwt/
      wcneis1zfuDY2fsUFBTy65fD+HnOUoRBwayV63Eoe8bSdUdwbNKOya+7A4KDG5YiNRlMQeRl
      7sdm0brzYKZ/NZSJCw5y4dDauoBMdahDHf6v4F/XHis7Fz57qw/7T19DADlJz1m7di2Bj2OB
      YmZM/YEZCzYztH9fDvx5lzPnzjK6T2NO+QQS/CyWd8d8yNsj+qIpKSIjp4iJ33zF0PfGsWr+
      LMoKcskpKKNdcztu3HnEhYvX8bCSuZ9QwY9TfuD2+T8p0cmAkVJUNHNzQFKo6NCmEWnZRaQk
      pSOArLRkdLJMSkIieqNMqR52795LJzcVDTx7MKB3JzbtPkDPNk2Ij000uyUnPwzkeZElU77/
      D1dPH6dCL4MkMWDkUOo72NTSw8jxk2mhzud3Ty91AAAgAElEQVTt14ewevd5PvvmC/q9MYZt
      v83h+MGDzFi2mUM7lrB7+zZ2bT7E+h0H2L95KUrg+tkDXIgo4NMxgwgKe0y/ISP54tP3cW7Y
      mm2rZr7Ktb8OdahDHf6P4H88fI796jv8j+wht1yDrVMDhgwdQrNG9QErpkyfybmr3nzwlimM
      gFKSUKqUqCwcOXX8CPlJT/hu1mLzomupUoNBRlLULHvvjh6H98VTxGdKdGnpSlFeMWkZ2Uz5
      cQqWCglQ4mErExgRg6a8GN/QONo1c0EWJiJP5V9irViorbCztkKltkCSwFqhwmgU/JXkK4Sg
      MKeQzJwipnz/HywUEkIIDAYDRllgNBjN3/nLyyqZvnAVPpdPcfPoMYSFFbLegKSQEIBCqUSh
      AGQZoZCRlKBQmFSrViioLChCLxT8seMADe0EH30xEaMQqC2U/2/GrA51qEMd/rfgnz8BSUrc
      G7ph5ejG15+8w96bT7B1cqFPb1cAGjZuSZtWLXFQmVbWCV8OYcyY8VhbWrJ1w+fMnjUPoywx
      YOhYLG3tqOcM7k1bUxi1hJlL1jC+ozuOljY0bNsHReYM+o/5lcYdujGitwfnL16inosnH376
      KQDzlq1g6rT/YDRoqWjanZbuTng0UvHl559Tmp2PhUKiQUN3lAoJd4+GALg0cEetUvHWyMF8
      99mHrNr4Gw0buSNJEu4NG+LZeyC9WxzgwuXLuDdqx4cffQDCwKIZkwl6GIUIeEFl6Qy+HjuS
      hMgA5q3dh1qp4L1JP9CgSVuM2WFM/nUls778kumzp6BTKJi1dBOOFdH8OvFLbJu0YcZHXRj3
      5Q+oUu+wYddhyqJuk1qkp1f3fpRkxfHNnL1cObax7i2gDnWow/8V/KMb6O+//05h4T+HRX4V
      dFotKgs1CoVkij5nMKK2qO1HK8tGBBJKhaLWNUlSmGPxGAwGVKrae5NsNFBZUsSRoycZ9eU3
      eDhYYRQClfJ/PkW/qr5q6A0GLP7h3ssQsowMZrmFLJvizygVGA16ZCRzPbJsBEmB4m+xhQQ6
      nQELtYV50Z8xYwYuLi7/Y/t1qEMd6vC/G/+4AeTl5f0vuTrW4f8b6tWr94+bUx3qUIc6/P+J
      OiJYHepQhzr8l+J/+COwKQmD1uzjXvv3q98QBJrKSnOSFyFkSkuK0b6U9MVo0FNR5esvy0YM
      BoPpn9FY5ZNvSjJiqPLlB1PSg5d/V7dVWVlhJocJIVNSXIzupbb+StqSq5I1mBJI1PwB+a/t
      VZc1Gg2mhCei5prBYKiVuclENquRymjQU1FRWetatQxGY01GMXMylVpdElRWvNSnlxKX6LQa
      tFpdreeFEJSXlVKh0f5NvloyGQ1VMol/zHql12nNOhFCpqK83Jyg4tX6kdH+JamOkOWq9qt1
      btJh7Wt/lfPVmeaqE2tU20i1DsVLyTtErb7UjLWpn8L8/1/LVevyZbw8pi8n5QHQairNyUtk
      Wa5ybKhuz5Tgw2D4y1hWyV5RUVGTJOZvSV5Msmg0L+uxxv6r9VPbDl+2aRPvpSaJTLWuXk7M
      ojNHxa2R3SSb8SX9vawfs1xVOqoew2qZXm7f+Jf2X5ZRCLlmfhsMZj6M9iX+jVxlM39dT17V
      31o2INfo6WXbNNvgS/W9et5Vl391lj+DXkelRmu2VXMfqurV63S1bFqv06LRaGvP+7/MGyH+
      nnimuv8vj5tsNNRax8xjZ042ZBpH83i/VP+r5v/LvCO5uu8G/b9FA4Urp/Zz8M8rhPjfpW2P
      3tw6f4jDp64RfMefjn16cXDzVvoMGvBSI0b2b/mdKzeDuevnT78hA9iyaj7BES84eewoTTv1
      Qs6JZ96qjUQ/ecyTxCwKEiM59edRDpy8TEZmNl26d0OFYPq0KTx7/oKTx4/TtudADv42m9uh
      EZw4cYImbbvg5mTLtt+X4xf4mHt3Auk7sDe/L5pFWFQCx44eo02PfrjY26CrKGDdlsMMHtAb
      hJ5VK3/jtSGvERvqyxc/L+XTj8ejlGQW/vItj57FcOLkWVp26YWLgw1GbSk/TvqKx+GRXL15
      l34DBpEWHcysRRuJfBBAUFgCA/v3ZPueHXTp0gMLpYKcxOfMW76W2OcRPIpOoW+PLgD8tnUb
      A7q35+Nx42jZZyQe9eyIfezPtzOXMW7saFQKCYOmmKUL5vD4eQyXr1yhQ+d+PLp7hgKLxiQF
      X2XrsfOE+PtgtHGlRRNT0K5zBzdz8ro/flcvorVzo7FtJRO+m03s08d43wplyJCBFCQ/Zfa8
      NcTHPSejTMGDoOu4e3bG3qrm09PdG2fZsusY4fcDcfVsyZbVK3gSHcOVK9fpO/g1Fkz9msgX
      sRw/dZ72PfribGdFbOhNvvx5FePGj0JdFWfE78+tbD3tQ8hNbx7FZ9G3Y2MmTZ1JXPQLEnNL
      6dq+NQA5KZFMnfsb0U8ecuKcHyNeH4ZKIaEry2XOLC+i4hI5f9mbvn0HcGjdPLxDnnDp7GlU
      9Zvx4OafHPKN5PWBPXnkfY5c68a4O1hSkRPHkWtB9OjYlsLECG48zECRHUp4OrRs4orvpSMU
      W3sSF3CBnScuEXzbG+zd8WzkhrEimxEjxzJs3Mc4Wam4d/kES3YdZ8xbI7h8eCcHz/oQdC+A
      dj36cmz7Rrr3H4Rk1PD7rsP079iIzyb+QkLMUy5dv03/wYOwVCkoL85h7qw5vIiL50VsBj26
      dcDnzGGW7TjL+PdGAIILh7dx+Jw3j0LuUGKoT5sW7gjZwIxZ03n6NIpHL5Lo3rYxP03+lkdh
      4Vy/E0j/AQPYsGIpTTr1Qq3NYenqXQwdNgiFBHNm/Uzk0+ecOfEnjdr1wM3Jjs3L53HnWS6v
      9e3M+UObKFQ2oqmbPasXzUOrKcE/MpMeHTzZvHI+bq1742xvRdD1M+w4fIaQwJuUK5y5e+Us
      h/fu5db9SPJyizl86ACDh48g88V99p0JYEDvLghDOR988iGteg7Fw9mG/fuP4WSlZ9/hP9m2
      7Q+SElNw82yHg6Kcse+8S9cRY2ngaM2+3+ZyNTiCK+dOg2MjWjVxQ9aVMfbjD2nfdwQNnazY
      v/84Xdt7sP7wFfp3bcuGFYvw6NCd1dMm8yQ2keD7kXTq0hUrSxUhlw+w9uB57t3xITajgp7t
      PfhgzDja9n+Dhs62RD+4xeQ5Kxk/+j1mTv+RiPDHnDhzhY7d+uFkb4q/FRPix8K1u4mKeEBB
      uZ6rF8+zZf12ktKSsLBuSKOGTiyd9jWJGgd6dGjJ8yA/Vu04RETIXfK0Cjq0ag7ILP51Mg+e
      xHDixGmad+xJ3KMbJFY60LyBg3nu7VuzAJ/7YYTcD8bavike7o5cPryZLaf9eWfEYLMH45bd
      O+jcuSdqlcSeDWvp0m8QC2b/QnjkM878eZyGrbpTFOXL7I2HeRoSgHdwOCMG90OSJELuXCSu
      zA4XZQkrft9Kz46tmD5z7j97AcmaAq4GxbF1wyoUkum394Nktq5fgUIypWUrKiyqVSYvNYr4
      MjtWLPoRhCAz/jEapw7MnTqBkpwkftt1iOHt7Bk26gvGDeuCwWDAwsKCvl1ac/R+Bj99Psa0
      kcgGbNya4eU1m6zndznnFwDCjhlz5yOV5TFt/jrmTnmfIitPFv08ASEEceF3sG01hF++HkNO
      4hN2/XmCRTN+RG3jRFl+EqVaI+WxIajdOgICX/9QPnuzG3ci0ni9e0Ps7Boyy2sOmVH3Oe0X
      Qruv30Ug49myB3MWz+ZpiDc7Dl3i/d72DB39CRPe6cfmpfMo0soUFhaad9eYp/fp9/pHfPZO
      HwyGmh28qLAAhEy3fh3w9faj54+fc+tOIG27tKmKiy9x7+pJ2g35jE/e7o2QZZAUhJeXotYa
      CH0UwuQfFtDaw8F8MjZqCrgbVcjG35Yga8vwWrCMwTO/oetrbzF/8gfs+30J6cUazh44xLRF
      y2jt4Ygsy2zbdq/WCVHoyzh1/T7r161BrVSgyU+i3NKFxdOmg2xAUko4OTdjltdcYh/cxCcg
      gu/Gv4bPjUA+erMXoc+SGNa9JQAVpVomTZxCx6YOTJ25HFm8SaM23fCa+X0tWzHqtfQa8jY/
      ffomf8z/hbwKI43tVVw8uoe3J8xkeE9PZFlGoVCgqVQyfe4srDS5LFz7J52byViVxfA0ORdd
      eRnGqrSHsk5LcZkpWZAsayjXymilUioUphNPWWkRTgaZkEcP+X7KYjzd7My6FLKefoPacvnq
      HaZ+9gb+j6No5elCZWEa/k/zWLNmEUrJFEm+KK8YEIiqcClCNtK65yDmTp/I5UN/EJWUTZ+2
      jbhw8jCjvpnGsJ6tzafh0LBEurkqSCnSUl+XSuCLctasWIpCouY0KQRW9TzwmjULAG1pDq3a
      9mHWvOmEB15m11FvvvpyPKvXbKC+lMnnP64yEzUlxwbMmuVFfmI4R3xv0+6Ldyg0OkNaNBq9
      4M33P2L+0l04fzwIZbOejHxzFHN+mc5pbRx6l+608HAE4JZfCFPnLaZxPRsMBhmLIT25cXAX
      1v1G81o7d7o2U7Hqty1UZEYxe+VGJMl0+uzZuwt/HtxJj2ULKSkppUXH3nh17M2yZfPwmu0F
      QMD5vYz79kd8fe/QadJYKkph2tJZ2OryWfDbEd7o3wWEkT59unB0/066LZtPSUkpyAaKi0vx
      PXUA6zav0dzNEUfX5sys0lN1lgFNhYaPP53MwK6N8ZqzFPmjIfTo3xHv6750n/IZt+4G07Zz
      KwRg49aUeQvmU5D2jDXbtvP7yrkgZPYcPsfaDX9gp1aaXL3fHsmieSuY6eWFEqgsTEXVsBvx
      4SEYx4/k/v07fDlpGr1au9TKQWJj7cYMr9nkxz/msE8QPd1LkXW1w9lUlBmZunQW9tVx6Ix6
      whKKaGorkVOiwd3RtCkVFxVW2Z2gKK/I9Nbl4IqX12zyk8I44n2HES1lRo+ewOjhHfjxl7kY
      AAugorwEnYOW1Ss28vkvi7hxZh8Tps3/509AFXkZtO7SGaVCQpIkKnJTadO1S9Vvxd/86gEK
      0pPo2rsHCklCoVBQmJVKu84dkCQJB5dGSGqJgW99SKTfYaZNm05EdGK1vfPX9CjFeRlcuXKJ
      P7afon2nzqbhFWDt4EKLBs5kpSTRs19PpKq28jJT6dTV1JZr4xZoZdNrtiQpGdi1FYERcVy8
      5MeYsa9j0JSQXir44OOP8Ltsym2am5XI3j272LD1CP17dn5JEgGSRKc+wzDmmZJq3/O9zNat
      m0kqVuNgWVuFvYeNISH4DL/8Mo1Hz/+eXN3GtS3arBfoNCXkVljQxKkmgmdCcjm9e7Un2O88
      02fNJi67xHzvk0+/ZPvqOcyeu4C8YlOCE01RDs3atEQhSais7HFq4IzeIHgcdItt27cQmliG
      m72KIr2zeWIrFH8fcm1JAU1bt8BSpUSSJKxdmtHX05op33/H8QveICArLYY9u3eybf85+nZt
      izBqSSmTGfveUO7e8Hlp9CrZtXU9Ez4ah0f7HiiA6CcP2bt3LzfuBtdq99qF40ybOpngLGho
      a7L++Ezo3bkJfhePMXXWfHJLtRgNFfhcv8q2P7bRskMrQOLzr77nyI6D/wvhNIwc2reNpUuX
      curcdQA+/exzNi/3Ys78ReSXVpqfbNCqL3kx9ynLT0Ll2AwrJRTn5NC0fQ9UZruXSEl8wrIl
      S1m2fDWZOSZPuaTY51y8cI4r/nE0casHQFFxEV2q8mEoFApKMhOgfiM+fH8QZ875UZCRRcsu
      vSlOj2LRwnmcuFGjn+zUWPbu28upS9drkpdIEl37j0CXk4JHq260sM0kz6Y9HTzr12i/OJer
      Vy6zbcdRWrTpQtR9f1r2HkynZnY8js3Etl5jXuvqytSlh5nyxTgUKkt+nPIZ89bsZ8rE8eZ6
      vpk6kd9nz2T6vBVkFtQkDKqe9p0HvkPukwu0GDgaNydr831rpyb0cHfA/3HiqzMeIfAJieXD
      se+RGfcIvSyQZQ2+3lfZsXU7Tdt4mtuwqdecLvWtCYhINpe+53eFjaf8mfzxm0hA/ItgVqxY
      wZqN26jQVR+4DFy5cJI/NvyGlUMjFICtWzu0mVFoKovJ11rh4WhZLQ4A9Rp3pF69qg1YrkTt
      2BI7S5VpfTEvdjUdunPtPP3f+gAPByMJWSWM+3QiJ7cvZabXHJKz8szP5ecksX/PbtZu2s+A
      3l1fpRD0+jx+X7mC5cuX8ywph4L0F6hdPBnZvwM+AWHm58pyklm1YhlLly7j0bNsAEpzU9m3
      dzdrNuyja4+egJFTR7fz/YRPMDo2qnXC37h8NqJhNzp6upGSraCjp9s/bwBWTi6kxibV/HZu
      QErVgv1PcKjvRnxUvPm3XT1XkmNNi6amrBCp0oiVvQtLVq1n5ZI5bN99kH/0M1JY4Orqxg/z
      FzO0azPzZaO+kqTcXJxd3Ih9XtOWfX0XkqraKs3PxlKucQ8dOGw4Qf5+JBYLWrrYEBsRRGZO
      DvuOnCcp6hHleoGNgyuujpZoHVzp0b7x38TJjA9HY2OaaK3atyfqSTDvf/QFqr9shGpbZxas
      WMuaFQvZuecA1Xu9EDU9HdzJg6PHz9Gy55BaZd0bqImLT2PA6+P4YFgXSsprvhU3bNmZTVt3
      8MuksazZdhQASzsn0pNMhiAbtVTmlqBSSjRt0Yqc5Ehee+cDrFQqbBSl5BZV8k+wsHUgKznL
      nJBbCIkPv/mZHdu3kRAeQFRmMXbO7jhaCywaNqNTiwbEh94iNaecI+d8eRL2iEp9dU+t+e6n
      GRw+eRZdbCAaGZq26sDo0aPp161zrXbfGfMZm7buYnAnZ55mmE7u7k5G4tMKeH3MF4zo5olW
      bwRJxrmeC29/8A2TPnwbAKcGzensLhP6LM1cn8rSigqNSWclxWXoZBOR8Ktvp7JkyRI+Hmcq
      26h1NzZv28EPX7zD2p0nzOUlpZq2De04fOwiA0aOBMDW2Zmc1NhacbCaenZh0ZIlLF44D48G
      zlVtW9OwUVNWb1pDw6oF0cbShuTUXHO5wJu3yMnI4ELAM8KCbmPnUo/MxGicG7dn9rTvqCio
      CRxYz70po98fzcjBA2rxRNJjHqOzc6EwM474YgfIjCI5p+agICtUuLg2YMJPMxg1pBNXvANI
      exZCXH4p1y95A/DW+6MYP/597K1UCNnAsePn+eHj9zh4zs9cj0fzdmzZs4NpHw/j4JGDf7OZ
      5KeBWDd/jad3rlNUXvvvQB9/+y0XD+xFFn8/JWqK0ohJTGb/nn3kpMQQnVYAmMZ35Jgv+P7T
      92s9//n3kzm3d7c5w9ygke8x4c2OHD3vD0DL9v1ZuHAhc3+diq1l9XKnoF2HTgQ/eMznX442
      1zWwQ0OOHj9L615D/8a90RRmkVegqSpuibY8A/0/R4zkTtADwv0vkpeXzY07wTi6e7Ju01bm
      /Pw163ccNm8V1vYuuNe3oczSkT6dmr2yNpWFC14LFrJo0SI6ebpx89plCvPTCQiLI/D2NfNz
      dg2aMW/BIpYsWUTPTm4AWNo60txNTQH16Nu1FaDgoy+msOPQcRpVxNdKnzpt7goq44OJSsvD
      1clISk7JP38CUtm50c5dxmv+MqwUCn74dRqtXbXMXrAMSxT86PUzUU/vsWbNGrr0Gcw7wwfi
      1rIrxrxTLFy6GskAsxdOI3/fdDZtyyY6/AGfTZ1DiO9ZLgRFYo0Sz2Yt/pEE5eTSgL59q9O4
      CUqKU1i0cCna0nw+/Pw/tO7SisOn5rJ4eTQqlPw66zsOHf2FLYXxPHlwn8leS8x1OTRoTlFE
      AI2HfYZCAv+AxyxesZrmrna0ObGToMgE7BycGP3RV9hbn2DBmk2smjcdgMhHt/GaXUFFZTkL
      lqykMDEAj2Zt+PWrPSyYPh2FxVxUUs0+GnbnEiduP8RepaZp4+bcvn6Zp88isHWqGfwhoz5g
      wYDxXA6+zZ+H7tVcf28sc2bNJTK0F8nPnjO12/uokADB8d3riMk3YCjOps+Aj81j1MqpmOVr
      NlCZl0L7we+hUkg0aNQMr6+msHahF+es1Iz/4A0W/Dqdtq2a0LrfSLQVxWzdtBZHZze8pk1G
      aeVInw71mTl7IU62Vox6byRHTpyikUdj0nK0uDtZ4+BYj4++/B6b0wdZtnEn9sWZbN62mga2
      FrR0XM/DmExe69gY0LB/52acrWQ0tg1QK8DW1g5XVxOBsDA1ivPBcbzVww2/y8cpinlAYloO
      n9Q3LZpjPvsEr9mzaNezD8/Cohn0vgKVpRN9+vbF7i+Uj48nTmT4sCEM/eYn02So34T8MH+2
      7jHw+F4AM1etx/A8HqmKKyIwpQk9suM34otAX5hJn2Gfm+uTgKEjhvPFD6v5esrPPPAHO9fm
      NLHKY968RdhZq/jm51lIqtr1ATTxbEmfPr1ryTdq/AfMWrSYju1b4eTWkoyoNFavWYydhYKd
      vy2kQN0EV5HE/GUrsZE1NOpYk8zH0srarDNtaQ5hD3zxml1IpaaChUuWsX7NAn6cMR9XRT7z
      l65j+9ZlKCWwd6pvnjfCWEGx5Mhvc2eAMOI1a7bpc4ZChaWFSd9BvmexbDWY6V+9h9dPPxH3
      Wj9aeThyeN9GkrIq0Jfl02nQuFr9kvXlrNxynN83/UF62E3WbzvGslkTzfdVVo6MGtqS3y8+
      YUbtIeP+bT+++XUZb/VtQ+KTXly6HYBC7UCfvn3Nn0BehsrKibcHNeOP6zFMq7r2yaQZLJsz
      i0ddWhEfFcqaNWsQKht++OF7nGzVIKlo3b4z47dv4aeZc5g7f65pfo0az9DXPuZy0E2OJfgj
      AWmJT1k6z4u8wgomzpxXZQgqRr/RhV9+mkkzd3teG/c1AzrWzF9NQRLWzQYx69fvkPVlzF68
      lotyEo8Sc5Eqy+jS/jXzs7b2Trw77nMcrE8zd8U6Xu/egJMHt/PIx5Uvvv2BxvVtMejzWf/b
      GqwlmRFjviAyuYxVq1ahkmDpfC8KdTLOakWVrVWvmKY1x8reiRGjvsLe5hSz565j4ltunDux
      hyeBDqTqLLF5SacKCysWL17AnFWrmT9jIvMXzvt3N1DTN85iUKhwdLADBMVFRUgKNQ4OtlRW
      lGGUwUJtiVVVkgtZNlJUVISFhTV29jbIBj25OTlY2zvhaG+LkGVKS0swyBKOjg4oFRJCNqI3
      CtQWqqp2TVEz1erqxBmiygtDxtLKEguVKcyDbDRQVFSE2soWW1trZL2OnJxc7BzrYW9nXasv
      FeVlKNRWWFko0el0WFiokSQJ2WjAKEyeAxYWakCg0WiwqkrGUlFehkCJtbUVSqUC2WhAFhIq
      lRKjQY9BBgmBhYUFkmQiwJWVlqA3gKOTA5qKMkrKKmnQwBWFJKE3GFBbWJjb0Ol1Vf2pJsHp
      KCoqxsraDlsbK2SjARRKEDIlJSUolGoc7G3NzwtZJi83B8nCivrOjiAEeqOM2kJV5UkgY2Vl
      gaainLJKLU6OTshGvcmTS6HEztbGtMUIQWlJMUahwNHBHp22grJyDfYOjliqleh0+lr6kRQK
      rCxNr9FGg6GKCKfEoNdSqdEhKRRYW1ujkKhFCBSyEZ3BiIVKSUVFBUJIWFlb1SLj6XVaiotL
      sLazx8bKEr1eXzVeVff1OpQqCxSShKayEgtLK5RVC7FBryU7OxcHp3rY2ZnsrzrRiUGvQ1Ja
      gGygpLS0Spd25u/XeoMRC5UKrU6HlaUlOp0OtVqNkGWKi4uQqnRfLQ8IdHo9agvVK0mPYPKk
      KSkpw97RERBYVtm0SRYVCqCkuAhZMs0xhULxN/uv9siqtkOFQkKr02FpaWlKMqPRYmllhSRh
      lrm6nE5vxFJtkkur1aK2tAQhm77rW6jQ6bQoVWqUCgm9XockKVGplMhGA8UlJShVauztTPZm
      0OuRlEoUEmh1Bqws1Qgh0Gh1VbYgzPYtZCOVWj021lZVejC1rddVjV01WbTK0+Xl8TWvAVV1
      ybIRrU6PlaXa3B9DFfnSoNWY3lwlBba2NigkCYNBj6RQolQo0Ou0ICkRCNPYarWmeafTYWFh
      gaayAqMssLSy+gshVFBeWoJWL3B0ckApSWh1etSWapCNGIwCi6r1SqfVolKpKCktBskCBwe7
      qs9G4m/zxkKlolKjAUnCxsYGpUKBTluJturzlaW1DRiNpnaq5oLSQo1CkswySxLotDos1Jbo
      9dXjLais1KC2UFFRqUGSJKysbcxJYAwGPVTNA61Wg4XaEp2moo4HUIc61KEO/62oi0RchzrU
      oQ7/pajbAOpQhzrU4b8U/0IEkzl19DAdO3fF+8IJCvROHNu9BoNNY5o3csGoKWDyxB8Y+NYo
      Th/ZwZXrN7l6+Ro27s1p6lYPfWUBO/aepnevrpRkRvPntQdkxT/EzbMjliqJy2cu0LJ1E375
      cRod+gzGydaS1OgwFv22jddHDkMhSQijjoPb13Ppxm2u+fjRtXs/nob6UG7lQdoDH4qV9XBx
      tEFbls+CObO4fSeA+MxCunXuYHbdkg06ZkyZjHubXrjXd+Dw7u3Ua9EBewuZzeu20aJFfWbP
      W0lo8F2Scsvp2qktElCYGc/yFasJvh9EeEwu7hbFhCVp8WzkzJZVXth79sDFTsm+P88T8zyM
      1u06UZqTyIIVexk5YgBpT+8SnqKjeaP65MU9YM6qzdy/d5eUYplOTe344ac5hD+8z7P4dLp3
      60xYoC+bduzjtp8PSicPmns0AODwqZN0bN/R3J/YsADCU7W0aFSf8tx4zt56SFrUfQ4dP4+f
      93Xs3ZrhYiOxZsVK7gbcJSIhgy6e9fGav4CBQ15HJWvwvnGb1q1NfvsFWcksX7qKe/63UTk3
      pmlDF8ryMli5cg0Bd++QkFtGCyfB7dB4WrdoDMhsWDmXm4GhXL98lWbtOlHf0Q4hZA6dOkO3
      Th0JuXGa2EKZg1t+w6FxBzxcHCnNS+GX6fPo26cre46dpW+v7iQ/D8U7NI5ObZqjKcll2fwF
      3H8URkhoLL17t2fb+jX43L7LzeAnvNFvhnUAACAASURBVNa3I/PnzSckNISAew/o2as727bv
      pmuPnuhLc9iz/yw9e3UDYWTpvFnYebTHw9WRsvw0fpo2myFvvMPeP5aTr3OkdXN3jNoSpkz8
      lt6vvw/FmaxYtpp7QQGUK51p3cyUyOfW2ePsPnoG//th9OnmyU/T5nI/2J/kbB1dOrbG59Jx
      bj5Jo2fH1jwLvEmxlRvZEQGs33UQ3+tXcWnWloYuTtzzPkWlbVNc7C1JiAjhQUIhIVf3kKKx
      pU1TD25dukCDVu0oTI9j0dJV3PP3JatETaf2zZGAxPDbxOZKuDmpWLtuD21bOvPrnLWMfHM4
      Fgq4deFPLgZG0q9HR04eOEGn7iZvq9CA62w/cJLQ4ECKdQryUyLYdegMt31vkF4GXdp6YtSV
      8ePk72nbczD17K3Yv3MHLTt1x1Ils23zdnr07YNCqloLunRD1pdz6IIP3Tq0waAt48fJ39G2
      52DqO9hw/fp57Bp4mgmGQhg5tnMLF7z9uOF3i549u3D2qh+dO7TF//JJbj/Jo3uH5lw8uo96
      Hh74+d6lXdtWHNy1g3qN22NDCX/8sYVTJ44T+iiCUoOCiDuXOX3Fh6u+d+jdpx87NixF79ic
      Zm7OXL54mZatW6NQSKTFPWH17xvxv+WLRu2GLi+aP054M6x/L3ITnxORXIwi7ykL1+0k6O4d
      crUqPF0sWbZsOQEB/sTnGejesSUS4H/uDFYNPQn0OY1veAq9OrXheeBNChT2nDu8kxN//sm9
      kMdkFVXQzEnN8mWruRcYgNbKlZaNG5Bw358XpdY0cbUjIuQm5RYu3Pc9zeE/TXPWwb05HvWs
      OXrxOl3btwUgMuAqBcIJVydbbvpcQuXclLDrR9hz+iq+N25g49oMD0fBkSv36NaupXnVTn5y
      i+W7zvP6ayYC2JkDGwlN0tGtfXNKs2KZMHkB745+BwuFxN1LJ/7tDUAm5mkMydEP8QuOp0en
      xsiWgjt+3ggg2Ps8lQ7OaI2C1Lxipv06i0VeU/A5Z3KrU1k5o8+OJiwuk61bdjNo6EASYp6j
      r/KnS0pNQBh12DvquXjdHxD4+fhhtFGZXe5CfU9QYteRRQvms3zBHJzs1WSmJ1JQqiU3LZGi
      Um3VIq/B1a09K1etwlmfyp/X7pt7kRMXjq17a2543wRg5JB+/L5mI2cP/IFH574YygpoO+BN
      lixbTvrj2+RpTNT+DWvXMmnafBYsXMI3n7yNexMPbt3yRV9RQEJyKrf9QyjNTycvuwRNegqJ
      OSVEBN0lKSWe7GItd27fo0HTRgBoirPo0XcMS5YsJiH4JvnFRTRo34eFi5ci5UQTnZzEjqNX
      Wb5sOatWr6Jnu+Zm+WNiY2rR1D3btOHqpQsA3PO+QX23lmRkZ/HVjzNZumQeZw8fJi7Cn/rd
      hrFg8RK+HPs2ek0pem0Jh8/5IGQjyUmZVRNUsHH9BiZO92LxyhX07WwypEf3rtLpjY9YuGQZ
      Y18fjK48n5SUbLMMunIlc+bM48dJ4zh2/i5VlfEiJob85BfsvxrOwG5tUNkY8fXxRQAB3lfQ
      2dmhdGiIbUkCl+8Ese6PI4wYbPJYMeorcHZrw9y5c5k5YyJFKdEUyW4sWLCA6f/5HGQ9inpN
      mD9vAYPaOuIXHEP/NvXZvO80O9avofewkZj+DiyjtDbi62viJgTcuIzO3h69LNCoFATeuoIA
      Iu/5UKhUU2mU2bNtPe9P+pkFi5bwer+OAJRlPed0UCIrVi5jsddPWAoNDdr1ZsXyVSgzQ7h2
      9yk5eZmEBd8gvaCcwoxUijVGznlfY7rXfFavXk2Lhia34TbNGnKuioNw7YYPni2akl0m43vx
      GGUaA2mJaRiE4MCOrUyZNZ9lK1bzLOgc6UUmt8TirFRy8srYvW41PYYORVdWgF6TQejzFIQs
      czc0jEpdCSCIjX5mHqestATe/ewH5s6dy3sjBpKRmsDoCVNZtmwJL/wvoJchMSKEhp7tuH7j
      LpKkoHPrhhw+cZ2QSydRNu9U5eYsiHkaY6rUqCUmzuQOnhRpKnvN2+SSmZwYh0b3UmiE0lzC
      s0pZsGA+C2ZNw8bWnujQ++iNMsGhETyLCEYWgpCoRKxFBYlxaYTeOk1GpQNN3e2wsHNh+szZ
      dGzuwrfTvHhvSFfu3k9l8cIFLJk9HWu1Eq1C5szhXehlQUpisnntuHTsLBOmzmTZilX079Sc
      3OwUshIe8DAmi8qSArLySigvyGTA0I9ZumQxD29c5e7Fi3R783MWL13O2BF9zP3ISI6mXKsn
      JzeTiBAf0vLLKMpMpcSoZvLUGfTr0JiPJ//Mp2PeZOfW9Xz0wwwWLl7CsJ7tACjMSCKrzOSG
      nZeTSolGS0Z2Nl9PncXSJfM4c+gQQhiJiqlxa89NSaKwxLS+pSTHUqE1kpqQwX9+nM7Seb9y
      5tgJhKGSmIRUXkZJfg45menEZRUjZB0h4dFUFqUD4H32Aj27t+HeIxM/6fydwH//BBTzNJRp
      C35nxtxpqBQSKhsXHEQpeWU6/B8n8HoPk2tURVE227Zu4rvvfqTXayZfa0mSmPj9JDbO/Q+S
      W3davUR9fhkurXqTE/sIo66CtEIdrdzszfeePcvlvXde48Hda6zbspO8Uu0r6wBMbDJJwZhP
      vyb1eaT5sve1m3zxn+8oS49CY5DxaNOdXu4aTj/IZPybfasGJZPnzyJJztZio5JA1iCsPGnu
      as3hXZs4etEXtXNTDCWpJMdE0uPdSeQnPCXm0QPa9+pD/4HdCL4fSXh0KlM+G0pEVCJxOVra
      NLA1y5GTnc6zyHCyKyqwtFBSmJfDi6hnvEgoRCpKpcugYZTkJrPh93U8fPriH7upsnXDRp9L
      md7I/Sdp9O/aDNmoJ/xRKN6XLmLt2oRmHfoSffM0S5avoqDKR7v7gDGk3PelsPKlODRCoHJ0
      oJWHC6AwezV07j2UO8e3s/q39ZTr/87UyMl4wab1a5kyew1vjawJBZIS/5zvZsxn+uyZWCgU
      2Lh4IorSKNMaeBSdTr92pvAVE3+Zw5Z5Uxk87mtcHazM5cNC/di0aRN7jp3DyaMFxuxn/Dp3
      KYnZhUhAfnY6wcFB3LwXSdMmbvR76yOKw89S5NSO3u0bmeuxcWkOxRmUaQ08jEqjf3tTjgih
      sMbDFtKLtPiHPGNkv/YgDBRq69O9dUMkScKiypMnMfwZQ94bh1ICVZXnhRACSaHko6+/IjY+
      HEmhYuJnH3Fw32lz2yMGDmDx7F/Zf/wMltYmT7QG7fpTEB2C0VBJRrEBzwYOKJV2fPj6AE5e
      9K8aCwOVRjdauDsjKVQM7daB1PQC0z3JyMGtK4kT7ozo2wGAfkNHEHT7NmU5sdi4eFYlT/o7
      ThzayaZNm7gb8gSA4we28cuUydg17Y6FAm7evs9XkyeTFf0AgyzoNexdssMusOPyQyaNquGp
      JMSGs3HDBjb+sYPi0goQAr9bwUyYPJnsmIcY5L/7kljY1qepWsOMmV48jEpCrbLAvZ41GfkF
      GK2caO4oyMlORu3QGAkIvnOJNft9+HXqZ7XqMdessKFzCxum/jIb/8cvUFsosbCpx1s9W3LF
      73GtMiNGjWTTogWs23kILEweNd/85yeObNvxEqdDkJ2ZxtOIMIqMenoOH4Hfoa0s+e0PyvXi
      by7qkkLJpM8/5uDeU6/guAmQ9ZQZ3ejU3LXKlv45yq9s1BH2KJTrFy9g06DpK57QcfTAbjZs
      2IDfnZCqa3rCHoTife0ats7ur65YwIjBA7njc4+kiAAadR0OMiBkwpOL+e6r0YTc8gFgSNf2
      /74BNG/ThdGDuuAb+NB8bfjATvhev4rCyROLqtJWDi5M+HoSS1YsIyDojvlZR3dPevfozxdf
      jkWSQKGyMJ9mK8qrA3Ep6eJhjc/tOzRq36+WK5idtaCopJyufYfTpYktOcWafxMXgPKCNCpV
      VYuKMODrE8qlPw8QFfOCJwlZGA0ansRlYVNZTEahieEYG/WUR+HPmbN8CbYqCSQVsr4IFBaM
      +/wbSjMTECho7GDBtXuR9OzZGxU6QiJf0Kd7W1p17UN8xH0qjCr69e3N04e3Qe1cK49y3Isw
      wp7EMW/uAuzUSpLiowl9FM53s2fT1N2F/Owi6jVowjdfvE94VMy/9nFI73Z437iN5NQYO7UK
      IRtJi3vE+sOXmDb1G+zqebBhyza+/XwcC5atNpHtJCVTJ49n584TSNWmLUFFsZ6/8l3qNWrN
      lu3b+Pj94cxfue5vZL36bi2Y9J/vWO71LYH+NePduFlrPh41GN9b1dwGiQGdm+B/2wd1gw5m
      faTEhOHSvDuPA+7WIlh17DaQSZMm8cnoN7GwtmfJhg3M/Xkie1fNp1Aro6ko4dKRdVh0fItu
      rd2pLMok32BPZtQzymvR6yUGdm3G7Vs3ULu2f4nsInjr9f5cu3iBclV9nGwsAAVKuRytoXYv
      7ZxsKcrN4VXIzcpAqTIt7k3b98GqNIb4LBORrf+b4/lj41oa21ay6fClKnFUtG9qy+07ATRq
      0wOVwuTN3XfEKOLuXaVEawRJQqLc/IacW1KBtW21HSsY9eEXFCdEUlBmmgN2rp5QlMSV81cZ
      Ofr9V5NugVEffM6kSRPp0830aeH9jyYwf8kyMjNjqdRUcsvvAaeO7OfJ00jic0yusR+OGcXI
      sZ+gfsmAGzfvyKRvv2XSN1/iYGeNbNRy2+8Bp48c4OnTyFqsdfMoKC34ad5ylsz34uqJXUSm
      FtGvZxu8z5zFtWV3OrVuzKnT5+jUayAA3foOo6ObmvB/IpxKCv7jtZBVS2YRfmk/j2LTAcEb
      Yz4lyPsslS8dVtr2GMS2nZsZ0saV9Zu3AmBp78bwLi74hFTPL0H0s4dEPk9i6cIFNGjaim17
      tvP5OwNZvWLZKwPENWnbG5uKeOIyS18pn2QsQ2esbUsqKyWyxmSf+krT+MlGI6mxD9lw5ArT
      pn7zis5aMObDz/j2228Z3L971TUjCfHRbD5wkuk/fvlqHQGN23YnMymCc9eD+fBdE5GwKPkZ
      4U+S2HPoDCEP7lOqMzJ6wg//vgGoLa2ZMHU2MTdP8zje9BrRsc8wTm7ayOA33zT1GdCXFxEc
      HMS9u4EoVC/730vUq18fa0vTqaq5eyO27z2M/81rxBZWmht/74NxLJ35G6+/MbDWrjvs/XfY
      unw+/iEPCYuMQyFhXrwEegIDbnHt6nXKdTJJCU85fPgwXos289XHYwHIfP6AHh9+zcwZ09mx
      fiF+13w5sW8z/cb9yJrlM1i5ZC0C6Dfkdb784jNaNGlQJbaK7u2cWLJ2J48fPSIr1xR6YUCP
      9pzwC6eVhyO9W7tyLTIHdzs1Suv6lCffo16zrti4NCf67lmad+/Lyxgw5D2+/PITmnqYyD1d
      +w5iwpdf0KFVE2zd2lKeEsCJ81cIvh+MpKhhb2jKC7lx4wa374WaJ3n/oW+wZdVqeg8fjiSB
      0sKKdz/+gR1LJjHzl8WEB/my4+hJIqLisbGwNmlMgiYdB0JxBEl51dR+iX5dG7FkzRauXb3E
      oyemV8PH/lc4cOocT2OSsFeb3mKinj3k+vXrpGTmUV6aS1BQIIH3H6C2rnnLUags+GDCT5Q/
      8eNeuOl1tv/It9ngtZR3xo8CwKApYc36I+w+sJvODcq4eKvm5JaWEkdgYCBBIY/JSn3Bxq07
      efb8CQYrR1QKiYae7Vm1/Qzq2MucuhTEb2t+Z+r8NXz/+ets2Hq0VvTDfsPfYvOcZbxd1W41
      mnXqj/+xPfQYNKJKL0oG9mvBsmXr8Ll8iXthUSZb7T2cx5d2ce7SVf48eYZKvUxsVDjHDu1l
      2drDfPD+22YdfvfdRPbs24USwfF9W7hyM4D0rGwcrWveet94eySrFy9n+PDB1cWQlJZ8+817
      7Dp2HlDSo5MHa/7Yzx2fy9wJS6VDE2dzG/UbtmDp3O+Zv3A1sjC9YQ/q0prj/kl0a+pU08G/
      xGiJeHyfwMAgouNN4RTCQ+9x1/8eZeU6UsLvMXTiT8yc8Su7183m8kVfAGxtbHF2tK9Vj1qt
      xsHBAQd7OxQKieSwe7w2cSozZ0xn17rZXLnoi9Gg5c4tH6753MYgCyoLM9mweTMPIp5SXmbE
      xlJFpz4D2btpI8NHDKRbj57s3H+Kgb1NAQKtbRxYvHIN+9avIrOonL9C1hazZu3vPAyPoNgA
      NlU8FJWVPR+O6MppH3/zsxfPHuHC1WskZ2dha1/PfP3dTydw88z+Koa+gtdGjuGLLz7Co0E9
      gu5c5djps8QlJWBpV1NG1NKpxOTvJrJ33y7+xluTlPTr2ZgVqzZx49IFgiNNG41n9x5c3r+O
      +/cDOXs9iMb17VGqrRj1yQ9sX/w1M39ZTIXOWPuNQ5Kws7fHwcEBK0t11T0rxn/8JZuW/Mqc
      RYsp1+hJiH2G9/VrRCem1xRVWdKxkSXRhTL1rU3HH++rvizdup4ZM2fx49h+hETGsXPTahD/
      CFmkpqYKIYSoKC4QyanpIi09TQghREJ8nNAbjCI7K01oDbJIjH8uAgICxMOwp0JnMNaqJTcz
      w3xNNhrEo2B/ce26tygu1wrZqBdpmZlClmURGxsrhBAiPSNNGGXZXL4wJ034+fqKsMhoYTTK
      oig3UxRX6ERhTooICAgQAQEBoryyUjwIDhDB98NESbnGXLYgL0sUllb9lg0iMTFVvIiNE9W1
      R0fFiPLyEpGVV/jK/kdFPhC+frdFRrbpvq6yVDyLjhNCCKEtKxRRMSnmp1MTX4i8kkohhBCJ
      MVGiuEJnvqcpzRc5BWU1NesrRWpmTq3W9NoKERjgL/wDgkS5pqZs7IunIiAgQDyIeG6WW5aN
      4uHjx6JcaxBCCJGVmSY0emOVHDEit6BEPH4YJG7e9BdFZZVCr60Qmbn5QgghSgsyRWxCRo0s
      slE8i3wsbt70F8VllVWyaETo/QBx6/Y9UVapFbqKYhEUaNJ1dn6hiIp8KAICAsSTqFjzWMmy
      LBJTTPrQV5aK6MRUkZaRbupDbKyQZVlkZaaJsuICkZKWUdVOuUhIMpUx6CpFaJCpjcAHEcJo
      NMnld/OmyMorFrJRL1LSTeUMeq14EvlURMUnC1kIIcsG8eJFnDDKJjle1a7OKIu09DQhy7JI
      TowXGp1B5Gani0q9UQghi5gn4cLv5i2RX1xu1k1lWZG44+cnHkc+FwZ9pQgICBCPQh+Jskqt
      EEKY7V8IIV48fyLKNAZRUpAt7ty+KUIfPRHGGjMWRr1WPH4QLAyyLISQRXp6WtV4yuLJ4zBh
      kIUQskGEPQgS1719RNFLdlxamC0Kquw48cUzUVJaLHIKioReUyYSUtKFbDSItIwMIYQsUpNT
      zeXycjLMcyQ2MUXkZqeJoKAAERT8QJRUaERudoYoqbZTWS8Sk0zzu7KkUBS8pIeX1wLZqBfJ
      aRmvLJuWkmBq7/4jUz9lWSTGPhV+fn4iITXbXFdkZKQwVtX19OkzYZRlYdBViows05wozEwT
      2fk1czIzLcms5+SEaOHn5ydik0xjXL0myQadCIt8arbHyrJicdf/tggMfiB0BqMoys8WpVXj
      lpwYK3KLSkVFUY7IK64wt2PQacT9oABxxz/APMZCCJGbkS4qtPpXjrcQQuRmpopyrd7cvxeR
      j8XNW7dFYUmF+VpSXJS4cuWqiEvNEkLUnrMpCTEiv7hcpKamm9sszM0UpVX6zcpME5U6g8jO
      SBPaqjKJ8dGioKhIBAbeEwEBASIpM08IIURZUY4oLNOI8qJ8kZaeK4x6rcjIzhbJqSnCYDSV
      rSwtEhk5hSI3M0nUEcHqUIc61OG/FHU8gDrUoQ51+C9F3QZQhzrUoQ7/pfjXjGBCNrLzjw24
      NG6Hs4M1YaF3OXXmEg8fPqJB42ZUZLxg95HTPHz4CFePpjg72pnLVhSls2b9QQYM6oNSkgj2
      88G1eUtUEpRkvuB5ShnuLvacP32JZq1aYaEy7UXnju+hSOdIE496pCdFsWffMR49CEHt4EJD
      VydO7t1GQMgjHj58QovW7bGpIp2kxUdy6KQfvXt1RpIgwNePRi1aIiFz+eIlGrVojVohOHvy
      AvXqWXL88h26d2qHpiyfiBdpeLjXr+40x3ZuBBdP3JztSHrygELZBmd70x+3k6Mj2H/4GPfu
      BeLSpBXG0ixOXAugW8e2VJbk8iQ2k4ZV8eARMke2r0fp1ooGTrYI2YD3hZNc8b5J2LMXdO7S
      Fb+rpynEnkYujoQ/DMW2nhuWKgWFOUlEJhfQ2NUZIRs5eHA/DZq1wcFazb3AYErz0jlz/hK3
      b/oT+eQZjZu1w97W5O7m73Oep/HFtGnZmMqSbIKeptC86o/P3ndu/z/snWd4VUW793+7ZNf0
      3oAkJCSUUAKhSW8KCCIIJICKil1EQQWlKVVAAUGkF0ERQek1jR4IhJKQHtJ773Xvvdb7YYeE
      2J5zneuc8z7nOvl/SfZaM/fM3HNPWTN3wdPNvVU/F+emsnvvPsLDw0FtTztHK64HneDIb6eJ
      SkzH17crcgwc3LOToJBQCssFvL3aIxgaOf7LQYLCrhKdnI1fj87caOL701qJZYXZ7N61i5vh
      txBUFrRztONWyHkO/XaSh1HJdO/piww9x37ew9lLoWSW1tPN2wPRoOPksZ+4FHKFR0np+Hbr
      2uz0rbo4h03bD+Df1x+5FM4dOUDotdtERt7DwcmLa2d/JuxGBJGR93Fy8cbczHhhWF6YxuYf
      fqX/wN5IJRB26lcuhF0nMvIu5lZuPLh6nAuXw7n3KB7PTj6oFU06RKKOb1etoKPfM5gqZcQ+
      uIVeY4/WROTs8V84HxRGdPxjfLv7Im+qY215ARu37qJ3374IDZXcuBmDm5sz929eJKNMh6uj
      HUFhV7C31nIzOhV3F3tCTh3DwtUTTVO5V88cIbawgU4dnBF01WzYsI2e/fuhkErIfRzHL2dC
      8PP1Zu/uHUTcjeRxWg4+Pt7NfMp4dJvDlyLo06MLiCJHf9nPtRu3uXP3Ee4+PmhMpFw8/itn
      LoVQWN6Aj5dbc3s3rl6Bey9je+OjIwi5EYtvF08ALhz7mVKDAml9MXt+/IWHD4yGUN4d3f55
      xmnDvxX+8QugqjCF6Lg0zlwIAyAmOpK+oyYxcewwtny3jfyUR7h06s/EsSNYsfQLyutbVPGu
      njlJbn4m0Y/zAbhzOYwnWlrl2fFEJ+Rz/cxhMisMzYNMX1dOxMPHnDl5HICc9HjsvP2ZNnUy
      h77/jlq9QGJCBoGBgQQGTsbSTNFc3sXT54mJuktxdQMgcutyWLO2hK1JLdsOHCfk2C5KMac0
      9zGnT/zI/ccFNFSV8ig2tZlObVkujxIfc/L0JUQgM/4eWXkVADTUlLB64w6mzpzN66/OQiUT
      KchO5OTvB4hOK6KuooiY+PRmWjUlWcQ+TuPE6SajpAu/Ep1vYM6bcxj1jD8iEJPwkJ07fkAA
      Eh48aFZnLC3IICoh00hI1BP18Aq7fjyCCETevotnlx7MCHiBwsJGAgOnYtfkTlkU9ASHhnMt
      5IJRE6OygIioFrXSK9eut+pjg66WVSvXMmbidN547VXszFQUpEXzW2gM78+di7u2jh+PX+LK
      73uotOjIB3PfJz78dx6kF3H28PeU4MScOXN4pkfXVnx/AlFoZNmyLxk9KZA3Xp+Ng5UpdSWP
      2X/6Jh988AHdXQW2/3qe8EvHyGmw5sO5H5B15zy347M49+tecnUWzJkzhyH+3VvV+3bYRTJS
      4olKLwZEHj2IY0pgIIGBATg5aomJSuClgEACA6fjYK9pzhd25jQZ6ckkZRl17B/evseLAYEE
      Bgbi3sGKh3eimRwQyEBPW7buadHvz3l0nbSCYs5dMapExz26Q25pPSEnD5FSqeDNOXMY3t+v
      lTrm/atBZKQlczcpF5lMTnCoMbjL+bNnOXf+Aog6boReQagrJvx+PLE3g7mSUIpV00KOoCM0
      /D6h508hAmJjFXEPgzh7LQaA02fO8iA5HlFoJCG3nMDAQGSl8VwIj2uuw+nT50mOuUNxU2yJ
      yMR0ZgQGMtDbip9+O8XdyyeJzKrlzTlz6OPbqTlfbmw46QXFnAkx6qDHR98m7EoQ1ToBQVfN
      hdAQImMTyctMxKqjH4GBgQwf2Noddhv+/fGPC0Do2XO8OnchhY/vG/WTJaA2NcXcwpwnkU7M
      zSxw8+zMuy8O4fqjXONDUeRWdA5L5s3gSlDIX9K+dfk0B0Ojefe1F5s11+LuXKPnoBdQNxRQ
      1bRaKFQqTOQyRIzGOKXF2QQHBRN29SYNTaEADY01ZBbpeXf6IILC7v2hJAkDxk5F/ziMQ9eS
      eX3aSABee/0tDu3e/ad6Rd64zOBp71Obl0zjH3TDi9Jj6T1qEmqxltAr16lvChI+5823ObDz
      z7Qirl1meOBcqrLj0Qsi0QnJzJ41nYSY+zyKTwJElKa2jPNz5nRY9N/qcgO08+6LWeVjkrJL
      ETH6i7e0MEelVmFpadns9rUiNxEzxx5428tJySv/B4pG1JTk4uQ1CHcbE0JCL1NWW09S7EMm
      BARiqtEweuJk8rOTiXhQyOtTRqPRmDFzynii7icRFVfB7MDniL57jbj0rL+sf0N5Ho5d+uLh
      oCUoOJSyymoe37nDmMmzMddqGDIhkIrEGGKTUpg+7QXUai2vzw7gzv0oEjNzefmlCUTfv018
      cmozfVE0cCs2ky/mv8OF80bVxdrqEkKDgwkOCaWqwUB1ZREhwcGEhIZR09gSavFBQgGfvjOJ
      sGCjymBjYxWhwcEEBQVTWtOIVCJDq9WitbJAFFqM5n47e41Pli4n8e61VuqmsSkZvBIwmZio
      u8QmPn4S3g5RFLj64DGffzqXsKBQZAotlrIGSitKEcy9UDfUUF6Qida+PTKphLsRV/n2xzN8
      8uEbzW4/8pIfYN1pIB0t5aQ0qSJ3H/ki0dfOI+hqKKjS4+FoVDWVK5VotVrM1GboDUbXwqKh
      jpw6E6YO68XlCKOFcHVJPkGXMAsIHQAAIABJREFULnD0xEX8fHvx4FEMr82ehZmZGS6uzs3t
      OnHuKh99sZzk+9ebmiRh+DM9CbsTT0LEFfyGtMQuiI4MJzg4mNh/ETCqDf9++PsFQBQ4c/YW
      D8IvkZCcSGJWCYJex+7vN7J1x0+88/4HrZJXN9QjazrGqSlK5V50OmeDwrl24yoNfzCMQALW
      NnaIdXXUNTQZhIkiZ06GkpoQSX5ZIZeuGq15T/60lQGjx/LKhx+hlknQmlnQrbsvXTp7IW8y
      VMmMjSQ2KZvbsRmcOXfmL5qip7ahkYbqxmYjDbWVK4M6qAm93yK0oihw/tJF4u9dpyTtAbcT
      81ozSyqnsVGH1tQcH2czLl67A4DGuj39XUy48jCjFa0LwUHERFyhOOU+d5ILQZSiNxho186N
      tJgIypvcToyd9ibXfzvYypDlT5DAnLfmsH/7AWitMdwKF347RUFhDunFRZw+f/Vv0zWTlUoR
      DDrkKjN8vD0IDg1DKpWia2iKlWswIBVBKhGarT0bdXqkchlSiQGDINLew4fIOzf/MrqbRCJF
      pzMgN1HR1bM9oVevIpXK0BuaJlfBgKEpoI6hacHVN+iQy6QIggSDINDBrSPxD242T+TVxVk8
      iHnEudBb3LtyBoMICpWarr6+dOvWBZVcilKtpZuvL127dkHZJJdVeQncjc4g6PoDQi+HoBdA
      JlfQxdcXX99uaJVyaiqz+XbdWo5fuMe8t4wWqaK+jlv373Pp5AlSo8PJeTq6mijBYBBo396d
      pOhbVDXVsb6ygMioh5wPukbk1XPoRfDt1J7zp0/RoWtvvNpZcOpCGJ17G3fNLg7OyMU6Kqtb
      jB2Dzp8mPyuJ4qIszja5W5DINDiqGrgdfg2PHi3Rwh4/usvaNWvINDgxYYgx9GDC7WAy8guI
      jHtM2PlTAJiYWtDN15cuvboTl5yMRJS2imH7pL0370USdOoE6TG3yCozLj69Bo0g+kYIITcf
      MGpQ7+b0Lh5e+Pr64uJk96/ErQ3/ZvjbBaAyJ4H2/UYzM2A6qz9/l5CgK0jlCt6Z9xlLlyyi
      k7sdIJKdlU74tVAOX4himK/R5D7szHk+WvkVgbNeYVI/N2LTChGERtLSUknPyEYUwLv7AOa/
      PZmV675HL4joasupUdrxwTuzWblqFfcunwNg6mufcGrvenZu+oGKmkaQyFEqFCjkcqOlnigS
      fOkay9d/xYxX3qS7VSNFNXoaGmpITUslKyefM0f24TV8Fp+8PIJvt/3S3MbJb77N6X3f82Sf
      p6suRGLry1uvzmDV2tVcOnsWEYGcnExSHqdg0a4zUWHHSczIQ6GWt9rxTnnzLU7u29ZMq74i
      F4VTL958dQZr1q3m/OnT9PfrxuYtP6BHhiAVmvNLZUqmT+jHz2dCWk3tRYV5pKY8pqrWuEha
      OnnSyaKaiKTW/j+aIQpEpVey/PN3+XTRUgoTbiOIIsXF+aSmpFBRVUdDfQ2pqalk5xYgAlpr
      F0oywrkR9RilwgSpQaRzz36c+mkXOfmF/PzjXjx8ejNsmDffbjtMfm42uw+cYIC/D337tGPT
      9wfBRAkNxl3n03wHUFg4UZF6jxv349FoFRgk4DVgCBd+3UFmdh7Hdm7D3c8f/1492L17DwUF
      eWzZeZBn+vfFv4s7m7fvA7kCQdbC7dtXgpg970sCAmbw0rBuRCQXAXIUCgVKEwWiKCCRyJp+
      myA2xRM899splm5cz4xZsxnV2YaU/HJAakzXFPjF1LwdixYv47PPPsRSa7w3SIm6waAX3iQg
      IICP3p5ByI2Wr8y+3TuxedsuRJkJ4lN9evfKBWZ+sIyAgBnMfNaP8IQ8evbpzfe7f2ZQ/+70
      7duTPbt/pVcXo/8lZzcvVnz2HmtXrKZBLyDq60kqEvn0w7f58PNVZMXdarLYljBm+EC+XLmH
      4UNa/NV4de/LsuVf8vbrU5ot9M+E3GbtmpXMfmsu9so6SmoakSKiVGlwtrOmqLySgf17892W
      H0hLT+dhtPHoKC3mFv3HvU5gYADz332F4Gt3AVCa2qKpziWnVou1piX4jUJugkKheCp2bhv+
      t+BvL4FLSsvo1tsfR1tLbBxdEA0GvDzdcXZ2QdUkYXKFgvi4OGr1Ct59/20sNMYBU6mX0c+v
      Kxq1ig5u7WkQ5Dg7arh3/xGFpRV09fXF2tGFzp27YEkt5g6uSAz1OHTwwq2dEyqtORqNGjcP
      d+ztHfDs1BVvNwuKqqWYKxuISUwlPTsfT28fVCYydDI1vX29UamUuLV3waAww1TRQHRMIhV1
      jZhaOzBhzDDadfShobSIjj7eWFlaY2Vhibu7K+07euFgY0FdVRlu3j1xdbLD1MoBU1kj7p7u
      xMTEkJmRgXePvgwf6MeVsDCyiuqYPHE8FmZmWFraYGXZRMuzE/bW5tRXluPu0xMXR1tMrR0x
      lTbgP3gUFrI6rodH0MHbj16dPdFq1DjaO+Hi4Ym5mYpuXbpgIpMikytITYghMzMD+/beuNhZ
      4+jgQLee3RBlCrr5eBmjCmlNcXU1+gURhQa0Ns54dWyPUqXFwsIcl3YdyHqcQGZmBpZOblgp
      dMTEJlKlk9DJoz1SqZwBA/pz9+ZlElMKmfjiRJxd2uPpaM7F4DBs2vny0rihtPPsiqEkjeu3
      Ihk+MZCendrj4dMTSXUW4Xce4ttnMN4dXREM1UTHJFJZp8Pb0wOJRMrgwYO4ff0KyRl5jB07
      AQd7J3zd7Tl3MQStiw8BE0fj0sELWU0hV29GMHD0S/T3dcetky+yuiJuRdzD27c/Xb3ckEqg
      tl7A378nphoVHTu6U1evw8ZCRnRMIukZGTh7dEYjryc6Non0jCxcO3bGXG1ClaCgfy8fVCoV
      bm7taUCFvZUJ9x/Gkp6ejq2rF67tHHB2cWl1iV1RUYNfnz5YW5jh5NIeiaEeLzd3bB0c8Onc
      HZW+gpu37+LRpS/dvT2QSiRU1ejo27c3ZhoVnh07UlvXgLuHO7b29vTt4Yu5lR12to709uuC
      TCrH1MwC787daG+nQa+2xlQuYOPQno5u7VBrtNibq7B16oC5qSk+XXxxcXWlRxcvNGo1Tg7O
      mJub4eL4tH8YEYXanC6dOqJSqejgaI3C3AatWMWjmCQMSltmTX0eV7dO2CgbuXbzNuY27XBr
      50BlRQ09+/TGxtIMB2dje906dMDOzhHPDk549/DHwdYKrdYCZ0d7kmOjyczIoEGQ0NHtr/za
      tOHfFW2GYG1oQxva8H8UbXYAbWhDG9rwfxRtC0Ab2tCGNvwfxT9oATVy8cwZ8ktrQdQTcftu
      K/eoEddDeJxh9EB3/+5dGnSGv6P0lxAMOqqrjdoFj+MfcDsq8T+WUTQQdOZ3du3ZR1pu0Z9f
      iwLnTp+gvEb3p3c1VVXoBRFRX89vJ07ToDOw87vtNP6d8o0oEh99j4TM/KeeCURcD+HQoZ+I
      TkhFMOiprq75RxVOgOy4mwSFR/3H2tiGNrShDf8D+PsFQKhn4euvsnLzDkSxge3fbGxl4PPt
      ymXMWbAUvSiyY9duKuv11FZXkJSUTG1DIyBSU11BdnYOlVXViKJASVEBGZlZNOoMpMbcYOYH
      n1BaVm6shASqKisxCCIGXQOVVbXU11aSmJRETV1LIJhD3y5l55ErKIRaJk+aQUl1AxXl5Qgi
      1FVXYTCISCQiEqmEysoKykqKyM4poLGxgXdenci9xznUN+qRSIx2DRdPn6VRhLrqChKTklvU
      UoHdqxYzYexkbtxvMaR6GHqUxRt/QioRCL0cRl5cJAGz51NcUoYoihTkZpGanoVBEBFFgYLc
      HHILiijNTiQqMR1dYwPlFdU0NtSSnZVFeWU1oqCnpLTiXy4ibWhDG9rwX4m/D1kD9Bg0irKH
      oaTkB/z5pZ03Ay30XLwdDyIYGqqYPnU6Ht06kd2gYe+q95kwMYBuvXqTlFHAmSPbWfThfPTU
      Y+4znA7yNB5F3GTTD7t5ztOWkCIFR745QcDnmymPPMbtAnNSrh3FxsObuOwqLhzbj0wicPzi
      dX44GYqTqYLsR7e5FZPB3sXzOBR0gZ1fzGPkJ+s4f/AQPv3H8GnAENQe/Um8dZ+l364j8lEK
      m9eu4MN573Ns1wFGPzsOAF11CbMDpuPayZv0cim/H9iKTAIvvDEPa1MVZU81W5TJqa4swcrR
      jclTB3D0+y+JfRDOV+t28MoYH+av2Y6TqZyeY2fTTZPF97/cwsW9I+9P7IQo6Fm14E2cBszk
      cfAuytXO2Fq5sfzTqYyfsYybFw/82cd4G9rQhjb8N+Gf7wCkCt57fSpbtv+EiITMR+G89vrr
      nAy9DwaRd+fNY8+WTRhEqMiOJ7m0EXs7B2JuhRN5KZjB0z9g+7Zvaa9RIogSHN3a4+DgQPy9
      GGbOmEHvISNYufhTTKQgiDDphVGcPxfK2fNXGdm/M7GppdjaOZAXF05hrfGISY+IRmGcJrWm
      GmrqGwFpc5gYmv6Kooilsxf7tm9n4qjeWNl3ZGCfzqz45jsGdPdudZxVmJpIelEDtraOpD28
      RnmTEZS9swN/3Jb3GDqJb794lxOHtjHl5YVMmDYdv0HD2br+c65cucqXG3Zy+PBe7oWcJvjs
      dXYe/JED29ehlEk4sG0NsQ0uvBkwBjMbC8pLy+jRrxtKi3bcOLu3bfJvQxva8D+Kf3kJPGDc
      VAruniW1tAKXLn3ZumULYwcb/bI4evWkm0UD58NjUGjNMNdImTR9Jls3raV9p/aEnT/FkSNH
      yaquJfLMCYq1HQicMg6ZTIqJXEVtfgkVVS2Rf/oOe467QUdJKzeje0cH5EpLJkyaynebvsda
      LQWk9PZx4/t9v5CVlsCx0Gj8O7fDINaTl5dLfEZ2q7q32KUY/7E0UZGZnkuDTt8qnVKjRSq3
      4sVpgWz6ZiNmCiNbykqLqaippayglOoao/VnWmwkgtaVZcuWUJTxCFGuorq0hLKKKizVKqKi
      HpAccw+d1gqNhQl3IqN5nJqOQRQZPymAsoR7xGUWM2H6G6xf+QUbV6+luKyYk+cu/6UlbRva
      0IY2/HfhH7yBipSXVeHXvx+erk7UK80YMeQZlEolcpmUsopy/Px64dvVm4Lial6YMg0Xs0Z2
      7T1EndSMCZNexNVKSXVtDY/iU5m74D2Cju4ntaCaHj37MWTYAApSIzhz9T6D+vXBxNIO365d
      qS6Ix3/cZPz9etHOFnbs3k+5TsGwIf2RSaD/4MEEHzvEoZ9/pcDEhndfnY4Jlfx46BgdOnbi
      maHDEOuq6eLXB119Jd179KGmqgK3Tl3o6duOrZs34+TZFVMTOX59/aksK2PI+OdxUleya99B
      6qVmDB7YB6kEdm1axf2MYkpyk6lCQ68untRXlrBn9zbOh9xm/ufL6drZi9KsWA6euMmnn3/E
      +UO7OXcrkZXLv+TZMcM4smcb1x4kM2pYXyyduzB78jOEXI+kMiOWXQePMWbiNIb4efHL6TBG
      Dun3D04e2tCGNrThvxZ/awi2cOFCiouL/9OEDbp6SivrkehrKSippWuTG9n/OgjEPYzC1t0b
      ewvNv07+vwBLlizB3d39XydsQxva0Ib/Avy3WgIb9Hr0BgGFQvHHWNVtaEMb2tCG/89ocwXR
      hja0oQ3/R/GPdwBlZaWo1RpE0UBpRRVqhQnZmRmUlpWjFyVoVErqqqoQpDLkMimiKJCbk01J
      SSlShQqVwoSGuhoys7KpqKxCrdUil0kpLStDpVIhkUgoLswlv6CIsrIyKqtrMDMzo6aynKSk
      JOr1YKY2ISMzi7KyMsrKyhAkMjQqo9O5iuICHkbHIDXRYmaqpq62iqwso92BRmNKY0MtDXpQ
      mMgQBT2l5VWoVUryMlOJS0rFzNwKldLo1VDfWEdGZhbl5RVI5SaolAoK8/NApkRhIgNRIDsz
      E5VGQ0VlJWq1GkHQU1JSikajAVGktDif5JQ0pCZKNEoFOZnplJSVI5ErUCoVSESRwvwcUtIz
      0ZiaU19XjcxE0Ry9CaCkqID8gkLqG/VotRokEgkVpUVERT1CYqLCzFQDgoH0lGTyCkowNTen
      KD+bouJSysrKqKlvxNzMlLqaSvRIMZFKKSooxESlQSaVUFpSSHVNvbHOiBQXFaPWaJFIRPJz
      slBozJBJJQiGRjKzC7CwMANBICcjlfTsPNQaUxQmUrIyczGzMEcigca6WvKLSzE3M0aEq6up
      QifKMJFJKCosQGEiJb+o5X11ZRkV1Y2oFFKyMjMoKysHqRx1U7821lWT8URmNFrkMgmlRfkY
      pAoUJvImOctBpdZSXV5Mbn4BjXoBrUaNpOlTs6aijOzcPKpqatGamtJYb5TDqto6tFotUqkE
      URTITE8hJ78IcwtLZFJIf5zA4/RsrKxtMJG36GVVVZSSmJiExESFVqOisbaSjNxirCyN/vgF
      g560lGRyCoowNbNozltaUkhefgF19Y1oTbXUVJSSnZtPVU0dpqZao+O4irImeRcxNzNFIpFQ
      WV6KXKFCikhObgFm5qaIunoqqutoqKtGodIgkUBJWRkatYqi/FwKCotp0ItotepmrbgnY7i2
      upLaegETmUj8o2jyiiqwsbVGKhHJzcmiuKQUUSJDrVJi0DfyOCmB4rIqzC0skEmb3HXrjM9L
      K2uxtLRA0DeSnJRIWVUdlhZmVJRXoFarn5pCRAryskhNy0Kp1qBSGgPdlJSVGcdhbi5KtRaZ
      TIpB30huTj6m5mbNfVhVVkxiUjKNggRzU1OqK8qRmShANJCWkkReUQlm5hbIZTJE0UB2XiFm
      plokQFlFJWqV8g/tN1Ccn01xaRllZdWYW5g3ezDV1VWTnlOAtaUFIJKfnUVhcQkNjQY0WjW1
      NZVkZ+dSUVGFUqWhsb4WvSA1xiox6CitrDHOS6JIbnY66Vm5qDWmVJUXtcxvVdXoGnUoVSqk
      UgllJSXITJTIZBJKCvPJLyzGIEpQq5RNPBBJS05CY2GDXCqhqrwMqYmyeb4QBT1FxeVotWpE
      wUBhURmioZGcnFyqa2rRak2b5NzA4+RULCwtQTRQWl6ORq1GFIV/WgAMfLtiNUNGjUKoK2Hl
      jl8Z2qsjH82bj1qj5tCOLTj1GkHc+YNUajrgYmeGqK9l7oLPkKNj/47dOHj2Ii/xKnt/v05V
      3mOOHAti5JhhrPpmAyOGDEUikRBzP4KIaxf5+dx1zDQaLNU6Plu0CjsnR25cu0Gnjh7cDL/J
      gZ2b0JtYoDY1x9nehvK8VOZ9vpaOnm7s2/INbr2eIfbmSX4PfURxWgwnzt2gi6sJ+849ZFDv
      zmTH3OBw0CPM6rLZ8OMZ2tsp+XbjTp6dMA4TqYSCuKss2/obcl0lO/Yc4JkRY/hq0Rtklqnp
      59eZsowoRk6cycSAANYsXcbgkWOIDz/LmTsZ9O/ZmdrSDOZ9sR4nW0uu3IzAr3snPvnwQxQq
      JT/8sBO/IaNIu3uJjbtPY2MmI7fSQMjFo7j5+GOubjHH+HL55zToJVw+c5TcKjWeDjI+nL8Q
      d08vdv2whQ6+/Xlw/mcuRWdRV5RBfqWOsuxkzv1+iHupJSiVSrzcOxAXfp4rCdV087Bl6rhn
      ce01AjdbKSvX7eTRrWCsPf3QNhSyfOMenhs1DIlE4M2Zo5G6+NPV3YmYaycJ+PQb5rw8laP7
      NxN8JwmFUEv04xx83SwZO/pZuo+Zjqu1hnOH97By7xECJz0PQMiZgxRIXWnIuseuX0PwMi9l
      4tyVBEybikouZcuaRYQ8zMLfXcuiVd+jlBrYvWMHvs+MwkqjIPH6Ubb+Fk51cToHj4cwdtRg
      Vi9+m6h8gUG9fanMT+aFqdMZPD6A3zYvI7NOQvDpoyTm19Gnuw8SCZzZ+w3Xk4tJfRRBUEQi
      yto0Dp2NICfpHidOXmfoiEGc27+V0xGPEWuKkJg7kXj9V46FRGMqq2PLjycYN3oYUomE0rwk
      5n+8CntnO+JSc+nRxYtLP//Ayp1HmDRpAiZS2LJ+MXE51dSX5pFdVo+3h9Er5rq1yymr1hMe
      corkIoHHV34lMqeKxHvXufownc7OJixY2CLvnbv1Qq2Uc3jnd6ja+aJtyKD3M9N49e3Xybwf
      RPCjcm79to/uw0ajkMKXG75h9NDBrPpkLvVyNeeO/kSN1gWf9g5NY3gNzwzpz7LPFuHdewi/
      7FjP4zKB8rT7XLiVyOA+3sxdsAi1Qs7Pu77HyecZLv68hYSiRnITH6JXWdPO0RZRFFn/1Sfk
      VEB2Yjwdu3Vj86qF5FdJyIyPxaNzR3Zu3M7g4UOaZTkz7jZrdhzFRisl/H4s/r2M2oNfbviG
      Uc/4M3vGJFQuvejs4UTMjQu8uuArAgICUMgk5KU+ZNHKb7G1s+PGlTC69OnPme0bsfDuTfjx
      vYTG5VGTn0pRjYinmytCfQmjxz+LT7+xuNlp2LH9JwYM6Nnc/qWfLcLHbwDrFn6EwsyCnNwS
      vH28mgMpXTuxn0UbdvHilMkoZCLz338bhdaUc8d+olLlTFLEKa7GFJCfFsPPx8/TyUbkt/AM
      +vl2JOXORU7dyaOvb0fib19i65EQTKUNPEhIR6Gv5O61Sxw8cxVzUw358XcIiSumWztTFi9e
      w7DRo1GaSPnm83mU6mWcOHKQUsEc304daKjI5Z2Xp2Pi/gxd3ew5unUDVj7+WGpaIsYtnP8x
      PQaMJCr4CFdji0h5cIk78QWkRN0k7FYigwf2pjQzgRmz3sK732hcbVUsWbgI/6GjyH505Z8N
      wURBgsFgwCAYkDadFHX19mPK5CmUpiRQUatDIqWVrryLZxdemf0mUyeNZ9Wm/Uwc5sOQZ5/n
      xcFdWLdkMbV/CHrSd/AoPJ3MqY3IYfLEcez75isWfPU1nV0tEUURqVTK9OkBFGfGMmnqNGzV
      xp1VeMg5XvvwE4b19MCvow0/XriKnyOMev5FRvRwYfXiJdh59yN333JEJhMacovRk9/g/O71
      rF65GluNCarqfEIfZvN873YggYF9h/Pii/48fJhIg96Am29fSjOj0Isvcvb0RV56eQpypRmv
      TBzKjyeCyLgawrLvvmvaQVQik2sYNGIME8216Oor6OTVkxmzXsVRVk90WjEPL1xj1do1WDX5
      Uk98EPynuxGNjQNTp01HVzaQrQfOEVb3iJkfr2Rkjw74d7LnQNBFnOrzceswnIDnBzcLsMpQ
      SUO7gYzsZQzr5929D8d3naGip5b+YyYRd/8eHjozPHsPZVJvK77ZtQdbaTlvz1vY5PpYpM/g
      F4m5HsLU4X6cvRHD5BH+CPWV3H9czderlyIRBJBIEOsKmPRKAEGnTtDv49d4mFpA/14tl/yi
      KFJVWcwve39j3eZvqU64yMRBQwi68YDJAztSKnfCWWtM27vHQCZPnkjyo1hqm8JhSiRShg0d
      z5RnfVm0aDl6QcTBrTdl2ck06AWuhIUweuwEJCLIZGYEzJiJuTSARZ8toXb6BLQKGRKJkgkT
      JtPFxYxFS9cj4MGIcZMY38+T33Z9Q2RCCjdisli36Ztm18+L9iWzctU6TKQSSjMXk1ZSh5ed
      hqDjx3l3yXL8vZ2etJBbicW8/cIAwqPSGOKpILvekfUL30AQhOYdLIDKwobJU6ehEZ5jw6a9
      uGtVTJo0BQ9rExYt38ypI8eY/9XXdHlK3gH8/bpy70EceXVRzP1gFnejUym8E8/AqW9yPvIc
      gsGAAQkSwcgzK2sXpk8PpGZwD77//SEvDOreNIbhyL6t+D03E09XFdklBr7+fBYSRD779Av0
      gItXFwJnzKSHq5b7icmUFBfT0/95Rg7s0bJDLk+jxMSTRW++AkBNYSLVpl1YPOdlAPT1la3a
      DVBTWYKZmS0jx07EVK1sfi5tmjAGPDuW6NuXeXFELy7fvMfYcYOb05w6dZYFn6+ik6sFojgO
      qUyKRGrMV1xSgIfXaF4a+0yz/ANMnzWbX3ZvZ9DmFS2yKMDhvVvwHzuLju0scXXvwktTpwKS
      Zl6DyI1HWSx45TlCbyfwwmBv2rt4MmXKS5iJNeSX1WEJjBo7EXd1JUkbtuHRawipx9chzhjD
      +Ut3eGHuQgAqyouwsXFm3KSpqJpC3XZysaLSMp3JE8cjCno++/B9ltw6xctzF2KmNgFEtKYO
      BMx8GfXMAD6av4Rp4wdz53Iwry3/nitBZ5g6rCt/nCwkMiVLF83l80UfYWZmzfr1azh2MIXx
      46fR1VnFks+/BESuh15h+ZovCTt3kUHd3+T16ePZ/+sZiiKv/LMdQFzMbdasWcPXGzY3u2OI
      uhfM6pUruJyYgZv932vfKM3sMLMwTtY/71jLtJdfxdrbHzOTfzY9KKtR4GxryuWzR5g5+w0y
      Smr+Ml1FuQRbaysAzK0dkNcY7XX3bFrGtJdn095vCGq5gs6OShJyS3mcX423qw21jWZYqo0T
      cId2DlQWtdj5Bp//mZXLv6QIMFPJQSLDt4MlMam5pJQ04mVnbG+fZ1/k4ZH1+L/4OmZKYxvN
      XXx5Z+YY1i79lJUbtyOIcOdWEK+9OotTkQWM8HWiEQvM1Sb8E6ry0/hs/nu8/dlqxr34ArXV
      lbg4GQPWW9k7UVXXyPS3P0VWmsDbb7xKaMRf+xdSWbkgVmcTcT2cUZNnUpGfQVj4PUYM641N
      u864aUvINvGgq7NVcx6ZiSk2kkZyCvJolFpioZRjaGzA2s4cia6KdatXsnD5KgCUlh2QVKST
      n5mAqYs3ij906/5Na3Do3L05qEqXfkOJu3GV+9eD6Tf42eawijevnGDVV1+RWF6NnfmTGM8C
      +3dvZNaM6bTv1AcTqRREGT072PPgcR4PEgrw7+TUqjyJVIargy164ckGo4EfNq3jk48/wadX
      j6cEXYJHp45U15SiVDu18vuv1Zhg0vTA3sWZ4kqj7UdppQxne4un+iiJarkZHt4+hF48S2N1
      FY6udlQWZ7Nm2Rd8vW1Pc9r6ikK+Xr2CTxcto9eI8UA9WzasYcHHn9Hd34/yJnm/cq5J3ouN
      8t6xWy/S4+9xN6mUV2e+J5XwAAAgAElEQVSMJ/bObbLKq+lgb05NdR5rV61hzZrVxKcY/XHl
      5yYy9713+HjJJgImj20u/1HkZQ5duMuIIX5gaEShcGg6HpLgpDahXoCk+9d4Z84rbPr9NmOH
      +/P+Z0tJfxDG66+9SlRyVlM7ynFu7/hUu8pxaf90/IE/w6ffWJ7r58aSBR+w9cCvf3J1IlVa
      YSmrprC0hApBg52mZT+q1zdia2vOhVNHmB04jYLqFtudGe9+hqEwhrfeeJUrkTEt9FRWvDjA
      g1NhLWMi+u5lDl+6x7AhfgAkRF/l66+/ZuP2veiaogPWlmRQolfQsbMvVy6eRASyU++zds1q
      DpwKoauPM6IIe3ds4ssVKzB17YiJQkMHC5H0whLyaiW0szIeffV9NgB/Dw0LPniT/cfO/qnN
      EqmcSc/1JTyukB7eHf7EM4nMBEdbK0RRJPh2FO7ODugr0imt+2tfaw5uXZGWJuDdZyhKExmC
      rp5vV8xn+itv0P/ZiSAauBmZjJuHF9mpkehFkW6DnyM7bD8+o6b/8wLQ1XcAS5cuZfHCBZhq
      VAD08B/DV6vXsuqt57l+Pe7PmSTGHWDi7cs0ymwBmPnuIkb1cEYqMfuX/m68O6oJuRHNyIkz
      mDZmAOLfWEd5etlwKzIKURSJibiBWQdjZKU3Pl7OwE42yCTG8+YJ40axd9t27Dx8UcgkuNrq
      uJ+SD6LApdA7+Pi0BLAY8/zLrP12M891tCa9KZ7u0JGjObJ1A85d+zczSyKRM2zkVMaM9GvO
      q2+owaf3EDZs3kZpbhrVjXr6DnyWt18LRFQabZWtTat5lJwPiDQ2tvgcehpmjh4sW7wIC6mA
      UqbEzdOLK8G3AHgQfgNnR1dq63VMn/0W27d+zbGTwX/NIIkUF3M1wbdS6N2lHZZmAnfzG+hg
      qQSJhCEDhjJ23Og/ZXt2lD/frFtPn8HG2MkmWgvyU1Mpb1Sw6ItFODhZPWECA3t4sX7zjwwb
      OeJPdD5a9g0WpQmERRplRK6xwFlTz9ErMQzr691s7zBoxBRWfr2B14d141F8TtNTKbPnzMO/
      V1fU5i0L5sjnx3Dhp21oHb2Rt9oNiVSVFRCbmYva5Mm5vQnvzvuUb77bzGtTn2/pp8Y6zp2/
      ins7T2orkymtakAQDOj0Bhor68gtrUIUDEREJODhYAaAdydLwq7dRxSN/RZ68SIujrZEJWRT
      kvMYg4UTCffuoLR05ovFC1BpWna7CnM7PvtiKZu3fs+4Z7oCCuZ+8jnfbvmOmZPG4NNRQ8j1
      aEZMmMH0MQOaF0a1pRNCaQY6nRxru3aU5D+kUeuAUi5Ba+rE4uVLWbp0KV282gHg6OzD0sWf
      gFyCRt0yrLv7j2TrsnmsXrsRnVRDdWUyNToD+oYqkooq0Uqhk98QPp07G0m9gFwCjYKUOe9/
      zPrlH/HL6SsAmDp5EHc7nEa9gF6nw9TJnZjwm+gMxt/CX4zs+roa+o8Yx+ZtO3l0LwKDKCIK
      BhobWxw1jh3al02rv6bb4HGt8jrZWnMjIppxk2bw3NhBrYwk6xr0BL72Dtu3rOHX40Gt8o2a
      8jK3jx9u/prs0Xck3y2Zy+o1m9ALIj49hrJ48WI+/eBNFE2hQsPDgrGzs+XOgyRqSrIpq9Pj
      6tGbpcu+YtuahdwOuYlEAnPeW8D3P+ymviqXep3As8MGsHPrdjx6DGj+UqqrqWX4uMls/eEH
      bt38c5jU6rJcfjz3iFXvTuKHQ6f+wDWR0vwMMkoraCjLorjKwMM7N3G1t/xbR5KhJw7QZ8pn
      pN06R1peOVITFfMWrcDHQY1CZkpZ7mOqRRPuhF/H2VzCzegcJBIZw0ZOZvRI/386ApLg4u5m
      /E8qp52zPRKpnNyM+yz+/DMaRSkfLZxIdkQW2qZdrUQipaYwjYXzPsDctRMfzn2X7Ngb2CpM
      mbRgFXs3ryP8YUfcXVxbGTzJVVocbIwTy3NTX+Ob1StYcusC1ZUGhr1opG3v6ILJU5l6DZ9A
      8Ko1rIy9TnDwdY6cOUX2wxrk5lo+/OJrftjwNfcTPejp3YfSlB94+Y03AQiY/QbLVq3jvIUG
      pW03erlZAmCiNifi6l5SYi6isnJhorMVjvaO2LTzRmow8NzwAcRHlKBoikNsbW+P7Kn6VOWn
      sXzrPrQKDc4dumGmUuLcoR39h40HUWTn4eO8OmcOX69dw1GFkgHPB2ChVbLx669Qmzvy5Rfz
      kAGurs6Y23Zg7deLWb9xJ4uWzids3ZesWBVBeaWO5V8uJuLCYS7ciUOiE5g+bQ4Appa2KJ+a
      eACGD+tHwrk4VFIJA3v6kKMrRtLEeZWZBRZPzhKb+tvByYGOvQYgHDzLoD7eVOdEIZEpmTN7
      Gl8uWYSthRqnzv1BaoKjjTX9BvXgeEg8vu72xNm37AYtrOxQa5TM/WIZazfuxGNiX6xMlPQc
      OZDckBTM1QrsneyRKzTEPghi8ef3kKitWTDROJmpzG2wFS2ZMv8Ltmxaz924Ttg7OaCxd0dW
      XcoLUyZSEhuKSinD1lHD4k8WoVYpeG/uhyiajgSsHNthqlE2H0uYmltz8MeNXPlFzcDxU/Fy
      tmHuu7P4ctGnaNUKXnp7Pu++8wbrli/GwkyLW99R2GuNsjd0QgAbV65gccQFnDr6ojWoeP+t
      11CbyLBTi2SV6Hh5yggWLVyIuVpKz2ETmnnh6uKCQi5troe1cwc0SpPm389Onc23a1aw5LZR
      3odOalrwJDK6eNhRbdcfqcwET1szNN36IgEcO7gjb5K99q4uADi5ueHg6snXSxeweds2vlq8
      CKVcgot7B7x6D2ZschLXIuOZNXkMXyxcglKsYdLMt5FIpLR3daJjjxF88q7I9z8cxt2ymLsp
      pUgbdbzyznxjdRQWTBvfj08/XYRcqmTxyiVMGt2LTz5ZhFyqYvGX88nLjmbJkiUMGD6W8SOf
      ITcpii2HT2CCkr79hxN65jg379zFt9cIJBIpjvZ2dOo7nLIfTvLcwM5cKH7Y/EU2ftps1q5Z
      Q9T1M1TV1DDBRIqtS3sUcim3gn7nUmQiEp2BwMC3m+YeOY62NsgUGl6aMphjd/IwzmEd6NRn
      CM8lJ3HtXhzF+QksWbIEUWHB4kXz0Sik5FfC3Pfewlwlx81GQUpGPrr6HJYs+YJGXQOz3vyY
      4qTrHNq2kiOCDI/u/qhMpHj1HEj6pp956/25zf2d+ug2e09eQiYoGDZ0DDJAptA0z29nTp3k
      vQUL6e5uy4M131Bc+Rx25ko0pno++3ghWjMtiz5bQHZKNJNffY9RfX2oqxzFod9DcXUy57t1
      K7E0t2D+ZwvRSGq4FlfKssVvUDrAnYPHz9O1nQMWFpYsXb2Br79aTWnn7rzx4Tz6dHahZrQ/
      vwRFMbSHK5Y2dihkkn9PNVBRFBEEAalU+qdzxT+m0+v1JN27Sb6JAyN7d/6rVAiCiEQiaaYl
      CgJ6g4BcLvtH+v+5eotN9f5XaST/4bKftFMulzfnEQQB4znm/4yBhSgICCLIZP/Se8j/KoiC
      ce/65DxYEIyB7uVy+R+sskUMhn+WSaHp+KnlbPk/WIf/oLz/V8Gg1yNKJMhlf+99Smi67/lj
      nN8/yt2/kkNRFBBF4+ZQFAUMgoBcJv8P2QX9E1/+p+X/r/HnuQX+83Lw/wP/lgtAG9rQhja0
      4b8f//5LVBva0IY2tOG/Bf+4ABj0+uZLKUQR3VNeNBvqa9EbWq446utqqamta53fYGjObzAY
      Wp49laautobaunpjEYKAoYmm8cjh6ZQitbU1zc8EgwGD0FK+Qa9HEEQEgwGdTodOp8NgEBAE
      A4LQkufpDx5RFKipqW1V54b6OnR6Q9N7sYnWU3xo4kV1VSUNjfqn0jSVqTe0/v2ER6JIbU01
      dfVGbSpBMDS3pXU5Yqty9E/1gSAI6PWGPz0XRQG9/knfiE08bQmiIwpCc30EQcSg16PT6ZrL
      Ep7i9dN98KTPRFFo/l8QBCMNg76Z3pM2POkPo9yIzTRa/y/8BX9E6upqMQgt9dHpdOgNrTUf
      npYdYz0NT73TYzAY+dBMv4lHBkPrPhFF0OsaqKysauahvrGhKXDRU+XpW7fxaT49qYvBoG+R
      0+Z+aUnzx3IbG+qoaoqEJ4riUzwWW8kzQH1tbdMz8am2ik1lNvFI39qz7RP5f0LLSLc1H5/u
      A72+dZ8YWvHVWNZTI4ba2mrq6hubaZeVllBdW9+cQq9rpLKyCqGpbX9s/xO+PMmvN+ibjt1a
      2q5vGst/Xw9obKhv6i8RRPFPMvs0L4SnI1k1v9NTUVlpnDMEQ6vxAaD7ozy06quWMfJkftHr
      W+Sthc8iVZWVzfPJn+tubNsf+SMY9FRWVLbiidg07sSn+r2Zn0/JnCiK6J+i9bRcCYYmvj5F
      9x8NwWZN7I9115G4O1qT8SCUZ99Yyusvv4RUNPDRa4Hk6G3p082D8PNH2XbwN6LvXie3Rks3
      L1dEQc+sGRMwce6JT3t7dvywG/++fmxZtZo+Q4Yik0DQsQPsPR5E5LUgGpU2pN0+yuoDZ5k4
      ZgSJEcEkFkvp0KR1Uleax/jnJtN92HM4W5uxY/Nyjl9JYeTg3giNNQROeBb77oNIj7zKiXMX
      OXboe5LKpUSe3caVxBIG9enJ8X17cOjWC03T7X9R/G2GT3mfKYHT0SpkiKLA4vcCeVxjRt/u
      nagqSGTGW4vISIzit/NXGTVyKDJEtq5aws2oRM6ePomVjTO/HfmJDas3kVOUQ0lRNZcunG7+
      LZHb0t7VlpMHvufXC9e4eeUCoqk7t8OOonDsgq2pgoayNKa/vZCslDj27v+VoaNHozaRUZpx
      n1FTX2NqwAxUcinH93/Ld8du8mz/TkycOJo+IyZhZ67hzsXDvLvmAIEvPsex/Vs5fCKUyBvX
      8ezZB3O1khu/72LLobPExTzEzMaVPWs+5WZUPD8eOIBLpx5Upt1lz6lwBvl3Z+vXX2Hi0hln
      azNWrlrNkKFDibp6hneX7ybgxTFcPLKTCpUrm1YvIiY+kV8P7sPcuSuGrOtci6+nvYXIgkXr
      GfXccORSkQWvPUeluRddPdrx886dWDvYsG/fftav3kRuUQ4KtTPO9hpmPD8erbsf3h0c+O3Q
      9/z4WzDXL50iuaiR3t29kSCwZdVq/IcMRSqBsOPb+HL3GSY9OwIJAovenU6W0I70e5f4af9u
      fg+6QWFpJX7du3Ar9AxHDv/Etr0/k5ebi62FisUrNpCTnsS1Bwl4WEn5dMW3ZKcmcCs6mQF9
      egLw0dy3SEh8zM8/7sOxUx+uXTyMwqEztqYK9q37Cs8Bw1j50XQydbb08vGgqiidMc+/xKgJ
      U7HQKLgVdpZfDv/Mtr2HyMvNQ6wtY+MP+0iOjSQ2V4eyNoWpH69h5uSJVOQkcPZaIt2aVAMF
      XR3vBo6n0a4HXdwdWLvkc+x8/NDqClm49DucrfV8vuoHYiOvE3o3gaGDjBfE2778mKD7cZw8
      cpgGtQP28hL2Xoiin2+LnUZcZAhfrN9FakIMOaU16MuSWb5xPynx0YhqS/ZsXE/H3gMRSh+z
      8puDjBz+DCBycMcGjp+/wa0rV+nefwB7NyzhelQSp48cQuboiZVQxsdfrCQ38zGht6OR1eS1
      4nvXXv4o5RK++nYjw58ZyLmft/OoQM/V3zcTFJXH0L69wFDHS2MH49jzOfZsWEGnPoPQFyWy
      atNhRgwbiEQicvX0QTbuPkpGchRRKZX4dXVh7bZ9DOnfi40rv2bgMKMx2r6vF3H65kN+++Ug
      OpUtPh5GJYOyggw+mvcpuXm5JKUVkHfvIgdOhhH94AF2Lu7ERlzk2x0HyUyO5X5yLn17dkUE
      Vq5ew5ChQ4i4eJRPNhxh6sSRHN+/FdHGnWXvzSI2Ppmfjv2OX/9BmCpEVn62gHsJqYSFP2T4
      oL4ABJ/+ma37fiUtIZrYzBJ6ulsw5eUPyEpL4Mjv5xg4oCcfz/uE3NxszlwKY9DgwcilEuLv
      hXAtuQpNQQQfrN5D8sMIfj1/mdHDBjFn1iQktl3xcXekOCOKZ194mckzZqE2kVKUGcXB4Bj8
      Otox/+NP6OPfnYP7jtG3f2/gHyOCifQYOJabF88zoudcfrsUzrghPZAAxamPcB/0EqkRlxED
      RhF5N46A2W/R27tdq8uQXv0Hcu3kPsb03UBDg3FH2lBXbzQck0BsfCyvvLqAbh4OSCQSzh29
      h5NpEdcfZGCrN/D05ibyahhvzH2f4DMh+H38MkoLayRlWVTV6ymOv4Njtz7oDQZGTZjCwJFl
      LPwkg9dfeoGDezKpzY4jPb+KxgZDqxX6+IkgVi58jUthd5k1YSC1xemYeQ0jO+4eemEcgqCn
      36jn+fzNKezfsJzcykY6mENKTgPL1r+FtbnRmqlv725UlKzg/7F31mFVpe/e/6wddKe0WNhg
      YXeOo+M4jpM6Thtjjoqo2Ird7ejY3YGKiIFiYCCoYCAN0p271vvHxg1Y8zvnes95z3t+fK+L
      62Lt9eT9POvJ+76/f06ZWiHQfm89w4OIeH6b7oernQWCILAr4rTOgE4U1Xi178nUUV+xfbEf
      GYVlWBrpoVGp6NbGm4CrD/i2txePEotoaG+BKGpo692V4MshNBwxmMCw53Ru5oKmJIuQqBw2
      LK8+p6uUaoZ89yudvFwBkUtGdoz1nYFMUcDYqf5sWu+PfsAktv5dRr5BXVrX0+rYO+ipSMgp
      417EC+ramVCq0hD14jW/DbFDbuXA1ClTKUh9xl8nbvCZpxFlpQoW+y9g5J/z0JdKAA1uXr25
      dvIIA7u2pbxcjY1zXSZPnkJ+9gImT5mKFIgNC6LL179z/0owA7o0R6lW8cPoiTR3MWGB3yxE
      cSCCAGWlZbpVoFI0wkYGyTnFmCpeI5g5oYeKL4ePxMPFlhjBhcFd2wDQqfcgWjRrzObTN5k0
      8ifuBx2kZcd+/Pp1H2RSCXfO76Ft1wH8+EX3apfcRvauTJkyldyECPYEhmAulCJqtGRDJYXl
      gIh93TbEhd9B/VkPblwNxrt9O92OoGOvz2jRrDGbToYwadTPHFq/ik++GkHftk2QSATCQ8/S
      v3UtDgTcZKCnZTX1yKRn92k18FcehFxmaM8WjB73OzMWLsFclss4n1UUJoTQb+hwvu3dknXz
      /cgv02BpIEGtNmTSn1MxVuUwY+k+OtbpjFJRnR9bpVLQa+DXfNtbOwg8uHGavoO/Z2g3rfFY
      A6ufmbdwCcaqdMbNXotEAHVxOvfjFaxfOguA0px4kjUOLPWZiEZZxOSZC3Ee1J5GrXsw5sfP
      dBfMVeX+BqWlxSRGh3HpST6r/Tuw6dldxKxESpQa4u5dpn6LjqhEGePH/sT8hUsxUqQyce46
      JAJo1ApOBoazbsNq3fGFqCympOL0oay08hSivEzGBD8fLCUqpkyeQc9O3pgayDi8fzd/+Pnj
      WccegNNbV/D9z2No5m6DRlnMlg0PWL1imc4mBLQ2WDZSBal55dx7Ek9tKznlGg0vE7Lp52CJ
      a+1mzJwzl7TYCNZvPcgPXW2x9hrI2OGVqtYaRQEBIU9ZvXyJToNQXZRC0w498P3zZwJ2rSMy
      4iEmDh6MGjMWPXlVuwgl5eVKNHIFAwcM46tPmjLNdz6lKjVN2rYi4s4VBnXzIvDsRTr176n7
      TjRqFWVlZaxZvIgvf5uEiRzKyypV0D96BKRvaI1eSS55RfnkKw2wrlAbDLwQTMcunbAzUxKf
      WcKwUT9zdsdGRk+YyuNXryuFpm/KgI6tOXHhznvT/37ELxzetoJJk6eQkJYDGpFhP/zGid3b
      UFfbSmm4FhZFr379SI99iEYUEUXo3LwuNx/FcPnKLfp0b18RVmTf5tV89ssfmBvLQQMjf/yW
      3Tv3V9tCiupyYrIVdOnUgce3ghGB4PMnadtrIE7mGl6mau0AIsNu8vf2bYS+LMPeVA4SfX4c
      3p8506YxY+EaCkreJZ9/H34f+xMbF81jvM8ckjIK3nl/LfAkvj6TCIzKxMWy0sCucbvuRN24
      wuvYJzi4N0daoZtSq3YjsmKiKCnMQNSzwVAqoSQ3jToN678ndyUnj+xh48aNxMRVGr7J9E1x
      t7NCRMKvv//O7DmrGT3yW937Du09uXX7PpmFKgZ2cOFWZCxFMiPM9KUUZSSwetVyZi/eSOt2
      HUDQsGPdXPLMGtG0jp0uDQE5vw/tws6DH7BXAE6eu87AQZ9ASQq5xUpEjZrzp46yfvUyBIuG
      OtXVatCI9O/RgfOBtwi9eoUu3Xt9TPzV4Nl5AOrXD5k0fiyBN8Jo2f1zShJuM3H8OC6H3teF
      K8pKZd/ePSxbvZPGXq1Rl5ewYcUC5s+fT2DIk4r66eFmJic+q4CH0Sm0aVT7g/kOGDaM8HOH
      GDV2InefxAPQptf3PA48RaGi6vGPyOUr12nftRdyRTp55WqsHOrRpFYJuYb1qeuk9T906+pF
      tm3ZxKt8Y0z1tZ+ySpnH+tWrmDljHt7e7T5YluMHd7Bo0SKOBVwFIPDMETZu3MjjmATsazfF
      SZaI6NgKVzvtIqcoI4W6TSq17Epy0nCrXwcAidwEQwsTGrTpjVHRCyaNH8e54NAP5p2XEsdv
      E2fw26jftH5tNNChaV1CH73i4rVwPu2mnZhq1WlOLV4hc22Hs622HKKqEFOb+igKMli1dD6L
      Nu79YD6gpYKSyPRoXMeFEoV2RVmuVFDbyaZKqHIO7/ubjZu2EPsqDXuXWsjURfjPn8eyNZt0
      KXm3bETYwwgKyqGnlx13I2IoN7TAqIoVZC33RhhrSkiKzaZxyybVyqIoKsCxtjOU57Jw7hxW
      bdIaDD6PvMeuv7dzJjSexi270NZdjz8njGP30TNvHYMDiJw6so1Jo38jR2qCsZ4UqYEV1pJi
      MgqKeZlRSsO3DHRP7d9GRCZ09Kz7jnz+4RJYoFuHhuz4awdN2nRBAESNgrsPnnP38hmKVBoC
      L97A0s6FecuWsODPnzlyYEe1FLoO+IKIwFOUKSvOqKq8s3X1YOHSFUwfP5zVfx0BQG5kxadt
      XDkT+rSyeQozefYihWP791KUk8rDmBwAWvfsx4Pg86QVS3C21BqqxYRfIUHtSPdWDXXx7es0
      x1r1muiUysEv8XEYGXll7D10ipT4V6TnlXIzLIKnoefILyzg0pWb2riudejcrSfr1i3AQKr1
      e+HZoQfrNq2ndz0pF6sMGB+Dc90mLFu7molDO3Lo5Ml33nfv9wXLVq7jm37NCXuZUdkCUkOc
      zNQcPX+VHj0q/awIEjlN3czZuWs3XT/5HAEwtLQnPvrle3KX0XfAYIYPH4abi5nuV2VZIXFZ
      2Qiimm0b/8Z//hTWb9qpe1/Xqz2Pg45jYeNMu27duXBsJ1bODREAAws7urVtRG6ZHK9GdUCU
      8MuEOdgUv+ROZFy13Jt3+YyUBxfJLXv3LFZUlRAZlUjA4X0UFRdwM+wZCBIaNmvBwCHDmP7n
      sA+qDLo0a0vas7tExGTQuqHT+wO9Txr6JoyZPIOVK5Zx+NARJAamjJ3ix4rlizlw6ChvTmyl
      RmZ4t23HJL859GpTH6m+EWOnzGbOnDn069ZUl96Az7px8uB+9KzcMPgIr6exhS0zFi1k9cIZ
      HN2ldSGCRM7IH/qxc9c53TSnUZXzMDKKkPNHkSgKOHftEdkpz3mZZ4FZYTzPkrQ8Ha71G9Oz
      T3+WL5mmswuQykzp0aMTSTmFdGrX+INlGfLdr/j5+TF0gNaIr0uvTxk+fDgNXB1Je/WITGl9
      1EkRxKZpF0LGNo7EPonWxTeytif+mbad1YpCynNKkcoN+X3CNFatWsHx48dRvZstAFZOddi2
      bglbVq+mXKWd+Lx7dOdB8GlKBDMsK3xjpcY8IMegMWVxD4hPzwdAkJlSmBOD3NSOyb5+GCtz
      P5CLFiKgUSl4Gp+Ikb42XUOZHnFJVblO9BgweCjDh32Hq5sdGUmvUUlMmDHTF5lBZZ/1aNmW
      ++cOYeNYl3Zdu3Dq0N84uDeptjxJj39KodQYpzr2RIU/oSr0jM1IjUsGfUtm+k1DkGklZO3g
      SsfO3Vi51h8bEwOG/vgHa9etJfLuTTIKy6kOgc+//p1123bhZVige9+9UwuO79qOXaOO78jg
      i2Ej8a4lcv7mY51MQLuw/qgvIIlMglfHbsxeOpx9v47hSMwdshJf4t6mOxPGfIuqrIC5i9dw
      cPdzHkYlg6qEVt2/0sWXSiRIZAb8+H03fli4n+m+48hMi2b2LD9qezRDvyCGx6klqAuy6D54
      DELOfRCg59c/sLlvFzr1HgpAeMhVvpkwlYFdmlIwuBPrj5/H0USC3MgWMS2SBp+ORRDSkQiw
      aNZczJt0YZafH+2790Mik4Ag4YffR9C582AmztH67Lh89Q6z/WdTr5Y57TwOEHTpHGZ1ezBx
      3I9oVKVMn7sUsVcdnF1dqV+vcuYUVaXMmOGL3Nia9OREJs/6TlvXt/TjJW89b1g1l5RsJcV5
      mXzx42TiHpxkzbL5WFvaMOm3z7h24SAlCRFkZOfjP7jS2laQCnz6SUdGLzjGuPGWXJJJAAGJ
      VELf/r345Ds/ro2bwpMbEqRGNng3NOePCT4YSGX86TcdJytTBJkcUzMLzMy0ng7zc+P4c4IP
      orqUX/+YxJOb5xBc2/LLT1+ycdEMbj1JpENTVwxMbUmOCaf38DEYWtXh1d2LDPlhPACGJqa0
      6Pgp0w31mTplAeO/aYLc0ATf2bOZ+OdMmqzfiJmBFIlMCoKUX38ezDcjFzPOZ1yFvLQjZczD
      23T75id++rI7pbkJLNt6Bg8HGfUbNKC2o0k1Gaa/jmK2nx/uDT1xMxIQpHIaWKuIkzdFLhGQ
      vNlXSyQ6lug3EARB59Uy8sY5tp66gqncEDf3+kReO82OcyEYS/WoW6eBblVkZmFBgwYNKvuz
      VIK0Ig+JRK77RuzqtSLi4lT+3HSCxDsn3pqwKnXVA07sIvj2UwylKup69kQQJEgEaODdk/xt
      mymTaj/erLhIGlwD1v0AACAASURBVHT6lvE/DUSjKGDa/NVEX81n/ORZ1DIoZsK05fzxc1dq
      u7tTt051AiGZgRHNvLxZ4mfE5KmTme/zOxdO7iP3xS0Gfj+ato1dEQSBI7s3EXXdgTqNW+Lp
      IsPMzBQzMzNEtYLlG3YyxW8RhqUpzFq8jvVrZiM1qUVzVynjJvkiR8KMBbNw1nvNrHn+ZCTG
      8NXIP3kedok1hy5gaWCMo5M7Up3cq7eFVCrBrUErhnZ/xsa9p9GXSTCydKQo9j6tv5+JQDSI
      5SzfsAef2f7IixKZu2Q961b5IZHo8Wn3howeOxEnWwsMreuBIKBf0Z+eR4Xi5+eHV7tuSKRF
      zJw6HamqlD6ff4NJxQTwxbffM3XmTFxdHXGu3xp7mR6mZuaYmZkBIv26eTJm3HjcHczBqrau
      3KbWzjyPvMuAXyZial+L6NtBDBs5BYAXT28xduwUJHIBnxmzcLCQc+joBKZHhSAYWuI/azIS
      fVN6ta/PmHETcLU1Rs+hIQjg4ORE/fraO5rc2HCmrNqBo5U15RpDneM3mUSKTCKAIHD8wEYi
      b1qQrzTA0kiORCKlUZtu/DllOX9fDCToeHSV3i8glUoZM20Ok8ZNop7vVO7ePItf4Ws6dun8
      f88OQKVUgCBFJvuPUZsrlQqE/0S8/6eocAkgk+v964YoFZo+EqlUN/j9V+H/S5n+N0OtVqHW
      iOjJtQO5WqVCLVY+/1dBpVIiIiCXfXTt9T8WSoUCQfKmb2k126RyA/T1KuSoVqFWi8jl8v9S
      Eii1SolaA3I9+X+KRlUUNSjKlegZ6L83vlqtQqUWdfX6z0GkvFyB/K1xQq2q6HsfSFurBaf6
      byHSqjEEq0ENalCDf1PUGILVoAY1qMG/KT7OB1BlcyAIgu75Q/+/77kqqsejwkfIh8N/NG9B
      qxvyr8QFrSEFFT473he/+u9iNXVRXRpv5fW+3z8U9v3vhMotniiiESv9m7yRjS78R+r7IRm+
      7/e3fZYIVWXyD/X6V+r/sTJU+58KbeCP9KU38qn6vmp+73sWRVHnV/+9MqG6IsK/XN73/v+m
      fBpEtH5z3i5bRQHfqet7Mn6nP0IVvzKC8I+edP87/AjV4H8XPmoINv/P0dx59JSol8m08GqG
      siSHvXvP06JlY87tW0dYQhGeHnX4e/cu3F2s2X/xHi0b1yUt/jkbt25n57Y9RL94SkZsIgn5
      Euq72bBs+hgM3VtTy0yPTbsO0KalJ6K6lA3LV3ItNJS/tq6mZadezPMZy6PIp5w5E4BXu85c
      vngcC8f6mBrIOL5jC+6ebZBLIO1pCH5LthLx6D4JycU0cNFnzJS5PA6/R8CVe3Tq1A65RGCd
      /wyi0wVaNHHnyM4NGNh7YGmix4ZVy2jcqgP6Mgkndm7BtXkbUp894HDAA/KSH7L37F26dmiF
      gMjSGRMoMrDHWpNJ8J0EPOo7AxC4fy+mbg3Yu3MHrVq3QRBg87qNONYyY9OWHdwKDWHtrnN8
      Oag3AhrmThnNzdv3CQ4Nw7NlKwzkUk7s2czBk+cJCjqPrZMnJ/dvw75Bc4wlZSxbvIH2XTog
      EWDNKn+uhdwi9GYo5ham7Nh/gk7tvXl2/xrB4YlEBR/k2OVQLpwPwMyxLk/vXGDn4bPcu3ML
      hdSYOi4VfvRFkTmTR1Ks54KHuwMPQi+yfP1Orly5SLnGnAZ1nVm6ZA43Q8M4ffIslrU9KIm5
      hf/6PYQ/vEdaloomjbQXkBf37cXExZW/1q1l/5793H0YQVZWIWG3I2jRsgnnD2zgdmw+Xg3r
      smvPbuo1bIYcBTv2HqKllyd3Lp1k38XHdPZuypl9f2HqXAefsSNo3L4vViYGxD26yp9L9/JZ
      v24IwMt7AczZfJJ+PToiAXatm0d4qkCLRrXJiotg2MhZDBw8gMy4aDZu26Hrh8bmtbG3NmDn
      1nXs27ubkDvhpOUV8yj0AqcCLhN47ixmteoQfv0CUms3rEwNiLp9nqdZ4O5gzcPA82RIrall
      aUTIpePo2TfAVF/C4c1LuRiRQsdWTSlIfcaF609p5FFb9yVlvLzFjSd5uNcyZumSDTRv6sK4
      KbOJfhLB45cJ5MTeJxd7nGxN2blxFY4NW2JiICMs6DQbdh8m+GIAZnYOnDmyj727/ubuoyiy
      i0p4GHyRC8FX2b97MzZ1vXCxs/ovGyhq8L8THzUEkxrY4Ovrq/tFMDAl5mUkanEIkTGvUciK
      ED/tSHxMKnpCOcmvMwFwcG+I77RpzJ7pj4/vdNT5ycxfd4perWqRU1xG6M071DdrTmG+GgEQ
      ZEaM951O6osHrCuR42ihj71NPabPmEnwkW0EP0okNyUJRYUqaXJcgs7PdllRJt7dhvD9oNYA
      FGU8w7VpB2aO/oodC6aSkFOCu2EpuWpLUu/fQDO0J106t2fj9r2M6NuQIhNXHalLSmwCJcV5
      rFyzHb9lq7h2ehtFOdlkFSsxV6WTXKigVk4eShs5r9OLdHLJfJ1AuVpEnZVIfGYxbmYKYtIL
      cK7diOnTG3HpyA7sPDpWnLeJyPVsmTlnLk/Cglm/7SB/DGrM7TiRZfPmgkaFQgVWfbqwavk6
      PCzy8e77q07NL6NEg7/fDN1qL+LaOQ4FBHHzbAD+K5exx/8if85fjLwghXlrjtDUDb75ZTzN
      nE2rtW5h2kvktZpzK+g8A3u0ICfrNZ/9MIbOHpbMn+pDsxaNyFPKWDLbl8xn99gZFESfejK6
      9/+OAd2qqxdmpMahxIA/faezY9Vqug//DXcrffxmzkctDiXyZSolknzEgV2IfZmCkb4UCRIy
      XkZTpFBz8+4TskpF1KJI+Isken8hYGZhzeXLIdT9fiBnLt7A2bbS1XVhfj5l+TnEpuVTx0bO
      k9g0PKy0an0XTl2ge8fm3HoUQ+82TZju68Hsmcvw8Z3OmyvxX8b8ybk9a3Ds8j0ta9uyes1S
      xkyciqlQwOJlfzHsc28uXrnF2O8+4VLgHYZO0KpKZqenoO+mtfvIzEjBVSOiUZbwLENJSWkE
      KvEblGWFpKXlVJNPeX4mGVkSdm9aQbNOn2EoUeDUyBvfcd8DUJKbhO+czTiP+5JXhTLszbR1
      vXDtOn/6LsbGSEJpuQpvr+bsXTeHTiOm4G4uB/pSmpfCtJlr8fKorg1Ugxr8K/joHUBa8kuO
      HTtKUHCY1mWuVI6DlYzElESwcMcMNckJr7B0qoP0fdvPij2rnrkT6tJUEl5E0rTPD+QnPuPZ
      vTCatGmjC6pWlrBu03bGTxqFRBB48vAKc2ZMY+HOYHq1qo2iKJd1KxexcOFCrt2OqZbN6aPb
      8ff359iFawBcCzzBtMnjCHxWQB1rYx7fuUGzjr1wM1WRmFuGQ71W2AjpTPY/yLifvq4sgzqH
      UcN/oPv3o7C3MAIEurZrzrVbkVw/d5peAwbyMfTu3YHgy7eJuBlEm259AMhOjeH0rSSGD+pa
      RS7a44Om3l2RleTy6tFzOvcfQGxkKHPnzSU8NgOXRq1pZJ5NWIYhPdpUmvEXZCSweMkSFvkv
      IzmzgO9GTebvBVPp+/1vWBjrIYpKnkRGcPb0aSwcbNGoFGzbsAJ/f39CHzzTpXM1MIheAwdj
      KS0gq0RVUSwRub4x/fp3ICEji6yUlyxaOI8fxvjQs3dfQM2RfVvx9/fn7JXb7xfCmyMMqQwn
      GznxyUlozFyxFDSkJMZh4eCm7SuChAa17XiRkEIpMjydjIhNSgRjW+RSCS51mpEeHYlSVUJ6
      qRzbqlwHIvTs3J6rl2/x7O4VGnj3Bg0gqnmeXsKP3/Tn7pXLVQv1AU2RCr8vZcUEBwWyd/t2
      rGs3pF7z9sQ9vouirJDMMjlOlobvjQ0QH3UPx4betG9oz53otPcHEmD/tsWEpevzabcWAFwP
      Oo2/vz/b9x7HwMKZLk2tGTF2Cb//8rNuch/YpxezJo9j9aa/EaTyyiJXOqhh3TJ/fp06tQoR
      Tg1q8K/joxOAmYUtXl4t8PBwqfhFwLt5Aw4dOIhH83Z4NnTkwMGzeHm3/odsBNwt9Dl57RFt
      WrVGX6Im9NEz2rXUGmuJosjJnetpM/BnHC21Fn9NWnRl1ryFLBrdg4vXItAzseCPidPw9fWl
      S7vqFm0DhvyEj48Pg/toDaW69BnEwiUr6NbKgfD4LALOXSfiZhAJubmcOHEZBIEfRwyh92cD
      MdGr/HCkUksWLJrBxZNHKa/gLm7StgvPw65xJyabtg2r0xC+jXpenUiMvsnl0Mf07eSJRlXO
      8iXrmTxjklaH9y2UFWSSo1BjYWdGelISdZp14NfPO5GYmkdZcQ6R8YWQkURqXqXDOlNbV6ZO
      nco0nz9xsjEl+sE13Jp1JSTgDCqNiCiWEPPyJXZ12zDlt++QyPT4ZfQkfHx8aF/BFyyKaoKC
      7nH19EHi09O5fP1BZaFEkdiYeEwNDbB2qsc035ls2bKSkwEBgJQh3/2Kj48P/bu1/cc2b9u8
      IUcOHKB+s3a0aOzM/oNnaF5l0m/dtgVXjh3Cxq0pbVo35vDBQ9RppLUCFaQG1HUx5vSxI7To
      1O+dAdylcStevwrn3NVwBvXSxkl/dp/I6BS27TlBWNhdCsvfT6P3NkRRRF2SypmwWH4dNgiJ
      3BhHE7hxNZi6bbvp7mn0DCSoy7U7gPKiYgQg6OJ5Xj69y+OYBC6cO/OBDOCrEeMwyI/hZbJ2
      l9y550B8fHz46bvPERAY8PU39O3bDVfbyp1aiy6fsHnzZtrWt2D17tPvJHv3wgH0PXrRvLbt
      v1TPGtTgbXx0AjA2taJevXq4OjvoPsCGnq05fOQM7VvWp0W79hw+fErnwCriQSgHD+wnKjb1
      nbQ6ejfl2JUI6tYypV1jRy49zsDWWHsCVfg6inUHrlGWEcP+ffvJLS4n4VUkRw4f5MyV+zg5
      2GgNSmQyZDIZEkFS7ULs9o1Ajh49SvDNewA8vn+Dg/sPEf4kCTO9chTmTsyf68vSlWt5/TQE
      EZDrGWJsaFa9kIIUl0bt+L5HQ9b+reUwlRtaYVaegmBRT0dD+M5lm6AVo8zQglryApKLpFga
      yrhyeh/xuWruBp/nyJlA3bFVWsoLNm/eyoxZ/nz5xZfUb9eHyPNb2X34OKcu3EBfJmXbhtUM
      +X0a/gsnsXDOct44NCwpSOfokSMcOXyEuPhY1m8PYMOm1bSrI+FEYBgSmQWfD/mSbp3bIJNK
      0KhVXDx3nKNHjxL+VGslnJcSg0PrrsyYPpVVK5fy5PYVAILOHWLV0sU8zdSjWW0HCjMSOHz0
      KIcPncKuliOgIeTKBY4ePUrI3UdVqv/+1WcDzzYcOXaadi3r49WuA4cPHqNZo8qjCpf6zQk4
      spf2Xdrj3rAlZ48dpU3rCncDAvTt043lGw7Sv1tz3pkBJHo0dpSTXG6ImVwCAgQEXGHZ1tVM
      9fFh1KDW3Hsa/95yvQ25kQl9Bv3E4vGfMWXSfIrKVQzq3Ynx83bQv3elOwWPVl4c2rKCCwGn
      CAyLxU5fQVKREUvmz2bWghWoc15RrhEJv3+dAwcO8CI+tUoe5syb58fKRf4UlSt5HH6bo0eP
      cu5iMBpRRCKVY2piUUXvW2TPlhXsOnSMsIePca3lWK3M5YXpzF2xEwtJCQf2HyA+NfNfqmsN
      alAVH7EDEMnKysbGxqb6rxo1ickpuLi4gKghKTEVVzcXRI2C6GfaAcbeuTY2ZkZkZGRha2+L
      AKiVZaRk5OLq5ICqrJjX2SW4OGlXLsqyYmLiEnUaD3XrNyA59gXlarC2c8DexpK8vGxMzayR
      SQWy0zOwtLNDIoCiJJ+XcckAGJlb41bLkucvY9BoBGo5uWBhokdOQRm2VlpS7/T0DOzs7RCV
      5eQXK7G0qLQ2zc7KxNLGFomoISU5FWMTQ4zNrCgvykUjM8JILlJUrsZUX0pBiVoXNz8nG0Mz
      S/RkEvKzXlOsluFob0tedgav07O0H7i+MQ3r1UZAJD7mOSUKKU6uTpibaP12lJcW8fz5C2QG
      5jSoX5u09AycHLUTb3JSCo7OTkgESEmKJ69ASxzu6FALlSjB1toStbKczNxC5BIRS2tbHbVe
      bk4mqa+1riVs7B2wt7GivLSYEpWApakRiCLpGVkYG8pISErF1MQcJxcnpBKBlKRY8gpKMTKx
      wM3VEUVxHq8StIOaqaUtro5anz/52dkYWVgil0rIzcrC2MISPZm0Wl8RRA2Jiam4uLlUIWIX
      SUxIwNHFFakAyUnJODi7IEVDbn4BVhZmpKZk4OBUi5zcHKysrBGA0qI8NHITpMoSipUClqb6
      5BeXolQosLGxQSIIKEqKKFZJsDQ1rNYP36AwLxuZkTmGejJycrIwt7BGKoG01BTMrGthKBd5
      8jKRZh5Vd5siKYlxJKRkUK9hE2zMDMnJLcDGRnv5mpOVjrGJKXGxcahFcHRxw9LMBGVpASVq
      fcxN9Ml6nYKxpSWxr7RuFPQMjajnXhtENbl5xVhZVZLPlxTm8vJVPAYmVtSv64ZEgLzsDIws
      bJGKSmJj41BUuGh3qe2OmXF1HzA1qME/ocYQrAY1qEEN/k1RYwhWgxrUoAb/pqiZAGpQgxrU
      4N8UH5kAtM7LtP6oq1MQgtaplUKh1NH4fQxlpcUUFBZX+62kqKAaldzH8Ibm7I1v7Ldp8P6j
      KCrIp6RU8c8BK1BcmE92bv57rThFjZqsrOz3+O2uGkZFZlYuGrWS6OhXfOzQTaVUVKPahLfo
      7/5FFOZlkZiS9c8Ba1CDGvzb4sMTgLqQtrXd2Hr0KmhK+OPnkdUGuV+H9GDI0KF06diOa3ef
      60zwq3JTvvl7+vAGJ4JvkxITzrqdhxBFkVtXAwi+97QiTPXwb357A42yjD7tG7Fq10lE4Jdf
      x6CukscbfKgMiCLR4SHsPBaAKIoEBRzmTnT8e8taLW9RJOjINnr2GcSwLwYyafG2yjBv4qlK
      WL5+EwqVpnoaGhWLF84ir0yNpjSHReu3oyzKZsb0haiq5fkmLw0XDu6kZfMm3KiiTx59K5Cu
      vfvy0/BvWbD+b9KjbrN656l36/iWDKLCr7PveMh76ia+E6cGNajBvyc+6guodoMGnN29lmED
      91JeUp08vaTYnL0XTvLi+kH2nDuBOt6GlXtOY+vmweqlc1jjN5XnaXl89s1oOjgbgbKQtWtX
      ceJKJKnJiXzVpgHFGhULZ8xk9Mw5JNw5R1SBOVmPzhPyOI4en33N2J++0WluGDs3IejoHn76
      6lNKShUoSwuZPW0qLxPTGDJmGoPb1ma6jy/peWo8O3Ri5ODuTJo2h8LScibMnMu+tSu4E5VG
      clICXZxN0GiU+E70Yd7qZdw+tYsC00ZEXNjFw9g0Bg//nR+G9EdUK1i7aR8HTp3D3UafTzt3
      I2b4QPb/vR+/2VPYvXwRg8dOxkIDolrB5PEjySkVKdHYMGp4NzZt+YvwqDgWLPHHQlm54xBV
      pcwYP5qo17kMGzmJLz/phoCGMrUJvVs1r2LoA7dunKfv13/g++tgJIKGRaO+Y++dRFITk/j9
      C2+mzFyAIDNj0cpVlCXfZeHK3Tg2asvwPlrjsRsXjxCZLYe4e4Q8iaVDry8Z3NmdNYfvsGrO
      2P+UK90a1KAG/zvw0TsAEytnBndoxN4zWtq43LR4Dhw4wOMXSUAhyxcvxH/VTlo0a8aK9QfZ
      efAILW3KOXT+KmdCH/HbmHF0adOEwozXPItNZcQPw+jc7zPm+UwkOzmO2OQsLPXyuXzzMUeP
      nMBUXcT58DQWzJvFoZ1/ER0VyYEDB4hLzcPQxIERn7Rk+6HzAESHBROXa8TcGRPZtmIFwQd3
      YVK/Bzu2LOZF2EMMzaz45vvv6dHGgz0Hgvhh2Df0G/Id0/74jdexL0jKKMRIk0zI/VccPhaA
      PCeOO2kwZ+YU/t62TevaQVWKysgUVzszBKk+zRo6kvw6m4jwaETgeeRDytUqHoQ9QKVWkfg6
      gxVrNyJJeUaDVt1p1bIpqzdupZ6DGWG3H+rk+vzKeaKU1vhNHcfmzdtQaUQQZAweNpRaFtVJ
      UAYNn0DM1f307N2b40EP+OHXr+nQ92sWTh/JppWr+XP+amaOGcS6zdtYPHcDS9duZ8HU3xGA
      54+usHDVIb7q35WTwSF8O+JXBvTsgK1zfUYM6ft/tSPVoAY1+P8P/3gJ/M3vYwjYvom8UgUC
      AoZGRhVkEBLaderCwpWb+fGLbkhlRlibGuHk7IhSMGfnxqUEnz2Ez5I1OqMtfbkecokMfX09
      XfoDPv+Ci+eOE51QQvO6NmQmp3L56g2+/vpL5FIpRkaGyCrYtQaPGMWVo9vJKipDoSjjddoL
      roWG89W331CuKMfE3AyNSokKCDqyi5M3onGu5YBGqcJArodMKqtGwvDll0M4tOdvchSmuFob
      kZ6QxPXQ+3wzdBASQCozRK80h9jXOWiUpdx/loKzvRliRY3ePvc3MbPExtwMA2MDBIkUA5kM
      PX39dxiRyopLeR0XT+i9J3w7ZMA7jVA1tNzQkj1HT7Jn3UJ2btiGTN8IiUSCvp4epRqBWva2
      2NnXQiwtRCORYGdripWlBQCpyQmojA0xNjZn84Y1PH8Ywq9/TkfP0BiPei7UoAY1+PfGR46A
      BPT19TC1ceHz7l5sCnqMRS03Bn9eGwB9A2s6d+mChUzrYPeT3vXo++nnKIsL+Wtrf3ynzkRP
      LsepuQcSqQSZXIq9kzsvrk9m0mw5n7qbIJNKcGvekdTbI2k51BfXxp54uptyI/QOxib2/D56
      NPU9mqBWlqJnqIeemR2/9mvHhJ03adiyC9bCJm6H3cPCpYxvJo3g2ISpjL52iBLMsbA0I/rB
      SXKfqbGq+yl163lwzWcxs6UiTWUypFIJjTp8QuRPo/nKdxse7TvhYrSO23fDsLSriyARkKDH
      pImj+OHzT9CTqTH16ksdB2tKi2L4auhXJMXEMQUBPX25lpbOQDux6ekZIJFIaVHXgW8HD2b9
      tjXaMAjI5fo06dUbyzXbuH33LrXcmoMgoCorZOLYUdwIucPxhz8xed58hvZux82zO1my/Rx6
      KOn53URq1fPiSfAsJvgJfDtkIL8NHYxGUDN96WaKnwUy+JMBODb2Yvy3Hej9+e+4iE+Y6Dsf
      dVokCokBtazciI28yaQ1Fzi3e+l/eQerQQ1q8D8XHzQE2717N4WFhf+hxEqKi9AzMNK6INCo
      KS9XYmhoUC2MWqVCA9Uo8VQqJYJEWsHZKlJWXo6+nsE/0qGJooZyhRIDfX2KCnJRCvoUJz/n
      wv04fhv+BaUlJegbGuksT1UqJQgSZFUoGVVKBRKZHEkFQUGZQoG+fnWaOKWijLzXyazefoBJ
      06ZhZSBBLQroyf+B1k8UKa9I7913GsoUynfyeh/UKhWiIOjKrVap0IgCcrmU8rJSkMh01HUq
      pRJBKntn1yGKGkpLyzE0MkQAHB0d+eKLL/4h5xrUoAb/m/HBCeDp06coFP+6quT/BJSWFKPS
      gKmJ8f/rovyPh7GxcTXC8xrUoAb/fqhxBVGDGtSgBv+m+EdKSK3ny6p6+SKiqKXCe5sm7004
      rbf76hR9b6gH36Sro0P8AF3eu3R/6OwFqqb1pkxqtZbeUFJxjPTmWXiPB89/ohjUqNVair+K
      tD4W9u36fSjtN5WoRvunlZhOtro0NBrUGhFpxeX323KpSnOpFkWkUikCb+gDtZSSb6BWq6vI
      5ePyfrvs78RFe5SkVmuQVjlG+xh14pv8dA1YLUwl5eM7dInvocB8X9tX9tE31JnaJtOFEUXU
      FXSg0io0kR9qK41GjSBI3ipPJXXn2+VUq9Va+b9Ftalrhzf1f4veUlfeincS4f0UmVXTfEN1
      +V5ZiCLqirJXDfO+MleKuMq3XSFvrdGnWisvqVRHj6rNT1KtvarXQWugKZG+OcqtxNsyfd94
      8PY39OHvTYMoUq2Ob+er0WjQiCJSiaRaOm/aqmr935bR+6lKtV337bHw3f6oHXeqfi8f6mdV
      y/Kh7/BNn3mf3N4nxzeyFkVBN3a879i7ank+Sgm5e9tWvFq3QVOez5bDF2lR35GJ4//g8eOn
      nD59lpaduvH40imK9O2xtTBCVJUzdeoUwu7cJPB6OK1atybuaSjzl23mbkgwCVlleDbxYNvu
      XbTy8kIQBHISHxF0J5b6rrYsX7KaRo3rMOz73+g64HNM9KQ8vBbAku1H6NulNT7TZ/DwwUNO
      ngygQcs2WBobIIoiV84dYduuw1wPukbLTp24EXCEHXuPcTXoGi3bt+T4vqN4tvTU1Szh+X0m
      zFxN/096IZPAse3rCIqMo61XU66eP8KW3Ye5cTUITO0ofHWDJbsv0qdrewRg05JpvCgwpXkD
      F0Bk3aJpBN16wIWTJzFxqE1J+jN8Fm7j0349kAiwf9Nybr3MIDP6JoVyRxxtTNi8agn1vNoh
      VxexZdNG9u7aTljEM3JLVVhKCpm7cBmPwu9z72kKFpI8duzez549e4iKisatkRfmRvrkprxi
      ztwlPHhwl1yVMQ3dHTm4aTEXHqXQqXUzRI2ag9vXcTjgCkEXzuHUwBNbCxMUpXkcOXySZs2b
      sGX1SqycPTh05gxtPJuhUZWxf9cePFu24PKxvfy1/yQhN2/j6d0eIz0p6UkvmbvAn0fhDwmN
      fEl9KwgKT6ZRHSeW+U1GbdmI2rVM+GvTFh6HPcSjZSvKMl4yynchn/XvS1zUXUKf5eLhZk/A
      sT0YOnhgIinmq6/H8tmXn1GUGs2Zq5FEh16ktqc3ehLYsns3LT092bJ0BoGh9zlz+iwujbyw
      NTcGNEz5bTCOLfpgb27EicOH8WjciM179uPtpW3v25dPs3nnQYIvX8TEvhGPQo5z4tYLOrVq
      yuPrF8jWd8DOVB8QObtnK3uPn+f6rfuU5adz9Ohh9uw+QfSLOKLv30TuWB87YwmrlqykaYvm
      LJ49m3sP7nP9XgQd23lr75GAfesWEhyVToeWTchLecKICbMY9NkAZBKBKyd3svPCI7zcTFi7
      aTu3b4Ww+aSZAAAAIABJREFUcttJBvb0ZPSYkXTo8SmGEjUnT56jcWOta+y0xBfMnbuI+3dv
      ozG04+rRjZy6Fsal06fAzI7ajtb8vWEFZ4NCuHAxgDoe3liZG3Dj/CGKjFyxMdLw249/0LZH
      b+TKHPYfPMGli5dp3a4dyqJM1m87RDvvlgiCyPWA42zYeYgrAWeRW9fGzc6QSZOmEvHoIRcD
      r9CqrTfbtvxNa+9WWjrObeup16wV+zes5GTwDQKOn6aBlzeWphUkOqKGuVNGkSs40KieE+G3
      A1m5ZT+3Q67w4Plr2rVqwrTxvxIeGcWZk2eo59maA7t20Nq7rZZade0GmrX1Rl4h23MH/2LP
      2bv07OINaNi9bgUnLmvzre/ZBklxGrPnL+J+2C2iU0tp1awBaJRsWrGE4Bu3uRB4iXputQi6
      /pQmDWuzffkMMqS21Hepxfqtf9G0Xi1Onb1Gk8b1Wb9sOc4NWmCqr2buohV06NSRvKRn/H34
      MoXpT9m66zjXL52nBBMa1HFBWZzLD9/9SLNOPbE0Eli1cg2t27VHVZjO2r8O0aFtKzTqMpbO
      mcvte/e4HHIHKyORXXsOsGfPLqKionkVF8f5Mycr+l08Xi1boC+XsGHRNC7ffsjZs+dwbdSS
      gEPbOHU+iHMB57B1bISDnTkPQ4NYte4vbl8Pwa2JF49DTrJp12GCLp5Hz6427g5az857/1rF
      raeZtPZq+HFKyOQKN8uiWklKahqiRoWLYyN8Zkzl4t4NXH/yGpPsVCQlioqZRY2erSuzpk8m
      +u4F1m/eS5/WFvQcMoLPOzbEf4YvRV98SnxSkm6XoCjOIyOjnCN/r6W2VxfMDUXc3U04fTGU
      kV92JejGfSytjUBUo2flzHTfiTy6cJBb9yJw798FTVkOhwPvsXHtMiSIqEqyOHE1kvWr/JGg
      Qa0oJDW5Oj9BSVEuxrICIuIzaO1mzuO4JEzdTVEUZ3D0UjjrVvkjl0BpmYJ7l8MpyU4nJbcY
      O70yYl/n0aRunk5GihIZPguno8x+yZxNV/m+hx36mmyiU/NobCvjeUoG5ga16PxZb2Yv3obt
      L/1IwxJLQxmCYM4fE6awZ+0cuvw4hdrmUvwmjWXSzGU425hQWlqGgaEBHs1as2T1KqZPm67L
      d9dfmxk2bhrN3G1Qq9VolCU8z1RTVhqJUvyWxKehvCwwY9HsCWjUKlSaN7sbBSmJ6YReOkyh
      njPuDkYkJafo2i854TUlWXGcvRPHymXzkIgaqFjRbFi/kXE+c3Gzs6C0tBTK83h8+BCDuzUh
      s0DJnRvXaOPShUyFPk3Niwh/kY76xR00JfmkFCi4HxqGR69vAXAwNSDsYRSeZhkY6ovcf5GJ
      5lkYFs4deXbvMuqKRVBysravlBRKmLJwOqqMlyzZeZpF038FRCyd67Fj4yZWLZlFemoWiCLJ
      ycm6tj53+hrTli/HTE+gtFzNqft5ZLx6TMzrfhRlZyJRaN1uFKY85srzQlYtmouoUSGRSOnW
      qTWrt19hus+PFGclM27GAvq3d8ehaQc0mc9Q12qC76QRlBQX6RQNNMpiYnIFylIfoRK/QllS
      gJWRnKsPY+jb2p0bEfGYmlti5dSA6dN9CT6xG6u63qAsw8rakh37TjH1l0Gkv66kldy4YRPj
      Z87FzdYclUrDo7NKfOb7Ii9JZbL/YZxIIktelzmzvkSjVqIWtau9uk72nLx+B7v2dogaBXci
      XtHEIBms3GlppODoxTsIr0Jo3u1LJAKolaWcvnSTxStXIlWX8seU2XT2nI2JUz2m+4zjdsAe
      rt59gbo4leScYhz0S4lJLEGV/pgXhcYsnv0HmXGPWLX7IIunj0EAitJikdfy4u6VC3zRtw15
      ORn0/fJHenu5sMBnIsXKrzA3ccR3+gweBp8g8NZz9IvTiU7Jp6GtQEx6Pga6BbaGO4+SMJaL
      5JapEDIf86zAiMWzx5IVH8GK3Qfp56qH94AfGNqtOUVFWuNVRWEmcYWwbL4vytISEMuJ2H2W
      IYM6kpieQ869u/RtVZv01AI0ihJep2Rx+eQOBNvGONtp7xP7tanNqs37KX51m599/Ll3aRff
      jppMc0c95vjNo3/P9kSH3aB1py5cuHidib8OxsPegHNXwkkPO0a3bycCUJoRS66hA8umj6W0
      uBg9QyOaeXrjv2Ip06drv+/i7HjW7gxh+pQfdN97WYmMKQt9KU2JYs3Bs5jLy/lj0jSMVNlM
      n76UxusWse3AWVavXoW+TIJGUciKwEesW7MUdUkO0+YsobPnMmQSgXI0xD5/iFI98ON2AE8j
      b7Fg/nwWLF5BYbHWb0942CVm+kxm8YGb9Grh/E6cN9sLj9a9kEu1JBX3b13j6KF9pJXoYygT
      qkcQ4NT+9QQ8LmDop+0BcGzSmZTHoZQXpqHWt8FUT1vM6Ee3mDtrOlNX7KZ7ey0LWWFaHE3a
      dkAulSCVSil4HUvz9h0rnmUf1LDp2qc3Vy9cJvXlA5zqtUAqQOHrWJq260B2Sgzz/WZx7W44
      iNC7YxuCg+/x6NZVmnfo/eZUCIDcrBgWL5jLwK9GMeSLfgD0+bQvF88GEf/kDnWbeCMFTG1q
      413PiF8mr2X0zz+8SyoDoCkHw9o4WOixZfVC1uw8+qb9q+WJqCa33JIm7rYIgoBMJiPuaRjO
      jdrSvpE9d6JekxTzgm59uvH0YShzZszkWULlJBgafIKlfwcybuRXAMQ8usn8+fNZtGgJ6bkC
      GfEJNG3bDZlEQCKV6la2clMjXK0N2LJhNes37cDA3BaKs4mPuo9H589QFKQQHfmAhi3a0K5z
      B+7cuUNEbArjfvic66GPeJWUTQNXawAatGrL8/AwboVF4TNjFGE3QngUk4ynhytKRRYL5s5n
      /vz5hD/W0n+WFmdx/uwZNm7cQdPmzXV1MTF3pbWzHjcj4t/bzl9+05/JI0ezaP1ORIkUBAkj
      hv/I7q37q8k0MSoG7x79kAho+43w5jBAC2MbZ77uXpe/Lj7l64GdMXdtjkFGBGPHTSTiRYKu
      PWMibuHWrCNtGthy73k6AB17DeDOubNkJz3HxLEh8goCody0OI5ff8WPX/QEoH6z7iji7pGa
      V1qtDnJTI9xsLQABmUxCaXEKSxfOZ+AXP/DJp315GZVC115dibgVyMzZc3nxOh8Ax6ZtSX16
      l4gH4YwYN5roh3e5+zAC7zZe9BwyjLuHV3A/HXp4aq3GVaX5WNo0RV8mRaZvgoeFMaUaeJ3w
      kjNnz3D4zE0a1HWif88OXAy+w/O7N2nYrgupz+PxbNsVAbCr3RST4kyd6K4HXaZ7/4HY6hWT
      UaxlU9u3Yz2//fgdZRYNMJELxETdYs7M6Uxaspv+nZvyyYBeXAq4yvP7ITRr21kn27zEKMxr
      N6Jn+wZcvfWY1OcJNPPuggDYujXBrCSTVv36E3pgC+OmzSElR8vapmdqR2MbCaNGjuLSrXD0
      jS3RkxSRlRqDhUdXxLwMXj26i7unlq3uSsABNpx4yOgfB+jaoF2/r0m5vRebFn2o42CBKIqE
      BF9g/87tYKrl6rh26xHf//wjac/C0IjQ76sRnNm5hPgSJ1rXsQfAyK4eDupUxvwxljuRzyu1
      9d45oqv+rCgvIuLRQw4dOkLt+m669yZWDjRvbk9mehp1mjbDUE+GRCJBUZBJnSaNkEkE9E2s
      salloWM5FAUZXm5WhMdlfXwCaNK8IzP9/PDznYypsVad08u7NwuWLMP/906cu/r4g3HLC7PI
      L9Q2uImxjAPHjjBy/Ph3qRFFGPTtaJwkmTx6kQSARKZPXWsJR4+epXWPSovVhl4dmD1vEYtm
      j+bkpRAADEwtSUuo9J3z9vOHYFbLg/KM5wQG3aJXv26VcRPTsXepz4xpo3gWnwBA3ZYdiH1y
      m2t3ounToUm1dCxt6uLrN5vj+9dz8aR2wLZwbkpJaiRB1x/Qo4d2UkMQGPT11/T/tDe1LD5A
      3CHIUZdnoRZk/D5hOoblWbzdLbSQIBcLKSxT6oQYdPE8L5/c5XFMIhcCzmBiZkFSQjpNWnZk
      +Dd9SEjP1sXu2PNz+no5EnhDSwVZz6sjfn5+zJgxDXtLEWMLM7LTkt/pkyX5ChTo8fuYCUj0
      yxAEGW6OFhw8dpWuXbyxMxEIuBtDm6b1sHFrQkHCA3LLDGjRqQcvbl0AI1MMZdouZ2LlSHl+
      Oq9zS/Hw8KIo4wnZJXLsTPWQ69niN8cPPz8/WjSr4EOWyMnPTuVZnpqh/apTkH454mfO7tqB
      Snx3UvXq2Jvtu7bRp54B2/YdA8DerQnOhtlExFayaJnbWpCelPD+dkHr6iMwJJKGFjIexaQg
      SA2Y6b+S5YvnsnXzRgrKVYDIpcCLvIgM5emreC6cP6ctur4VxrJCzgVeo1evbtr7GpWClUvW
      Msl3EvKK81pBkPDH6BFsWb+z2gKhJE9BeRUHgYbGjvjM9OPYoe3cOH8cSysD0lLS8OzQl2F9
      PEnN0k4ggswYPRREvkilZcs2KItTiUkrp4GDCRKZAZ/378cXI37W7V4kMn3KyzO1fU4USS/X
      YCABmb4eL++dw6bNIBq72eLRugvPw29yOfQRvbu1xtTKlOxM7QJDWZJHkVRrzS6Kai4FhXHt
      7GESMjMJvBwGwHc/j2Xz9l2oSpLILlZSr1F75ixYxIbZwwkIvImjR1uy4+8SfOMBvbtUUogG
      ngsk6cUzgh/GEHQhEBMrU3Le5FuaT6HUBFNrR1Zv3cS88T+xZsm8inshKT+N92XzxnXcu3SE
      8MQ8mjlbsvfIWbw79cLJ1oTDZ67TrYuWWrT7p9/Q1s2A6/ejdHlnJ0VRZlyPqJvXKCrXOqM0
      lCs5GhjC6JE/oior4OaNyP/T3nsGRlm0ffvH9vTNlvRKCqETCL2GKiIiYm+ggqK3BVEEVEQR
      FXtvKDdI770GCARCCRBISAgQAklISG+btn13/h82BrE97//b877u8SXJZq5rrplr2s6cv/Nk
      1S8/k38pj/zKFhSefkweM5wnZjxyqyFJFbwy/wO++uwjtq5dRmnD7S52/g6btZkbRTfoM/ph
      nrwn+Va7dDooLanCx9eX2rL69gW4wtOLmsrGdr9k9vpm5PLfzgFhzMQ7Sd229Z8PgSUy14GS
      kNw6BLt+JZPVq34l5+x5Jj03mdbq2+eQm8VXWPLtl1zKu8qU1+Zjv5lBp8QhvPjIOF5/9Q1e
      fvcjZH9Yl0vlKhYsWsRrc99j4cJXARg1eiSP/+cTdqVMI/e0K11pwQVWr17N5axzDLx/GgAq
      XQc8TFf4+of/IrNbeWz6k0gM3/PNj8uQWi088uQDFFw5x6pVq+jUvQ99Ezu35zukaxRL027w
      pNa1X+kdGI+08Qe+W/Jf1LImVD6xgAVkHsRpbeS16vGSS26T6rY0lbNuzRoMFdfQhnRp/7xv
      XAibshp4Rn1LAyCTK/D2Uv+9vkEiJ3lAB+YuWMyQ3vGUVJr+Jp2UO8b2YcEb7zAgMR5dTAJl
      rT4sfu9tpMLBG2++Saf+D7D09XnYDUXUFF2g57gpty6XyXn+tbeZ/fLLdI5fgETqes9OiQSQ
      oI/pgbFoKd//ZEIpdXLfY0+i81EyNjmR1998hxH9ulFa4doG69enKzPm/5fZC3zp270DM78/
      wBvzvJBJwFZzHf8B/ZEpfDEUZdLj3lfaq04iUxKkMlAq7YxSrkDRXIaIGIFUInGJ8KRSpFLa
      68rL259Hn3yOqIB1zPvgSxa/9SoKGSABD98AkvuH8NPWi7wAVJVdZ9WqVQRFdeRGXjpy70Bq
      blwipu89WCpdi4Mp055m7Jix9HvwGQDCegyh7KcZLHHUIJyCx6dOuW11tGH5N/Sf/Dzjk0J4
      dd7nLJj5AD/vziAhPACl3AelTILD0kKVRcMHC+cjFTbeeOttLI4EkMC44T2Y+/1+Hp82gzQJ
      HN+/kUsVrWQc2s1pTw33JHcFCeg69CBAtZz88luHdmNHJDL3rffp3TmC2G79sZjr2LB2Dcba
      EnwCQkgaNZ7Zs+bQWDmB0uwMhj02vP3ablFe7LnswFcpI9TLQpZB2x7a1EupQu55q33KPf0J
      8Gjhm19Wo2rMxyu0CzJAHxLFq6+/yJLFc1m6VsX0x8YQLLeRb/Ih2FeJ6DmEy0teYp3SxJWT
      Bxhy7zNIJGAoLyIwcTBvvTYNa2stCxf/RNiASFL3buLGGT8MzU48lDLKS/JYvXol1/IySRo3
      HanCgxgtZJSaeUHj6pvCaSe3tJHPPnsXlQwWz38D77h+5C95lXUqC/mnDjJ44jROHtnN2cul
      6LwkqINiADA3lPPpj8uIj0+gut6G3kdFyOD+vPH0Il6aNQd9U2e+35jGnIVeWGpd/WPOOx8w
      84WZxHX4nEitBwsXf8vCj7/i5tl9fPvLJmJ8JfQdPpEJg7rw9mtzePje4Ux8aTZPTBhI9cQB
      /LpjP52fewCFUo3H77wPNN28xGerdtM5JhKLTY6PSs4fV/t/hY86lIn33otHW6O0GJtYu/xH
      mqoqCE0ci0YTSIS6hU++/Al/LxnjJt1HADf4ZeV6rDWFqBP6oJTdGng8tbEYLs//55CQ9XUN
      aHVahNNOXWMLOrUvRdcLsDpAGxhMgEaNqaUJidIbT5UcIZzcKC7CbnMSHB6Bj5cHJmMzTqkK
      bw8lrc0NmOxyJE4rWq0WiUSC3eIK66f28cRQW43S2weL1Y6/jxfVdQ0EBQZQ31CPxl9NyY0i
      TGY7ak0AwUG69sHEYbdScLUAqcKbuLgohN3K1YICZApfYmPDKSkswGIHXUAQAToNFnMrNiHH
      U+akvsWK3t+HhqYWtP5q170KCnCiIDYuFoelBanKB8wtmIUCXy8ZLSYbal8fQFBVVkJDswlP
      b18iwkOxmlpwSlUosNNosqNTe9HQ1IrWX41w2GlsNuHv73tbTTc21OLlp0Mhc207lJcUUmMw
      ERnVAY3aGyGc1Nc3oNPpbns/lTdLqK5vIjomBrvVhlbrcgHRUFeDr0aP02ok/+p1PLz96NAh
      ErlUitNpp7GxFY1GjanJgEVIcTgd6DQaVz51BnR6LQ6bhav5V1F4+RETHYlU6rI8qLhZQk19
      I+HRMejUPjhsZiprGwkNCcJhNVNd30RosCtUZH1tNQovP3y9PKirrkTlo8XH65YbkJbGWix4
      olN701hfC0ov1D5eNNTVodbqkEqgtq4OnVZLQ309Gq3OVT9lpQSGRKCQQX2DAa1Gg8NmpqLK
      QFhYEKUlxRhNFrzVOvS+Kq4XFePpq6FDVDgtTQ14+WqQSyVUlJWiCQzDQ+HqVTaLiav5BXiq
      tURHhoHTTkOjEZ1WTUVlFcFBgUgkEqorq9Do9VSWFdHQaCY6JhY/H0+cDhuGxtbb3oOXtzcW
      hwQflYzaumYCg7TUNxhQ4KSypg6H04lU6UlsZCjNRjP+fr5YjI3UNzsICXKFmhRCUF5aTJ3B
      SFx8PMbGamoNLag8vYmMCEcmlWBubaLgehFevlo6RIW3W4KZWw00miUE6dS0NhkwO6Xo/F2x
      sE3NjUg8fPBQ3JpsHHYrl/PyMNTcZNOxq3yx8BUMhmZ0Gn+cDjtlFTWEh4fQ1FBLi11GWIDG
      lY+xmYt5V9AEhBATFY5EAlazEaMN/NtCj9bU1uPlKae8ogIh5IRHRuLloaCksACj1Ylaqyc4
      QIdEIqHVUEOjRRAaFNhWBw5q6psI1LnyM9TX4+WnRliN5OZdwT8ghNiocITDxvXCa1jtEBcX
      j0opByGorrpJRVUDoRHRBGj9EE4bpeU1RIaH4rBZqKw2EBoahHBYaWq14K/2pdVQj0Puga+n
      gor6JkIDdAing4rKOny8FXh4q1HKpRjqqmmxONHrA/BQykA4qKltIiBAQ0tTE0ovb5TytjoW
      gvKyYmrqW4iMivld/65Hp3Md0jodtvZ2d2ssdrX/3xZEtdWV1Ncb8NcHEah31YlwOrhWcBWb
      U0F8xxikws6l3FxQ+dGlU1z7dpPBUI+vWkNzfa1bB+DGjZu/xma1Ilcq3R5j/x/GPQG4cePG
      zb8Ud0hIN27cuPmX8g+HwE72btvF+HvvAeDE/nXcdIby0PjhgGDJ5wvpc9cz5KVv40ZZNTIP
      H2I69+Dhe1ymkDnph9iaegqlr5aXn32IDz/6Gm9PBV37jmbi2IGUXznFttOlvPjkQxirr3Ox
      UkKYvJHlW/fisFp44MkZdI0JA5zs27mDOyfei9Pawvaj57l39BC2rfmVnOIKlHI/Xpv9IrWl
      l1h74ByvPfsExvpycm80M7B3JwCqblzhlxXrkcqgx8CJjB/aid1pZ7h79FD27djD+EkTAUjd
      upzTBTVIpXKemv4MQRpfEA52bN7H3fdPoO7GBbam5zPjiQfJPnsUj5BELqQsp7jWgsJLzbPP
      TsNHpeBEynZSz17Gx0vDS7OeQyGBI7u3MmD8ZDylsGXvXibfeSfl+bn8d/12hETKMy/PZP3S
      7xBSBUpPf559dhoquYQ9m1dysaAEkw2CI6K5c1gSK1ZtQEhgwoPTCFI2sWz1ZpzApEemk9gx
      DOGw8NFnX/LUjJcIVntyMPUo8WF+bNmb5tpL12iZ+MhU4oK9efO1Oby08DNC1SoObVlOZlE9
      Dqfg0anT6RDkj7Cb+fKbbxBChlzhwZPTnuSXH79DIpGjCY8nQS/Ht0NvenQIYu+WDSQmTyBU
      79NeXmNVIQdPFDP5rj58+fnX2Jw2YruN4JHJI9i3Yz0XrpTgtDl4bNozBPvI+PHHnzDZHMQl
      DuSBu1zmkeaWBr7/4UfsTgnq8Him3TeGzz/7BLnKF7+objzz0F2kbl3PmfwbOJEya/ZsvBVS
      cs+ls21POnKpYOykB4j1M3GlzpuBveK4evEMFt8YfJsusTXjJrOeeRQJgt3rlyKC+3J3ciLC
      aee7rz7HaLXhHdiRGU8+gEIqIfPYPnYfywK7lUenv0DH8ACcdjMff7gQpZcWIfXgPy/+h4wj
      OzmbU4hcKnjgqReIbDM2WLNiCZW1LRhNdh6eNp34ENfZxuqfPiJ+2GP07xKJtbWB9z/+lllz
      55GxZzkitB/jh/RCCAefvb+AydPnEq2T8+M339JiddBzwEjuHDkAU2M5R3IrGT+kd3tPriy5
      zPdLN+KlkNB35HgGdQ7hi++WoFB5ENp5AI9PHInJUMX3P/6MQyIjMLonTz18F3lnDrJh9zGE
      VMn0F2cSrXedHWxeu4zrN2tA6cP0J5+mriSbXQdO0GAwoPHXMPmh+1i+bCVqH298tME8PeVR
      HGYDP/+0jNpaAz5aNT16jSDQ08DetNNYHU5m/GcW549uxSOiF2P6dSPrVDoR3fuj91GCEKTt
      2sLxnKuoNGF0DVGSe6UQo1mg0Ufy0stTKMw5yYaUXN6a/SzCaWf1sp8pr29GqQ7nleceRwpk
      nT7M7oOnkeFk/H0PEyJrYMmGg3h7KYno0IsH7h1BRuouDmXkYHPaefrpV4kO98NpM/PT99/R
      ZLKijerGtPuGs/D9L/Dx9iAkuhOPPjgJu6mRb7/6DptTMHT8/VhvXmHQ3bcObUFwcNc2kidM
      Ro6TrfsOcO+YISz+6AuUKhWagAimTnmEK9np7Dx0GondSrdBY7l7RN/2LbjDW1dSIg3lyUmj
      OX5oN+q4fnSPCmDP5vX0Hnk3O1d+SYvTE4m3lmeemoKvSk5dyTV+Wrkeh93GmEkPcyPrMNdL
      axByDyLiOoH4W2xi0dw32//66ccvxCtz3xR2p1M0V+SLF56YIDanXxcWi0VsW/aZyMi/KaxW
      mxBCCFN9kXh6xmuixWQRjY2Nwmy4IeZ98rNobWkSXy94TexPvyzOH1wlJk+dKi4UVom6glNi
      9faz4uP3XhdFNU2itblRVFTV/Ok57K2V4s1PfxQ3L6WLuYu+FVabTZzc86v4Yu1+kXVil7jv
      8QdFxuUyUVOcK1ZuShVCCOGwmcXLM54WxZX1wmIxiYqKauEwN4g3PvpKOB0W8f68+e1l/PrN
      uaKq1SyuXTonZsycJ+wOpxDCKT5e+LaoaTaLTUs+FY89+5Iw2p3ik7fni3qzXXw8b65oNJrE
      uRMHxOx3PhNVRRfEC7PfFUazRTQ2NAiH03XvL9+cK5rsrt/nLlwo7JYW8eKMZ8TNWld5jcYm
      MXfRx8JsNouDG34QGw6cE0IIYbVaxPWzKeLnzXuFxWIR786aLSoMLcLYbBBlFXXinVdeE1WN
      raK12SDKKutdZbY0iZkzp4gFXy0TTqddfPnZd8Jhtwuz2SzeeWeuMJvNwu5wiIKTu8ScefPE
      0u3p7eWvNppFxbUcMffdr4RTCOGwNIq5H3wuzGazMJstwm5qEHM//EKYzWZhsVpFY2WxmPbc
      q+Jq9knx+tsfC4fTVeCv3pwrGkwm8fpzM8T18nqx9puFYteJXGGzmsU7rz0nLle3iC+/Wixu
      VDeJ6ptXxbw3PhDHdy0Taw+dERaLWZSUlLa/l8XzZ4sTOVeF1WoRZWXlwmgoFx8t+lyYzSax
      5P03xPGc6+K1+fOF2WIVVTeLRYvVIYQQYuf6H8SRnJuiqaFazH5tjrh2aotYsfm0EEKI1F0r
      RMq5InFq30rx0PSXRbnBJOxWo3j9+SliyeptQgghnHaLmPve+8JkMoq0bUvFh1+sFzWll8R/
      Zs0XLUazaGlsEPWGZlcrtTSJRW8tFGazWexe8Y3YcOyq+P67j0VBuUGYzWbh+K0hCCHmvvuu
      MJvN4ualM+KDL79r+9QhFn8wR7zz0bfC6XSKrMPbxENPTBWlda3iiy8WiTfe+UA4nE5Re/2M
      ePTBSSI9r1Is+/oDsf3IaWG1mEVTk+s5GspyxeJfttzWk/POpoj/bj8mTK3NYu7LL4nia1ni
      y29WCpPJKD6ZP1dcLm8U7815Tpy9XCKsVosoL6sUDmuzePrp50WzySLKr+WImW+8136/9xYv
      EvVNreJy5mHx8sxFwma3CVNLk1i46G1XuzAUi3mf/uL63WIVTqdTOJ1OYTGbxafvfiDK6pqE
      zWoNuDqzAAAgAElEQVQSr78wWzQZzcJQVyVq6lvFt18vFFNfeEWY7Q6xbfnPorDWKIQQoqLg
      lHh53sfCZLaIBkOjsFmt4tqZw+K7VQeE2WIRTqdTfLN4kZj50muiusUiqgqyxMKPfhZWq1UU
      FZUIR9tzb1rxlTiZXy0a6yvFa7PniUtp68SaHaeF2WwWVqtN1BSfE/95daFoNZlFs6FW1Btc
      +een7xNfLd8prFaLKC4uFbbmm2Lexz8Js8kofvrwbXH+aoX4ZMHr4viFfGExm0Rzc+tt/f23
      9/vJG/OEySGE02EXc99bJOzGGjFv8dfCbDaJ9d8vFofPFoid678XR3LLhLG1Sbwx6wVhtLme
      3umwinfnvyVemfOGcDiFaKwoEk8//5rIP58u5r7zqXA47eK9OfOEyWwWR7euEMvb+vSSz94S
      WTfqhMnYIsrKK4XVYhFHtvwi9p+5KCxWq/g/3gKS2CUMiAngXH41h1IOM2TsnYAEpVKJXCZD
      rlCgaHOPXJydzYh7HsPbQ4mfnx8yKcjkcry8fXnm5f9w8fIpQMqUJ2awasmK9sAqvbt05aN3
      3+HwiUx0Om173sXXc1m+bBnLV67DZLZxNSufsXfdi0Iup/8d99NyORuAp6Y/z5qfl9xmv241
      1hEQ0Y8gTzsb168l59otleifCwkqpYrYzr2JC/Cn1eYAJCTGh5FzrZwrlSYmDexEQUk1TXYp
      GpXLD4dS5UGvgaPxFVby87KZ+PDDeKqU+Pn7t9tY26wGVi5bxrJlyykoKsNoqCI8fjBhOl+8
      fPxQyaU4HHZaWpqpqWrCw8tlnqdQKFEoFMjkcpRKJcnDE1nw+nz2Hs9Cp1MzdGgP3n59Pikn
      L6DX+bUXJaLzQDxrLlFY2YQApDIZKpXKFUxGpUImlbLt4GlmvT6ba+eO4xQATlpbWqiqrUXh
      dcs8sPR6HmvXrmXj5p3YgNZmA4WFhZRX1eAXFMWTd3Tn8Vfe5s03ZrWLxuz2Rt55fRbdJzxG
      TIiGglK4Y2A35AoVj9yVTHZ2McLhoKa6imuXr+Cl0RPbJYmUFT+ycu0mfP1vvX+zUsXALlHs
      3rGV46czXfe3WWhuaqK21Yi3vxqNrYX3P/qEqhYH3opbzdpkMtLQUIfdrkAigbTUnSxbtox9
      B4+6EggYO7A3aWnnuJF7ksAeyUh+75JIKsPDw5Phk57GYcmj+EoOd97/ILVl11i3fiM1jU23
      2mlBNiuWLWXVwQv07RqG0+GgpKSYwsJCrM5bN21tqGTNmlV89Ok39OkztP1zL89gPFpqaLE6
      OHjyIsMGuuzS5XgR5y+nsKKJLVsPMmGSS6BU2WJi3JA+KJQqfH1vjyT3RywWE42NBkwWkEvB
      2NxIRflNqg0WvFUCqzSKXvFB7N68hvTzeRhriukyeBg+HkpCYrvj43VLh4DE1e87JSUTG2nH
      aJeiVCqRSn9rYxIuZWWwdu1a9qSkIfitn6iQy2QolErkciVdYjUsmP8+5woq0fp7Ilf58MSd
      Sazecuy2Z7905iL3PPwoHiol/mo/5AoFSoUcuUKOSqnEbmqktlXJ9PsGsefgGdRBEdReOcWn
      3y1F6uF12z63ydhKQ30tTocSCYL0I3tZu3YtJ85dJP/MBSY8MpXqoous27iF2hYLAKEdu5Jz
      YDPfLVuLysdlwWdsbaKiopzymmZ8fTxolSsY3KMjSpUHPj5/rfNpaihnxbJlLP/1V8orG9qe
      p4XKigqKb9ajVrve4YFdm/ny4w/x0CWgajPdrCq6iF9UT5LC/cguacAvOJqpozszZfYi5s2d
      iVTish5qaWmmsqEBT29X/03q3Y9vFi1g94E0tDpdW93L2+pQ8f/vDGD4XeNJO7CbizfqSYoN
      +tt0Kk8Vxpamv/xfS6MBicRlF+sfGE1iiIOMPJcAZ/R9U/l00Vs0FJ/n2zV72q/RBkYxavRo
      Ro8cjlIpR6mSYTK7BBROqwmrzCVSU/kGM6qLjpTTV9uvlUjl2GzNKLzUjBg5gsxTtzeuv0bQ
      aGpuH7x79+9PdsYRnDJf+vTpwfGUHfiExvzhEidNllYUChXNhj+LO2Ryb4aNHM3o0aMIC9Yj
      lcmxWlpuS1NaeJlVK1cij+zDXX8QnP3G8Hse4/NP3sZ0PZOfVm1h1OQn+PSjt2i+copf1u64
      Le3zLzzLz98v46/MOJzWZk5nZbF5zVoKck5S1mDE4Whi/apVZFwo4dUZU9ov04dFM3r0aEYk
      D0IONBnqyc/Pp7SsAhBcLSwmSqvlWllt+/2lMk+GD+3Plbw8HE6BXGrFYncNIo0tJpReHthM
      zWxb/S2vf7WWmS89RXBMD35Z+gNdo3S89s5ifhtyLEYHTomcgYOHcflyFgD5eadZuWINfe94
      lMQIHW8u/pwZTzzI0q/eJ6fU0P4ce7dvYPueI7z46kzkEujcvS+jR4+mT6/u7WkS+gwlP+cE
      uw5kMHncoL+0ehEOK8ZWG3KFiubGVgJDIukeoyfrSlF7mpDwGMbeMY67+kWSk1fkMkksuEr+
      lXysjlsTgNJXy5gxY5n04GQyc7Ju5QGMGt6FfYdPYpL5EeB1y358xNihHD5yhNIWiNO6Orfd
      IrD9TiD2Txw7tI+1G7bw9MzX8JJJuHwpi6mPPcTQ+54gQuOJ09EKEjkDh4/iSk4mUoWClibL
      b60FzJY/3VMIJ01NRmR/MYpExndh9OjRDOiX+NdWRBIpT856gzdmz+Dc9v+y50QOAP1HP8jV
      9J00mhztST08ZLS2tPzVXQC4mnmCK9dKOHK+gH17d6Py1fHV0p+ZNKof7746k6Y2dx8Cwa6t
      69m5P52XXn0ZqURC9179GT16NN06RqPylGNsaSYwIo4uITIuFLnas09gBL+sXMqwHh1YMHce
      ZoegKP8Cs/7zOKFDJhEb4o+11YHjfzCn8fDWMmLUaEaPGoVO65pISq9f5s2ZU6BjMr3igwFI
      GjyciffdT21TOeY29W7agd3cKLzEjcoydm7fCwjyC28QpdFQWO4SeVaXX2XVylWgjmdysmvx
      kDRiIt998QFyYzkf/rj6T8/0jxOAwVBFdnY2RW1uBPwComm8dhTP8HhU8r+/NLLXEE5tW8KJ
      M5kcTj2MyeqksvwGqSm7WfD+94y7Y1x72vufns6aX5cAsHPTSnKul6LT+2NpvdUA/Hz9iIyM
      JCI8FJlUQvchw9j432/Jv1bI1+++T78xI9vT3vXEU6Ss/onfNLJKLx2Slqts2n+c+rpaLObf
      XPm5ftTVVZCdnc2Nm5UIp5mMU6dY9uPXyHzD8W6zj9ZFdSJz7wpikoYSHtuVlNU/072vS+Fr
      MTdx4ng6X3/yPrGd+9Kj72B2rPmBjMwLpB46jK0tH5lUQXR0JJGRkXh5qvDyD8Fclc2OfWmc
      TDtIhcFCdEJPXpn1Kg/cMwrZ39jebduyhsvXCtEGaXHYHWzZtIb8wmI0QRrs9tsHA3VIPB19
      DWReK/vTfS6dOcz4J15j2vTpzHlxCofSzyGT+fP8y68w49mpaPxurWKsZiN1dXXUVtdicwpC
      o+KZNGkSQ/snkZ95hGvWYJb/8jU/Lv6QVqvrvUklSkZPnkJHjzrWp5xiyKB4Pv76V67l5/Hj
      2kOM6B2F0kfDC3M/5u0pQ/h48X/JOnmQ/elnkHn6IbPdKkuPGA2f/riCpqYGDK2uybVH0ghe
      nT2LMcP7YW2p59eVK6k32vBWqHD8brX94JQZvPzi88RGBgAQGBhCZGQkAfpb3zCkSh/CfYwU
      tEgI9L416AI0N9Zx/OghFs2ZQ6+R95OQ2J/9m34h58p1auurb5PwWMxGGgz11DU04HRIkCk9
      GXvnBCbdOwk/lZRTx1JptTpwWozU1tXT3GCg1WK7Lb/ew8az6dv59B426rbPIxJ6k3tgOVE9
      BrR/NqR3HO9/9hO5OVmcybrY/vnN0kKys85TXX9rEXbHPQ8y65WZ9OwcBUD/gaPYtWs3W1d9
      x9XSBmJDBd8u30JjUzNNjWY89LHU5h3kTM5ldm1cjjIo4VZ7sBg5eyqdJV98jDwoES/Fn8cC
      o7HZ1WZq6/4UOhVcE+qKlcupqG1Ao/fF8dv7lsiZ/vhd/LxmU/vg1H3YKLb89AmZWRfYfzDt
      DzcSHDpylsVffsD052bSW28n58pF1mzeAVIJKi+PW952kfDIU8/x0gvP0SHcpalpajRQV1dH
      Q0MjXYaMYufSj8m9fpOaqlpE2xBUkHeWbfsPofRUIVe6djm69U1m9bqt5O1ezvm8m/TqGMCn
      P6wiK+ssOZeu43AYuZCdTW5ePo62B1AqPYiMiiQiIsKlTwA69hzAsnU7qT25kfSzLrcnhtpq
      DIZmmhpb2uvqYqmJ9+bP4dW3PqL55gVyTx+i2BnOf3/6gh8+WozR5iQ0sjszX5nFg/eNR9E2
      Ph/YuYHMS9dQa9XYfjemtlXeP3kDBbnMTllVPUpvb7p26YROF0B8dEeS+vRFo9GhC9Dh56XE
      R60lMDAQz7ZCSeUqRo0cwrnTZ1H6aomPi8PR2ohUouTxZ54lKkiDh7cfWr0OtZ+abp0TiI1L
      ICYigAsXspB7RzLlwTvahQsBoWEEBAQgkcgJDgwgIjKGpK7RHEs/Qdeh4xgzoCceXj7otTr8
      fHzp2rMHMXGxaP28kUikDB4+isrCXIrLGnngofvw9fEmLCAAvV6PVGKhoqYBT18/OneJ5UZx
      FR179uPhyXe0u3WVSOVERHVg0IC+eHl4ERPXmb5J3VHKZXj7qCiraKb/iLGMH9kfpaea4QN6
      c/bsWXz8Q4mJDkMiAW1oKEEBAUglEBwYQGBAEEOTR1B4KYcmq4Qe3ToTFRZEwG1iLxcKD28C
      AgLR+PkQqNOQmXkepV8YD983gRC9628PbSQP3XunyyWuRIpOq0Ov1dK1Vy/0gYF0iAwDQK8P
      IDAwCItNSu/ePfDx9CAoNBIvlYSEbt0IDAzgdm8dUuQOC5VVNTQ2NxGX0JnI0CAC2rboqhqa
      GT9uDL5+ajrHRyJX+eLtqXSVNzCQxL79MddVM3DkODzt9ZzPucITz71IqM4XvV5PcGAgHbv1
      Q+tjJ7hDFyqLL1FZY+TZZ5/Cuy3EZtdeA5BbGsjLv86dEyYTHKAjMDQMXZsoSKpQIXe0knsx
      n8F33EdSgkuI5OunISwkCM+2iVzu4UtQeBhqHxVePmpCAgPR6/Vo9Tq6xneke/feBOi1aPVa
      NGo/kICnxIGhoZXRkx9hcM94FB6+jBzcj7OZmUi9Q7hzxNA2kY8Up8Mlius5eBwj+ndGp3OV
      T9E2mzfU16ELDCFE40FhcRm+AdFMuX9Ce8xrrV6LPjCUjjFd6Nc/Ea1Wg06nIyhIj14fRExU
      Av0H9MFfo0Wr09GlRxJ6lY2LVwrpmNANrb8PUrkKU0MtDQ0NaEKi0Pp5ofTwJiwkCLW36xBa
      pvAgMCyMkNBQRgzpz83KWibccz+OxlIuF9zk7kmT0Gv9GTZ0CBlH05D4hPP0o5Pa3S37e3lQ
      WV5J9wEjmTx+uGvbTyIhQB9AQEAgSOXYWwzU1zdgstqIi+nQvjWo1esICgpAJpPj56kgKzuH
      yK6DuGNYElqNDr1Ojz4siri4KOJjY1DIpKg8/RjUrweZmefRBoURHRGKQuVFYKAejdobT30Q
      nTpEoFDIiYuNxUsbir25moLrJTzwxHRCda7Vtq9aS3hIUPviVenlS11tBQ0NDTiVPsTFxjJ8
      cB+yzp5Bro1nfHIv5DIpan8d5cXXuFFWy+NPTkOr9iM0OIiw0AiSRw7hZnk1Y8dPRGaupeB6
      BV27dyciIoDCwpLbyq8PDSUwwOW/KyQwkKDAYEKDAwkJDmX4qBFUlFfSpWsX6iuKaTUJnnr6
      Kfx9PXE67YRHxBAWEoRCoSAmIhijxIuJ48fgq1aTEBuOwsOP6Ngo9PqA2zwN6HVaci+cwyL8
      mT5lMgq5FE8fNYEBQXh5KNw6ADdu3Lj5t+LWAbhx48bNvxT3BODGjRs3/1L+8QygrqKIZb+u
      JPvSNeI7dUKOja3rVnLuQi7NDgURwXqEw0bK7h2kpqXjoQ6iovw6vppAlL8zDTiedoCj6SfJ
      y79GVFQkmzduIPtCDnj5E6RVc+LoUXRhkSilkH7kGIHhEbTWlrBp2y7OnzvHxYsX8fDz5+ih
      /Zw7n4WhxUpkRCjnMzMICHY5wyrIysLp5Ye3hxKnw87h/bs4ePgoci8dMlsj69dt4HzeVWJi
      O3Il5zQHDqVx5ep1omJiUCnkOK3N/Lx0I4lJPdr3K61GAxv3HaVrx1gkwkpW7jU8ZGY2bNpG
      bm4ulQ0tRAb4sHX3Pjp2TEAmlVBRfJm0s9foGBuB02Zi1/bNZJzOJCf3InUtVqpL8zmclk5J
      jYHoiAjkMin1VSWsWbeeczkXCQ7vgJ+3B6bmei7llxMcpCXv/AkMVhk6fz/SM86i91OSd6OW
      EJ0/lTeusW3XHs5lnudi3kWa64wITzX+PkoO79uOJjwOlcxJ+pkcIsNDwOlg17btaIIi8PZU
      Ymk1sHXrLuI6dUFYWtm8YR0nT58nJCqWi5fziAgNAQRZZ08THBLC7u1bOJN5npqGVqKjwpFI
      JJTdKKDBrkTtIeXY4SOoveUUV7UQoL1llrpzy1o81BH4+3kghJOMtAPsTUnFgieRoS6HX831
      Vaxbt55z2ZeJ79wFlVyKsbmetatWcyY7l4DQaPy8lRzYvok9Bw7hkPoREapHIpFgaall6+4D
      JCQkIJVIKCvMI/18IfEx4Qi7mVUr1tEhoTMSeysb128k89x5ci9exGhWEhEegLHhJtfKDOg1
      fpxIO4a/zp8NG3bRuXsXZBIJ1cUFHD6TQ0JsNFmnzhEUHtoe0vTi+Qy27dxDbbOduA7hNFUW
      sWn/Cbp36dhuAVN74wobduwhN+8y2uBwivLO4qkJxUMhI+tUGgofNbs2ryfrQi4WmRehOl8y
      LuQREXK7tZ3d3MAvy7aT2LsbUomEnFNHOJB2nJycHCQOOamHD5B5LpPcixexSVWEBumxtDRw
      Jf8mhqprSP2C8VRIMZSXUFhh4PzJg5w6c55z587ho49Cp/akuryIQ+kXSIiLQiKRkJuRzo26
      VsKCAzA31rB2yy66dO3afkZ3OGUbRoc/gfrbnRy6+d/P334DEE4r78x/lzsm3k+vDhoWfbkE
      u7WVrJwChg0dzN4V35Jb1sy2Fd9wrVbGpIl3oVBAamoKLWb7bffae/Q4Q4YlM2zwAFSimYxL
      pQzqm8jGrz/kaOY11JImPvx2JQVZaRw8mYtKLsVbHUhycjL5V7IZOjyZYH8Pjp2/wvDhQ8k6
      sI6jmUWcO7yfgooGhHCyZstmpAolIDiw6WfOF5q5956JqFQSvv74K4aMHc/A7h2oqm3haHoa
      nRIH0iHQk8UffgNATvpBjh49yImcWxYzRsNNfvzmA47lFIEwc+zwaSpvXKJBoiE5OZnErp1p
      rb/Jf39dSnZhFSDYsXEdqemprsqVKek3YCimystE9RxAt4Q4DhxJI2nAYByVeSxc9CM2Uz2z
      57zLkBFjGTmoF031ra5rhZ2tO7YhgPW//sSmHSkg7KTs3EVz7Q2Ons4DQBMQTHLyEC6cu8rw
      5GQCfVvZkXIMp6WZX75ezMFTV2ipKeXkyXOuwchpI2XfGrbtd9nBZx7Zx/IduzE7nHz57pt4
      h3dj3KghOIEde3a31YSTPVt2IZw2Uk9nk5w8nKLTO9l9/AoAl7KPU3CzgYNbVnGxwoSx4iIZ
      bRYNAHZjDTt2pLBp214Aso5uZkdaIfdOnoSfr8uE12k38+6bb9M5aRhDB/TA3mbJ8+Mnn9F5
      wHBGD+5NbY2BjN2rOVnpYMoTj7Bj5RcUVLksXVpqbrB0+S/kltQBgu0b15GafhiAsvxsDhzY
      z4H0XORKT4YlJ3Mj7xo9+w2iY4LrcNxQmsfJM9e5nJFCyqlLeNDE+tXfkH7BZaK8Yf1GDpxI
      AwT7d25tN1EtuXKSH1akcM+9kwkKdHkB3bt1M6kHdlPRbG2vg9JLGTi8IujXM4EFC95HWBpY
      unInZkMlP286gMphIK+gguHDBrPxx8+5Wl7HrpTDf+qXp/dtJy39CDnXXLEM0nbvpe+wZJKT
      k4mOjWDosOFUXM8hccAwYiJcZTM3VXD4yCnMNcVsS3H5Vt+zfSNNqEhMGsTwoYM4cfhIu/bj
      +uVMfl66hEaLA+G0sXbdGlIzzrray9H9pOzdw+UyV8Qyh6WZ3XsOs279xj89q5v//fztBGCu
      u0Fw75HER4XRN3k8XvYqnELg56MhIiKSmKAAms0WLhYYeGbqRIJCwkiI/nOEMACpTI5Op0Wn
      1SKTSvHT6ojr1J033nmD06dS6TbsbvRNucz/cgWvvDINqUSCwsOLiIgIfH19CQ8Px9fbE2+1
      mvDwCKIjIjBZzdwxLpkDB45hbqzC5qFD66UAAWezy3jxuQcJDA6hc0wUgVovdmzbh1dwPB2j
      dcjkCkLDw4mJiUfgmqxS03P46MM3Sdu97bZnf+DxaexYvQKbU7R3+trKcoqKiqird0Veunvc
      RFJ3pmAzNnLT4kOUxiXokEhlhISFo/VXExwaSqBeg1zlQXh4JJMeew6tqoK8s6cYePdUwjQq
      yqoa8dW4zC9VvjrklgaMxkYUgT0QhkqaKgvxCYm77flUXj5EhIfj5+9HeEQEMT36U30ti9L8
      bMZMmcOVs+kU5GbRMTGp/ZoOvQZTXpCF3Sk4fv4ydwzrCU4zBqFnQnISkTEdCdf7YWqqJz09
      nfT0dOrqXeaKnn5qIiIiSerZk7qGW0FmTqansP1kMc8+ctef3v/J/bu475k5NJbkYnMKDhzI
      5s35MwgMDKJ7QiwAzdUlBHYcQP+eHenYuTuaNhv4qMggtm/aiUmuoVe3aNJOXGXOMw+j0QYy
      /dF7OHk231XXwKTxkziwbR/W1noqHRoi1K66TEtNZ84775B1LAWJVE5YRAT+Gj/CwsLbXSMD
      FFzK5MsVu5g9czpSCQy56z5OHd6H026kxgLRgX7tef3GqcMZzJj1AsFBgfTq2gmEndyyFmZN
      uZvdh07/LqWE4MAQ4hO64KWS0WPQeBqvnuD9RZ/z9LP/QQpo/LRERsWQEB2MwXS7eehvpGYU
      8NGC5ziSkgKAEHaKi4ooKirCLKRERETgr/YlNCwM7R/cjncbOp5Lx/eBsHOxtIFeMYEEhYZx
      If0gwx6aQZTOuz3tpDsHsvtoNrU3rhAU39nlMlo4Sc+6zoJ5L7Bn3xEArp4/QeLw+5A1l2D6
      nwzh3fyv4x++AThQ/s5PuKQtqvyZkykMGzyAZn0PBsZqADl/DPL1R0yGKpYuXcqKNesx/c5W
      XS6XI5G4BmBvDzktZgky2d+7J8o7m8bE0f3JaNEyZmBnIrsNojzvFLmnjtJr0Mi2jikQyG6J
      UyQSXnhrIWMGd+Xrt+eQeuYK5uZ63p41hXuef5MXZv4Hm7Gek2cvcTgtgzNnj2P+XUP28A1i
      VNcgDqTfsrO2CQdOpxO702VX6x0Yi7mukMvnT9E1acj/0cGKQIJSIXA4nCgUSoSA2puX2Jue
      /VuFExOi5eiBfUT2HEKIRsn+1KP06Nv/H+8rU3rjiYW0jBz6D03GaannfN5Veve4ZcctkSiJ
      D/TgSuE1rEod3nIJ4EQqvd0G3m41YbXZsFrtSFSuOinMy+Tt+W+xN7ueB8YNvFUnzc04hUDy
      p4hvgi3b0igtyORa8VXyiqpxOGUo/pBOCCcymZI/ct+0l3j6obFs+Olzft18AIdT3v5uFXI5
      wnHLttknJB5jTQG5Z0/So99QJICwW0hJPUNmRgZnzp6kxf43g5QEWhrrsFhB3ha21FMdjMJU
      xYWMNDomDeevDOYcTgkK+a02W12US35RMWcvFXFs39bfqdIdrFn2DW+/9R73PvAgMpmCaU9P
      pk6oSWr7FnLq6E7emvcmIrArSVHqP+VlbarkbM41jhw7x7H0I23qYjsOpxOn04HzfxCFSRQ+
      BKosFFy9hDokAaVcSm3JJVJyann0rsG3TWydB47l6qn9HEs7wrARLp2NqbGKszk5ZJy7xKlD
      OxBCsGv7AcpvXKayroyjZwr+MX83//v427HKUx/N1ZOHqaxr5GpOBk1GL6QSCf0GjWPb1k2c
      O7WXijojUWFStu05SWNDPeVVtW3qwEYaG5vaRTKemmBeeuklnpv+FF4KKRaLierKcn748js6
      J43g8rnD3JB04OOXH+Sz71b8pXAEoEvfEWzcuoPaMwcpKK5FIlMRo1OyJuU0owe1KTslEjrH
      +7B282EaDQ2UVVSSeT6T6IRuPPLAaK4X3kDlq2XRlyuYOiiSPXtPk3vyKOOfeJbx48czZVwf
      Mi4U3pbvnY9OJWXjr1jatiU6xHQkMTGRDhGhbSkkjOwbzoJfdjJ2RBL/hNPpwNBQx5nDeyhs
      0tGtTz+ObFtGK5707NyR3w/B/fsn8v53axg9rBd9E+P4ecVekrq4hDxGUysGgwGL9fbtNolE
      StfYQHacvU5siJZoteDEFQMR2tvl6ePHjWHB8y8xdIIrLjBSLyTWIs7kFFJXXUFtYyu++jBG
      jRzJqFEj0Hm7BueYLkksev8D5s97AR/lrQXC8PH3M7l/KN8t3+oK4m5swWAw0FRbgndkD+6d
      cCdvz/4PqSmpDBkUxXdLttDYaGhTE4NvQCTFl9IoKK6gqryUJpOrXOezzqIJjuCJxx+gvKSQ
      gX0D+WVTKq0tTaxcv4u+SR1/X3qG9w7lgxX7GT2kJwBV1y7QdfhEJowfx1szJrLr0Pm/fjEC
      eg28g1nT7ua9T39wqTolUob16srCz9cxZlif3ydtJ2lQd35d+iuGxkZulN4k9WAqL81+g7sn
      PUiXEBUl7SH/ZDz21Mt8+MmHjB7iuldQSARJPXq2nzkNHD6RDz5ezLNTH0AqkWC1WTAYDLQa
      XZHhTh3YxxMvz2b83fcwoW80edcrkUg86d4zkcTEXvj7ev512drbhoQxI/rxwaJPGT56BOUg
      ZHcAAAP3SURBVMJhY9Giz3l+xlO0NjVitf1OKCT1JFgpSLtYQ7dol4gu81gKD0yfzZ3jJzAu
      KYrMglIanH48/fj9vL3gbY6n7PibnN38b+VvD4ElUjmJXTqwauUarhTX8PJLz+HtoQCFis7d
      ejC0bzfSzlzgoYceIit9L6lH0tFFJqD1cJJ6KJULV0sZ0NclAxcIOkRFuxq6gAuZp8g+k0nf
      8fczZkB3Tp/N5vHHHyUiJo7G0mKiExLa46Q6HQ6iO8S6VidSGQkdu5A8vA9H07Po3q0jUUEa
      6hweDEn6LVC4hE7de3Pl7EEOph7DL6QD5tpitu/aS61JxtRH70MuhYiIaAYmj6H44klMch1j
      Rg8lQKsmMirSFY0rNACEQKrwIjwkhBC9N74hkcREBJN++CA52dlUGlrplhCHVOVNn6Te4PCg
      f69OOISTiIjI9hWV0+EgKDwaL6WMloYqUvftxazQ8uJzU/Hy9iOxUxir167ncnEDd94xGm3b
      1oVao8MiJIwckIS/JgCBgkEDeyMBTqQdIjc7C3VYPMEaHxwOJ7Fx0UgAnV6D0ltD764dCdL4
      o9KE0q1Th7anETgFJHTtjc0m4a47BiMcDkLDIhk8sB87N67hdOYF4rr1wt9XRWy06zqHAzrE
      xYBUQkxU1G1tRTid+OtD6NN/IGWFV4mMjSPjZBrZ2dnIPXzo1X8IcR1C0QeH0djYxKg776G2
      4BR7UtKQ+uiJjw5DKlOQ1DOB9atXk3P5Gol9+uGplFFTdp016zdRVF7Hk1On0q13f66ePMjB
      tGP0GDqRIb0ScDUrgdTDm6Teicjwom9iAg7hBKeUpMFDCAvSEhkXR3lZNXEx4TgcDiI6RLUb
      KwinE5V/IL2TeiNtKMU3JAovT2+SeiWi8FDTr3cXnE4HURFRCKRExXRAIgF9SAeUxjK27kqh
      2SolPCyMgf374OfrQ0SgP1aJBzq1D0IIfAPC0KlvDdICQKoiLFQPAqQe3kSEh7T/v+DiOU6f
      zqRFqOjYIZySCgPDhg1Ao/YlMiKE+lZBgL+TffuPkHUuE6+AaMIC1DgcDsKjYtsFaBIkSBWe
      REQEowsK5ebNUibcNQ6JrZnsCwUUFl7m/Plz6KI6E6j2QggnfpoAuseGog7tSHxUMAI5cqmS
      IcOGoPXzJS46nJLSMhK6JdGlUwd8/fVYLWbi4mLcAWT+L8ItBHPjxo2bfyluHYAbN27c/Etx
      TwBu3Lhx8y/FPQG4cePGzb8U9wTgxo0bN/9S3BOAGzdu3PxLcU8Abty4cfMvxT0BuHHjxs2/
      FPcE4MaNGzf/UtwTgBs3btz8S3FPAG7cuHHzL8U9Abhx48bNvxT3BODGjRs3/1L+P5InURPC
      4WMoAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Dashboard - S&amp;P 500 Quintile Variance and Cumulative Portfolio Return' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='S&amp;P  500 - Quintile 5 and 1 Variance (N-Positive, N-Negative, N-Positive-Negative)' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='S&amp;P 500 - Cumulative Portfolio Return (N-Positive, N-Negative, N-Positive-Negative)' width='384'>
      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
      dgy9Xk9UVBRut5u6ujrq6uooKioK+vDyer0cOnSI+vp6YmJi0Ov1WCwWKioqGBkZobCwMOj1
      cDgcbN++ndHRUWJiYoiIiGB8fJwTJ04QERFBWlpaUBv9/f289957SJIUmDV0dXVRXl5OTk5O
      IPR6M6qrqzly5MgMLRoaGqipqaGoqCioU/N6vRw5coSamprAvW6xWKisrGRoaEjR4MDpdLJ9
      +3aGh4dnaFFWVhaYkQSzMTAwwM6dO/F6vYE+0N3dTXl5OVlZWYrevlhbW8uhQ4fQ6XRERUVN
      r2fItxler1d+4403ZKfTOeu71tZW+dixY0FtTE5Oyrt27ZK9Xu+MzyVJko8dOya3tbUFtXH5
      8mX5/Pnzsz73eDzye++9JxuNxqA2SkpK5J6enlmfm81m+a233gp6vNfrld966y3ZbrfP+q6j
      o0M+fPhwUBtTU1Pyjh07ZI/HM+NzSZLkEydOyM3NzUFt1NbWyhUVFXO2b+fOnfLk5GRQG4cO
      HZK7urpmfW6xWOQ333wz6PFer1d+++23ZavVOuu77u5uuaSkJKgNq9Uqb9++fU4tTp48KV+9
      evWmx/t8PnnXrl3y+Pj4rO8mJibkHTt2BG2D2+2W33jjDdntds9qw6VLl+bsc9fT3d0tHz58
      WJYkaVb79u3bJw8MDAS1cfLkSbmxsXHW5w6HQ37nnXdkh8Nx0+N9Pp+8e/dueWxsbNZ3k5OT
      8rvvvhu0DR6PR37jjTdkl8s143NJkuSampo5+9z19PX1ySUlJbLP55vVvg8//FDu7+8PauP0
      6dPylStXZn3udDrl7du3yzab7abHS5Ik79mzRx4ZGZn1ndFolLdv3x60DTfS4rbLApJleTr2
      Ncf0KzIyUlHGiT8jYC6vrdSG1+slMjJyVraOWq1Gp9MpylzxZ+1cb0NpFpD8UansuUaESs9D
      lmW0Wu2cM55QtfBngijZV3EjLbRareKMqHBoce0mrmtRms0ky/Kco1KDwaBIB3//nmumofQ8
      fD7fnGESfzaKEhsej2fOaxoREYFGo1HcP8OhxVz3utLz8Gtx/b2uUqkUZ8rdSAt/KCeYFvJH
      xd3muq/1er2iZ8WN+sVtFwJSq9V4vV5OnDiBx+PB6XQyNjZGQ0MDly5d4sEHHwy6SKXX6+ns
      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
    </thumbnail>
  </thumbnails>
</workbook>
